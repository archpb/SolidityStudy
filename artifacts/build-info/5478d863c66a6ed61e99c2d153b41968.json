{
	"id": "5478d863c66a6ed61e99c2d153b41968",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"CSAMM.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract MyCSAMM {\r\n    event Swap(address indexed sender, uint token0In, uint token1In, uint token0Out, uint token1Out);\r\n\r\n    // 2 types of token\r\n    IERC20 private immutable token0;\r\n    IERC20 private immutable token1;\r\n\r\n    uint public reverse0;                           // token0's current liquidity\r\n    uint public reverse1;                           // token1's current liquidity\r\n\r\n    uint public totalSupplyShares;                  // this is total shares minted.\r\n    mapping (address => uint) public balanceOf;     // shares of address\r\n\r\n    constructor(address _tokenAddr0, address _tokenAddr1){\r\n        token0 = IERC20(_tokenAddr0);\r\n        token1 = IERC20(_tokenAddr1);\r\n\r\n        // totalSupplyShares = token0.balanceOf(address(this)) + token1.balanceOf(address(this));  // wrong !\r\n        // reverse0 = token0.balanceOf(address(this));     // add this for the case that deployer minted some token before deployment\r\n        // reverse1 = token1.balanceOf(address(this));\r\n    }\r\n\r\n    function _mint(address _to, uint _amount) internal {\r\n        totalSupplyShares += _amount;\r\n        balanceOf[_to] += _amount;\r\n    }\r\n    function _burn(address _from, uint _amount) internal {\r\n        totalSupplyShares -= _amount;\r\n        balanceOf[_from] -= _amount;\r\n    }\r\n    function _updateLiquidity(uint _res0, uint _res1) internal {\r\n        reverse0 = _res0;\r\n        reverse1 = _res1;\r\n    }\r\n    function swap(address _token, uint _amountIn) external payable returns(uint){\r\n        address payable  sender = payable (msg.sender);\r\n        require(_token == address(token0) || _token == address(token1), \"Token invalid\");\r\n\r\n        bool isToken0 = (_token == address(token0));\r\n        (IERC20 tokenIn, IERC20 tokenOut) = isToken0 ? (token0, token1):(token1, token0);\r\n        // (uint amountIn, uint amountOut) = isToken0 ? (_amountIn, _amountOut):(_amountOut, _amountIn);\r\n        uint amountIn = _amountIn;\r\n        uint resIn = isToken0 ? reverse0 : reverse1;\r\n\r\n        // calculate out mount\r\n        uint tmpIn;\r\n        tokenIn.transferFrom(sender, address(this), amountIn);      // transfer token in\r\n        tmpIn = tokenIn.balanceOf(address(this)) - resIn;\r\n        uint amountOut = tmpIn * 997 / 1000;                             // fee: 0.003\r\n        tokenOut.transfer(sender, amountOut);    // transfer token out  \r\n\r\n        if (isToken0){\r\n            reverse0 += amountIn;\r\n            reverse1 -= amountOut;\r\n            emit Swap(sender, amountIn, 0, amountOut, 0);\r\n        }\r\n        else{\r\n            reverse0 -= amountOut;\r\n            reverse1 += amountIn;\r\n            emit Swap(sender, 0, amountIn, 0, amountOut);\r\n        }\r\n        return amountOut;\r\n\r\n    }\r\n\r\n    function addLiquidity(uint _amountIn0, uint _amountIn1) external payable returns(uint _share){\r\n        address payable  sender = payable (msg.sender);\r\n\r\n        // transfer toke in\r\n        token0.transferFrom(sender, address(this), _amountIn0);\r\n        token1.transferFrom(sender, address(this), _amountIn1);\r\n\r\n        uint bal0 = token0.balanceOf(address(this));\r\n        uint bal1 = token1.balanceOf(address(this));\r\n\r\n        uint d0 = bal0 - reverse0;\r\n        uint d1 = bal1 - reverse1;\r\n\r\n        // calculate share\r\n        /*\r\n            a = amount in\r\n            L = total liquidity\r\n            s = shares to mint\r\n            T = total supply \r\n            s should be proportional to increase from L to L + a\r\n            (L + a) / L = (T + s) / T\r\n            s = a * T / L\r\n        */\r\n        uint origRes0 = reverse0;\r\n        uint origRes1 = reverse1;\r\n        if(totalSupplyShares == 0){\r\n            _share = d0 + d1;\r\n        }\r\n        else{\r\n            _share = ((d0 + d1) * totalSupplyShares)/(origRes0 +  origRes1);\r\n        }\r\n        // update balance, total supply, reverse\r\n        require(_share > 0, \"shares < 0\");          // if add too small , and total big enough, delta share may < 0\r\n        _mint(sender, _share);\r\n        _updateLiquidity(origRes0 + d0, origRes1 + d1);\r\n    }\r\n\r\n    function removeLiquidity(uint _share) external  payable returns(uint, uint){\r\n        require(_share > 0 , \" share should > 0\");\r\n       \r\n        // calculate token out\r\n        address payable sender = payable (msg.sender);\r\n        uint bal = balanceOf[sender];\r\n        require(_share <=  bal, \"not enough shares to remove\");\r\n        \r\n        /*\r\n            a = amount out\r\n            L = total liquidity\r\n            s = shares\r\n            T = total supply shares\r\n            a / L = s / T\r\n            a = L * s / T\r\n            = (reserve0 + reserve1) * s / T\r\n        */\r\n        uint res0 = reverse0;\r\n        uint res1 = reverse1;\r\n        uint d0 = res0 * _share / totalSupplyShares;\r\n        uint d1 = res1 * _share / totalSupplyShares;\r\n\r\n        // transfer token out\r\n        if (d0 > 0)\r\n            token0.transfer(sender, d0);\r\n        if (d1 > 0)    \r\n            token1.transfer(sender, d1);\r\n        // update liquidity\r\n        _updateLiquidity(res0 - d0, res1 - d1);\r\n        // burn shares\r\n        _burn(sender, _share);\r\n\r\n        return (d0, d1);\r\n\r\n    } \r\n\r\n    // function getLiquidity() external view returns(uint , uint ){\r\n    //     return (reverse0, reverse1);\r\n    // }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CSAMM.sol": {
				"MyCSAMM": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddr0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_tokenAddr1",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "token0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "token1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "token0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "token1Out",
									"type": "uint256"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amountIn0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amountIn1",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_share",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_share",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reverse0",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reverse1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amountIn",
									"type": "uint256"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupplyShares",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CSAMM.sol\":119:5386  contract MyCSAMM {... */\n  mstore(0x40, 0xc0)\n    /* \"CSAMM.sol\":680:1123  constructor(address _tokenAddr0, address _tokenAddr1){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"CSAMM.sol\":760:771  _tokenAddr0 */\n  dup2\n    /* \"CSAMM.sol\":744:772  token0 = IERC20(_tokenAddr0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"CSAMM.sol\":799:810  _tokenAddr1 */\n  dup1\n    /* \"CSAMM.sol\":783:811  token1 = IERC20(_tokenAddr1) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"CSAMM.sol\":680:1123  constructor(address _tokenAddr0, address _tokenAddr1){... */\n  pop\n  pop\n    /* \"CSAMM.sol\":119:5386  contract MyCSAMM {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":949:1068   */\ntag_27:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_29\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_30\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_13\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"CSAMM.sol\":119:5386  contract MyCSAMM {... */\ntag_6:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x6d7e9d25f7937a025d098651c32892e1256b8f7bcedf36aadd28cccf92a5a08d\")\n  0x00\n  assignImmutable(\"0x2d16435b3faa4516e45c961fcfb8946768323ac70484540b7ee099d570719013\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"CSAMM.sol\":119:5386  contract MyCSAMM {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9c8f9f23\n      gt\n      tag_9\n      jumpi\n      dup1\n      0x9c8f9f23\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x9cd441da\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xba7bde55\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xd004f0f7\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_9:\n      dup1\n      0x0d5eb908\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x4da296a9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"CSAMM.sol\":434:454  uint public reverse1 */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CSAMM.sol\":351:371  uint public reverse0 */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CSAMM.sol\":604:646  mapping (address => uint) public balanceOf */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CSAMM.sol\":4172:5260  function removeLiquidity(uint _share) external  payable returns(uint, uint){... */\n    tag_5:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap3\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CSAMM.sol\":2843:4164  function addLiquidity(uint _amountIn0, uint _amountIn1) external payable returns(uint _share){... */\n    tag_6:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CSAMM.sol\":519:548  uint public totalSupplyShares */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CSAMM.sol\":1542:2835  function swap(address _token, uint _amountIn) external payable returns(uint){... */\n    tag_8:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CSAMM.sol\":434:454  uint public reverse1 */\n    tag_12:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"CSAMM.sol\":351:371  uint public reverse0 */\n    tag_17:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"CSAMM.sol\":604:646  mapping (address => uint) public balanceOf */\n    tag_23:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"CSAMM.sol\":4172:5260  function removeLiquidity(uint _share) external  payable returns(uint, uint){... */\n    tag_28:\n        /* \"CSAMM.sol\":4236:4240  uint */\n      0x00\n        /* \"CSAMM.sol\":4242:4246  uint */\n      dup1\n        /* \"CSAMM.sol\":4275:4276  0 */\n      0x00\n        /* \"CSAMM.sol\":4266:4272  _share */\n      dup4\n        /* \"CSAMM.sol\":4266:4276  _share > 0 */\n      gt\n        /* \"CSAMM.sol\":4258:4299  require(_share > 0 , \" share should > 0\") */\n      tag_46\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_47\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_46:\n        /* \"CSAMM.sol\":4351:4373  address payable sender */\n      0x00\n        /* \"CSAMM.sol\":4385:4395  msg.sender */\n      caller\n        /* \"CSAMM.sol\":4351:4396  address payable sender = payable (msg.sender) */\n      swap1\n      pop\n        /* \"CSAMM.sol\":4407:4415  uint bal */\n      0x00\n        /* \"CSAMM.sol\":4418:4427  balanceOf */\n      0x03\n        /* \"CSAMM.sol\":4418:4435  balanceOf[sender] */\n      0x00\n        /* \"CSAMM.sol\":4428:4434  sender */\n      dup4\n        /* \"CSAMM.sol\":4418:4435  balanceOf[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"CSAMM.sol\":4407:4435  uint bal = balanceOf[sender] */\n      swap1\n      pop\n        /* \"CSAMM.sol\":4465:4468  bal */\n      dup1\n        /* \"CSAMM.sol\":4454:4460  _share */\n      dup6\n        /* \"CSAMM.sol\":4454:4468  _share <=  bal */\n      gt\n      iszero\n        /* \"CSAMM.sol\":4446:4500  require(_share <=  bal, \"not enough shares to remove\") */\n      tag_49\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_49:\n        /* \"CSAMM.sol\":4766:4775  uint res0 */\n      0x00\n        /* \"CSAMM.sol\":4778:4786  reverse0 */\n      dup1\n      sload\n        /* \"CSAMM.sol\":4766:4786  uint res0 = reverse0 */\n      swap1\n      pop\n        /* \"CSAMM.sol\":4797:4806  uint res1 */\n      0x00\n        /* \"CSAMM.sol\":4809:4817  reverse1 */\n      sload(0x01)\n        /* \"CSAMM.sol\":4797:4817  uint res1 = reverse1 */\n      swap1\n      pop\n        /* \"CSAMM.sol\":4828:4835  uint d0 */\n      0x00\n        /* \"CSAMM.sol\":4854:4871  totalSupplyShares */\n      sload(0x02)\n        /* \"CSAMM.sol\":4845:4851  _share */\n      dup9\n        /* \"CSAMM.sol\":4838:4842  res0 */\n      dup5\n        /* \"CSAMM.sol\":4838:4851  res0 * _share */\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"CSAMM.sol\":4838:4871  res0 * _share / totalSupplyShares */\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"CSAMM.sol\":4828:4871  uint d0 = res0 * _share / totalSupplyShares */\n      swap1\n      pop\n        /* \"CSAMM.sol\":4882:4889  uint d1 */\n      0x00\n        /* \"CSAMM.sol\":4908:4925  totalSupplyShares */\n      sload(0x02)\n        /* \"CSAMM.sol\":4899:4905  _share */\n      dup10\n        /* \"CSAMM.sol\":4892:4896  res1 */\n      dup5\n        /* \"CSAMM.sol\":4892:4905  res1 * _share */\n      tag_56\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_56:\n        /* \"CSAMM.sol\":4892:4925  res1 * _share / totalSupplyShares */\n      tag_57\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_57:\n        /* \"CSAMM.sol\":4882:4925  uint d1 = res1 * _share / totalSupplyShares */\n      swap1\n      pop\n        /* \"CSAMM.sol\":4978:4979  0 */\n      0x00\n        /* \"CSAMM.sol\":4973:4975  d0 */\n      dup3\n        /* \"CSAMM.sol\":4973:4979  d0 > 0 */\n      gt\n        /* \"CSAMM.sol\":4969:5021  if (d0 > 0)... */\n      iszero\n      tag_58\n      jumpi\n        /* \"CSAMM.sol\":4994:5000  token0 */\n      immutable(\"0x2d16435b3faa4516e45c961fcfb8946768323ac70484540b7ee099d570719013\")\n        /* \"CSAMM.sol\":4994:5009  token0.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"CSAMM.sol\":5010:5016  sender */\n      dup8\n        /* \"CSAMM.sol\":5018:5020  d0 */\n      dup5\n        /* \"CSAMM.sol\":4994:5021  token0.transfer(sender, d0) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_59\n      swap3\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_62\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_62:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      pop\n        /* \"CSAMM.sol\":4969:5021  if (d0 > 0)... */\n    tag_58:\n        /* \"CSAMM.sol\":5041:5042  0 */\n      0x00\n        /* \"CSAMM.sol\":5036:5038  d1 */\n      dup2\n        /* \"CSAMM.sol\":5036:5042  d1 > 0 */\n      gt\n        /* \"CSAMM.sol\":5032:5088  if (d1 > 0)    ... */\n      iszero\n      tag_65\n      jumpi\n        /* \"CSAMM.sol\":5061:5067  token1 */\n      immutable(\"0x6d7e9d25f7937a025d098651c32892e1256b8f7bcedf36aadd28cccf92a5a08d\")\n        /* \"CSAMM.sol\":5061:5076  token1.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"CSAMM.sol\":5077:5083  sender */\n      dup8\n        /* \"CSAMM.sol\":5085:5087  d1 */\n      dup4\n        /* \"CSAMM.sol\":5061:5088  token1.transfer(sender, d1) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_66\n      swap3\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_66:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_68\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_68:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_69:\n      pop\n        /* \"CSAMM.sol\":5032:5088  if (d1 > 0)    ... */\n    tag_65:\n        /* \"CSAMM.sol\":5128:5166  _updateLiquidity(res0 - d0, res1 - d1) */\n      tag_70\n        /* \"CSAMM.sol\":5152:5154  d0 */\n      dup3\n        /* \"CSAMM.sol\":5145:5149  res0 */\n      dup6\n        /* \"CSAMM.sol\":5145:5154  res0 - d0 */\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n        /* \"CSAMM.sol\":5163:5165  d1 */\n      dup3\n        /* \"CSAMM.sol\":5156:5160  res1 */\n      dup6\n        /* \"CSAMM.sol\":5156:5165  res1 - d1 */\n      tag_73\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_73:\n        /* \"CSAMM.sol\":5128:5144  _updateLiquidity */\n      tag_74\n        /* \"CSAMM.sol\":5128:5166  _updateLiquidity(res0 - d0, res1 - d1) */\n      jump\t// in\n    tag_70:\n        /* \"CSAMM.sol\":5201:5222  _burn(sender, _share) */\n      tag_75\n        /* \"CSAMM.sol\":5207:5213  sender */\n      dup7\n        /* \"CSAMM.sol\":5215:5221  _share */\n      dup11\n        /* \"CSAMM.sol\":5201:5206  _burn */\n      tag_76\n        /* \"CSAMM.sol\":5201:5222  _burn(sender, _share) */\n      jump\t// in\n    tag_75:\n        /* \"CSAMM.sol\":5243:5245  d0 */\n      dup2\n        /* \"CSAMM.sol\":5247:5249  d1 */\n      dup2\n        /* \"CSAMM.sol\":5235:5250  return (d0, d1) */\n      swap8\n      pop\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"CSAMM.sol\":4172:5260  function removeLiquidity(uint _share) external  payable returns(uint, uint){... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"CSAMM.sol\":2843:4164  function addLiquidity(uint _amountIn0, uint _amountIn1) external payable returns(uint _share){... */\n    tag_34:\n        /* \"CSAMM.sol\":2924:2935  uint _share */\n      0x00\n        /* \"CSAMM.sol\":2947:2970  address payable  sender */\n      dup1\n        /* \"CSAMM.sol\":2982:2992  msg.sender */\n      caller\n        /* \"CSAMM.sol\":2947:2993  address payable  sender = payable (msg.sender) */\n      swap1\n      pop\n        /* \"CSAMM.sol\":3035:3041  token0 */\n      immutable(\"0x2d16435b3faa4516e45c961fcfb8946768323ac70484540b7ee099d570719013\")\n        /* \"CSAMM.sol\":3035:3054  token0.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"CSAMM.sol\":3055:3061  sender */\n      dup3\n        /* \"CSAMM.sol\":3071:3075  this */\n      address\n        /* \"CSAMM.sol\":3078:3088  _amountIn0 */\n      dup8\n        /* \"CSAMM.sol\":3035:3089  token0.transferFrom(sender, address(this), _amountIn0) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_81\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_81:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_82:\n      pop\n        /* \"CSAMM.sol\":3100:3106  token1 */\n      immutable(\"0x6d7e9d25f7937a025d098651c32892e1256b8f7bcedf36aadd28cccf92a5a08d\")\n        /* \"CSAMM.sol\":3100:3119  token1.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"CSAMM.sol\":3120:3126  sender */\n      dup3\n        /* \"CSAMM.sol\":3136:3140  this */\n      address\n        /* \"CSAMM.sol\":3143:3153  _amountIn1 */\n      dup7\n        /* \"CSAMM.sol\":3100:3154  token1.transferFrom(sender, address(this), _amountIn1) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_83:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_85\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_85:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_86:\n      pop\n        /* \"CSAMM.sol\":3167:3176  uint bal0 */\n      0x00\n        /* \"CSAMM.sol\":3179:3185  token0 */\n      immutable(\"0x2d16435b3faa4516e45c961fcfb8946768323ac70484540b7ee099d570719013\")\n        /* \"CSAMM.sol\":3179:3195  token0.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"CSAMM.sol\":3204:3208  this */\n      address\n        /* \"CSAMM.sol\":3179:3210  token0.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_90\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_90:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"CSAMM.sol\":3167:3210  uint bal0 = token0.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"CSAMM.sol\":3221:3230  uint bal1 */\n      0x00\n        /* \"CSAMM.sol\":3233:3239  token1 */\n      immutable(\"0x6d7e9d25f7937a025d098651c32892e1256b8f7bcedf36aadd28cccf92a5a08d\")\n        /* \"CSAMM.sol\":3233:3249  token1.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"CSAMM.sol\":3258:3262  this */\n      address\n        /* \"CSAMM.sol\":3233:3264  token1.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_93:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_95\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_95:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_96:\n        /* \"CSAMM.sol\":3221:3264  uint bal1 = token1.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"CSAMM.sol\":3277:3284  uint d0 */\n      0x00\n        /* \"CSAMM.sol\":3294:3302  reverse0 */\n      dup1\n      sload\n        /* \"CSAMM.sol\":3287:3291  bal0 */\n      dup4\n        /* \"CSAMM.sol\":3287:3302  bal0 - reverse0 */\n      tag_97\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_97:\n        /* \"CSAMM.sol\":3277:3302  uint d0 = bal0 - reverse0 */\n      swap1\n      pop\n        /* \"CSAMM.sol\":3313:3320  uint d1 */\n      0x00\n        /* \"CSAMM.sol\":3330:3338  reverse1 */\n      sload(0x01)\n        /* \"CSAMM.sol\":3323:3327  bal1 */\n      dup4\n        /* \"CSAMM.sol\":3323:3338  bal1 - reverse1 */\n      tag_98\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_98:\n        /* \"CSAMM.sol\":3313:3338  uint d1 = bal1 - reverse1 */\n      swap1\n      pop\n        /* \"CSAMM.sol\":3658:3671  uint origRes0 */\n      0x00\n        /* \"CSAMM.sol\":3674:3682  reverse0 */\n      dup1\n      sload\n        /* \"CSAMM.sol\":3658:3682  uint origRes0 = reverse0 */\n      swap1\n      pop\n        /* \"CSAMM.sol\":3693:3706  uint origRes1 */\n      0x00\n        /* \"CSAMM.sol\":3709:3717  reverse1 */\n      sload(0x01)\n        /* \"CSAMM.sol\":3693:3717  uint origRes1 = reverse1 */\n      swap1\n      pop\n        /* \"CSAMM.sol\":3752:3753  0 */\n      0x00\n        /* \"CSAMM.sol\":3731:3748  totalSupplyShares */\n      sload(0x02)\n        /* \"CSAMM.sol\":3731:3753  totalSupplyShares == 0 */\n      sub\n        /* \"CSAMM.sol\":3728:3901  if(totalSupplyShares == 0){... */\n      tag_99\n      jumpi\n        /* \"CSAMM.sol\":3783:3785  d1 */\n      dup3\n        /* \"CSAMM.sol\":3778:3780  d0 */\n      dup5\n        /* \"CSAMM.sol\":3778:3785  d0 + d1 */\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n        /* \"CSAMM.sol\":3769:3785  _share = d0 + d1 */\n      swap8\n      pop\n        /* \"CSAMM.sol\":3728:3901  if(totalSupplyShares == 0){... */\n      jump(tag_102)\n    tag_99:\n        /* \"CSAMM.sol\":3880:3888  origRes1 */\n      dup1\n        /* \"CSAMM.sol\":3868:3876  origRes0 */\n      dup3\n        /* \"CSAMM.sol\":3868:3888  origRes0 +  origRes1 */\n      tag_103\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_103:\n        /* \"CSAMM.sol\":3848:3865  totalSupplyShares */\n      sload(0x02)\n        /* \"CSAMM.sol\":3842:3844  d1 */\n      dup5\n        /* \"CSAMM.sol\":3837:3839  d0 */\n      dup7\n        /* \"CSAMM.sol\":3837:3844  d0 + d1 */\n      tag_104\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_104:\n        /* \"CSAMM.sol\":3836:3865  (d0 + d1) * totalSupplyShares */\n      tag_105\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_105:\n        /* \"CSAMM.sol\":3835:3889  ((d0 + d1) * totalSupplyShares)/(origRes0 +  origRes1) */\n      tag_106\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_106:\n        /* \"CSAMM.sol\":3826:3889  _share = ((d0 + d1) * totalSupplyShares)/(origRes0 +  origRes1) */\n      swap8\n      pop\n        /* \"CSAMM.sol\":3728:3901  if(totalSupplyShares == 0){... */\n    tag_102:\n        /* \"CSAMM.sol\":3978:3979  0 */\n      0x00\n        /* \"CSAMM.sol\":3969:3975  _share */\n      dup9\n        /* \"CSAMM.sol\":3969:3979  _share > 0 */\n      gt\n        /* \"CSAMM.sol\":3961:3994  require(_share > 0, \"shares < 0\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"CSAMM.sol\":4078:4099  _mint(sender, _share) */\n      tag_110\n        /* \"CSAMM.sol\":4084:4090  sender */\n      dup8\n        /* \"CSAMM.sol\":4092:4098  _share */\n      dup10\n        /* \"CSAMM.sol\":4078:4083  _mint */\n      tag_111\n        /* \"CSAMM.sol\":4078:4099  _mint(sender, _share) */\n      jump\t// in\n    tag_110:\n        /* \"CSAMM.sol\":4110:4156  _updateLiquidity(origRes0 + d0, origRes1 + d1) */\n      tag_112\n        /* \"CSAMM.sol\":4138:4140  d0 */\n      dup5\n        /* \"CSAMM.sol\":4127:4135  origRes0 */\n      dup4\n        /* \"CSAMM.sol\":4127:4140  origRes0 + d0 */\n      tag_113\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_113:\n        /* \"CSAMM.sol\":4153:4155  d1 */\n      dup5\n        /* \"CSAMM.sol\":4142:4150  origRes1 */\n      dup4\n        /* \"CSAMM.sol\":4142:4155  origRes1 + d1 */\n      tag_114\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_114:\n        /* \"CSAMM.sol\":4110:4126  _updateLiquidity */\n      tag_74\n        /* \"CSAMM.sol\":4110:4156  _updateLiquidity(origRes0 + d0, origRes1 + d1) */\n      jump\t// in\n    tag_112:\n        /* \"CSAMM.sol\":2936:4164  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"CSAMM.sol\":2843:4164  function addLiquidity(uint _amountIn0, uint _amountIn1) external payable returns(uint _share){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"CSAMM.sol\":519:548  uint public totalSupplyShares */\n    tag_38:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"CSAMM.sol\":1542:2835  function swap(address _token, uint _amountIn) external payable returns(uint){... */\n    tag_43:\n        /* \"CSAMM.sol\":1613:1617  uint */\n      0x00\n        /* \"CSAMM.sol\":1629:1652  address payable  sender */\n      dup1\n        /* \"CSAMM.sol\":1664:1674  msg.sender */\n      caller\n        /* \"CSAMM.sol\":1629:1675  address payable  sender = payable (msg.sender) */\n      swap1\n      pop\n        /* \"CSAMM.sol\":1712:1718  token0 */\n      immutable(\"0x2d16435b3faa4516e45c961fcfb8946768323ac70484540b7ee099d570719013\")\n        /* \"CSAMM.sol\":1694:1719  _token == address(token0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"CSAMM.sol\":1694:1700  _token */\n      dup5\n        /* \"CSAMM.sol\":1694:1719  _token == address(token0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"CSAMM.sol\":1694:1748  _token == address(token0) || _token == address(token1) */\n      dup1\n      tag_116\n      jumpi\n      pop\n        /* \"CSAMM.sol\":1741:1747  token1 */\n      immutable(\"0x6d7e9d25f7937a025d098651c32892e1256b8f7bcedf36aadd28cccf92a5a08d\")\n        /* \"CSAMM.sol\":1723:1748  _token == address(token1) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"CSAMM.sol\":1723:1729  _token */\n      dup5\n        /* \"CSAMM.sol\":1723:1748  _token == address(token1) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"CSAMM.sol\":1694:1748  _token == address(token0) || _token == address(token1) */\n    tag_116:\n        /* \"CSAMM.sol\":1686:1766  require(_token == address(token0) || _token == address(token1), \"Token invalid\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"CSAMM.sol\":1779:1792  bool isToken0 */\n      0x00\n        /* \"CSAMM.sol\":1814:1820  token0 */\n      immutable(\"0x2d16435b3faa4516e45c961fcfb8946768323ac70484540b7ee099d570719013\")\n        /* \"CSAMM.sol\":1796:1821  _token == address(token0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"CSAMM.sol\":1796:1802  _token */\n      dup6\n        /* \"CSAMM.sol\":1796:1821  _token == address(token0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"CSAMM.sol\":1779:1822  bool isToken0 = (_token == address(token0)) */\n      swap1\n      pop\n        /* \"CSAMM.sol\":1834:1848  IERC20 tokenIn */\n      0x00\n        /* \"CSAMM.sol\":1850:1865  IERC20 tokenOut */\n      dup1\n        /* \"CSAMM.sol\":1869:1877  isToken0 */\n      dup3\n        /* \"CSAMM.sol\":1869:1913  isToken0 ? (token0, token1):(token1, token0) */\n      tag_120\n      jumpi\n        /* \"CSAMM.sol\":1898:1904  token1 */\n      immutable(\"0x6d7e9d25f7937a025d098651c32892e1256b8f7bcedf36aadd28cccf92a5a08d\")\n        /* \"CSAMM.sol\":1906:1912  token0 */\n      immutable(\"0x2d16435b3faa4516e45c961fcfb8946768323ac70484540b7ee099d570719013\")\n        /* \"CSAMM.sol\":1869:1913  isToken0 ? (token0, token1):(token1, token0) */\n      jump(tag_121)\n    tag_120:\n        /* \"CSAMM.sol\":1881:1887  token0 */\n      immutable(\"0x2d16435b3faa4516e45c961fcfb8946768323ac70484540b7ee099d570719013\")\n        /* \"CSAMM.sol\":1889:1895  token1 */\n      immutable(\"0x6d7e9d25f7937a025d098651c32892e1256b8f7bcedf36aadd28cccf92a5a08d\")\n        /* \"CSAMM.sol\":1869:1913  isToken0 ? (token0, token1):(token1, token0) */\n    tag_121:\n        /* \"CSAMM.sol\":1833:1913  (IERC20 tokenIn, IERC20 tokenOut) = isToken0 ? (token0, token1):(token1, token0) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"CSAMM.sol\":2030:2043  uint amountIn */\n      0x00\n        /* \"CSAMM.sol\":2046:2055  _amountIn */\n      dup7\n        /* \"CSAMM.sol\":2030:2055  uint amountIn = _amountIn */\n      swap1\n      pop\n        /* \"CSAMM.sol\":2066:2076  uint resIn */\n      0x00\n        /* \"CSAMM.sol\":2079:2087  isToken0 */\n      dup5\n        /* \"CSAMM.sol\":2079:2109  isToken0 ? reverse0 : reverse1 */\n      tag_122\n      jumpi\n        /* \"CSAMM.sol\":2101:2109  reverse1 */\n      sload(0x01)\n        /* \"CSAMM.sol\":2079:2109  isToken0 ? reverse0 : reverse1 */\n      jump(tag_123)\n    tag_122:\n        /* \"CSAMM.sol\":2090:2098  reverse0 */\n      sload(0x00)\n        /* \"CSAMM.sol\":2079:2109  isToken0 ? reverse0 : reverse1 */\n    tag_123:\n        /* \"CSAMM.sol\":2066:2109  uint resIn = isToken0 ? reverse0 : reverse1 */\n      swap1\n      pop\n        /* \"CSAMM.sol\":2154:2164  uint tmpIn */\n      0x00\n        /* \"CSAMM.sol\":2175:2182  tokenIn */\n      dup5\n        /* \"CSAMM.sol\":2175:2195  tokenIn.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"CSAMM.sol\":2196:2202  sender */\n      dup9\n        /* \"CSAMM.sol\":2212:2216  this */\n      address\n        /* \"CSAMM.sol\":2219:2227  amountIn */\n      dup7\n        /* \"CSAMM.sol\":2175:2228  tokenIn.transferFrom(sender, address(this), amountIn) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_124:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_126\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_126:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_127:\n      pop\n        /* \"CSAMM.sol\":2308:2313  resIn */\n      dup2\n        /* \"CSAMM.sol\":2273:2280  tokenIn */\n      dup6\n        /* \"CSAMM.sol\":2273:2290  tokenIn.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"CSAMM.sol\":2299:2303  this */\n      address\n        /* \"CSAMM.sol\":2273:2305  tokenIn.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_128:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_130\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_131\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_131:\n        /* \"CSAMM.sol\":2273:2313  tokenIn.balanceOf(address(this)) - resIn */\n      tag_132\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_132:\n        /* \"CSAMM.sol\":2265:2313  tmpIn = tokenIn.balanceOf(address(this)) - resIn */\n      swap1\n      pop\n        /* \"CSAMM.sol\":2324:2338  uint amountOut */\n      0x00\n        /* \"CSAMM.sol\":2355:2359  1000 */\n      0x03e8\n        /* \"CSAMM.sol\":2349:2352  997 */\n      0x03e5\n        /* \"CSAMM.sol\":2341:2346  tmpIn */\n      dup4\n        /* \"CSAMM.sol\":2341:2352  tmpIn * 997 */\n      tag_133\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_133:\n        /* \"CSAMM.sol\":2341:2359  tmpIn * 997 / 1000 */\n      tag_134\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_134:\n        /* \"CSAMM.sol\":2324:2359  uint amountOut = tmpIn * 997 / 1000 */\n      swap1\n      pop\n        /* \"CSAMM.sol\":2412:2420  tokenOut */\n      dup5\n        /* \"CSAMM.sol\":2412:2429  tokenOut.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"CSAMM.sol\":2430:2436  sender */\n      dup10\n        /* \"CSAMM.sol\":2438:2447  amountOut */\n      dup4\n        /* \"CSAMM.sol\":2412:2448  tokenOut.transfer(sender, amountOut) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap3\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_135:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_137\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_137:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_138\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_138:\n      pop\n        /* \"CSAMM.sol\":2492:2500  isToken0 */\n      dup7\n        /* \"CSAMM.sol\":2488:2799  if (isToken0){... */\n      iszero\n      tag_139\n      jumpi\n        /* \"CSAMM.sol\":2528:2536  amountIn */\n      dup4\n        /* \"CSAMM.sol\":2516:2524  reverse0 */\n      0x00\n      dup1\n        /* \"CSAMM.sol\":2516:2536  reverse0 += amountIn */\n      dup3\n      dup3\n      sload\n      tag_140\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_140:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"CSAMM.sol\":2563:2572  amountOut */\n      dup1\n        /* \"CSAMM.sol\":2551:2559  reverse1 */\n      0x01\n      0x00\n        /* \"CSAMM.sol\":2551:2572  reverse1 -= amountOut */\n      dup3\n      dup3\n      sload\n      tag_141\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_141:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"CSAMM.sol\":2597:2603  sender */\n      dup8\n        /* \"CSAMM.sol\":2592:2631  Swap(sender, amountIn, 0, amountOut, 0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x49926bbebe8474393f434dfa4f78694c0923efa07d19f2284518bfabd06eb737\n        /* \"CSAMM.sol\":2605:2613  amountIn */\n      dup6\n        /* \"CSAMM.sol\":2615:2616  0 */\n      0x00\n        /* \"CSAMM.sol\":2618:2627  amountOut */\n      dup5\n        /* \"CSAMM.sol\":2629:2630  0 */\n      0x00\n        /* \"CSAMM.sol\":2592:2631  Swap(sender, amountIn, 0, amountOut, 0) */\n      mload(0x40)\n      tag_142\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"CSAMM.sol\":2488:2799  if (isToken0){... */\n      jump(tag_144)\n    tag_139:\n        /* \"CSAMM.sol\":2684:2693  amountOut */\n      dup1\n        /* \"CSAMM.sol\":2672:2680  reverse0 */\n      0x00\n      dup1\n        /* \"CSAMM.sol\":2672:2693  reverse0 -= amountOut */\n      dup3\n      dup3\n      sload\n      tag_145\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_145:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"CSAMM.sol\":2720:2728  amountIn */\n      dup4\n        /* \"CSAMM.sol\":2708:2716  reverse1 */\n      0x01\n      0x00\n        /* \"CSAMM.sol\":2708:2728  reverse1 += amountIn */\n      dup3\n      dup3\n      sload\n      tag_146\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_146:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"CSAMM.sol\":2753:2759  sender */\n      dup8\n        /* \"CSAMM.sol\":2748:2787  Swap(sender, 0, amountIn, 0, amountOut) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x49926bbebe8474393f434dfa4f78694c0923efa07d19f2284518bfabd06eb737\n        /* \"CSAMM.sol\":2761:2762  0 */\n      0x00\n        /* \"CSAMM.sol\":2764:2772  amountIn */\n      dup7\n        /* \"CSAMM.sol\":2774:2775  0 */\n      0x00\n        /* \"CSAMM.sol\":2777:2786  amountOut */\n      dup6\n        /* \"CSAMM.sol\":2748:2787  Swap(sender, 0, amountIn, 0, amountOut) */\n      mload(0x40)\n      tag_147\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"CSAMM.sol\":2488:2799  if (isToken0){... */\n    tag_144:\n        /* \"CSAMM.sol\":2816:2825  amountOut */\n      dup1\n        /* \"CSAMM.sol\":2809:2825  return amountOut */\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"CSAMM.sol\":1542:2835  function swap(address _token, uint _amountIn) external payable returns(uint){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"CSAMM.sol\":1415:1536  function _updateLiquidity(uint _res0, uint _res1) internal {... */\n    tag_74:\n        /* \"CSAMM.sol\":1496:1501  _res0 */\n      dup2\n        /* \"CSAMM.sol\":1485:1493  reverse0 */\n      0x00\n        /* \"CSAMM.sol\":1485:1501  reverse0 = _res0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"CSAMM.sol\":1523:1528  _res1 */\n      dup1\n        /* \"CSAMM.sol\":1512:1520  reverse1 */\n      0x01\n        /* \"CSAMM.sol\":1512:1528  reverse1 = _res1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"CSAMM.sol\":1415:1536  function _updateLiquidity(uint _res0, uint _res1) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"CSAMM.sol\":1271:1409  function _burn(address _from, uint _amount) internal {... */\n    tag_76:\n        /* \"CSAMM.sol\":1356:1363  _amount */\n      dup1\n        /* \"CSAMM.sol\":1335:1352  totalSupplyShares */\n      0x02\n      0x00\n        /* \"CSAMM.sol\":1335:1363  totalSupplyShares -= _amount */\n      dup3\n      dup3\n      sload\n      tag_151\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_151:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"CSAMM.sol\":1394:1401  _amount */\n      dup1\n        /* \"CSAMM.sol\":1374:1383  balanceOf */\n      0x03\n        /* \"CSAMM.sol\":1374:1390  balanceOf[_from] */\n      0x00\n        /* \"CSAMM.sol\":1384:1389  _from */\n      dup5\n        /* \"CSAMM.sol\":1374:1390  balanceOf[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"CSAMM.sol\":1374:1401  balanceOf[_from] -= _amount */\n      dup3\n      dup3\n      sload\n      tag_152\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_152:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"CSAMM.sol\":1271:1409  function _burn(address _from, uint _amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"CSAMM.sol\":1131:1265  function _mint(address _to, uint _amount) internal {... */\n    tag_111:\n        /* \"CSAMM.sol\":1214:1221  _amount */\n      dup1\n        /* \"CSAMM.sol\":1193:1210  totalSupplyShares */\n      0x02\n      0x00\n        /* \"CSAMM.sol\":1193:1221  totalSupplyShares += _amount */\n      dup3\n      dup3\n      sload\n      tag_154\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_154:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"CSAMM.sol\":1250:1257  _amount */\n      dup1\n        /* \"CSAMM.sol\":1232:1241  balanceOf */\n      0x03\n        /* \"CSAMM.sol\":1232:1246  balanceOf[_to] */\n      0x00\n        /* \"CSAMM.sol\":1242:1245  _to */\n      dup5\n        /* \"CSAMM.sol\":1232:1246  balanceOf[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"CSAMM.sol\":1232:1257  balanceOf[_to] += _amount */\n      dup3\n      dup3\n      sload\n      tag_155\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_155:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"CSAMM.sol\":1131:1265  function _mint(address _to, uint _amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_156:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_157:\n        /* \"#utility.yul\":177:201   */\n      tag_194\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_156\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_14:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_196\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_157\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_159:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:895   */\n    tag_161:\n        /* \"#utility.yul\":806:813   */\n      0x00\n        /* \"#utility.yul\":846:888   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":839:844   */\n      dup3\n        /* \"#utility.yul\":835:889   */\n      and\n        /* \"#utility.yul\":824:889   */\n      swap1\n      pop\n        /* \"#utility.yul\":769:895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":901:997   */\n    tag_162:\n        /* \"#utility.yul\":938:945   */\n      0x00\n        /* \"#utility.yul\":967:991   */\n      tag_202\n        /* \"#utility.yul\":985:990   */\n      dup3\n        /* \"#utility.yul\":967:991   */\n      tag_161\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":956:991   */\n      swap1\n      pop\n        /* \"#utility.yul\":901:997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1003:1125   */\n    tag_163:\n        /* \"#utility.yul\":1076:1100   */\n      tag_204\n        /* \"#utility.yul\":1094:1099   */\n      dup2\n        /* \"#utility.yul\":1076:1100   */\n      tag_162\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1066:1101   */\n      eq\n        /* \"#utility.yul\":1056:1119   */\n      tag_205\n      jumpi\n        /* \"#utility.yul\":1115:1116   */\n      0x00\n        /* \"#utility.yul\":1112:1113   */\n      dup1\n        /* \"#utility.yul\":1105:1117   */\n      revert\n        /* \"#utility.yul\":1056:1119   */\n    tag_205:\n        /* \"#utility.yul\":1003:1125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1131:1270   */\n    tag_164:\n        /* \"#utility.yul\":1177:1182   */\n      0x00\n        /* \"#utility.yul\":1215:1221   */\n      dup2\n        /* \"#utility.yul\":1202:1222   */\n      calldataload\n        /* \"#utility.yul\":1193:1222   */\n      swap1\n      pop\n        /* \"#utility.yul\":1231:1264   */\n      tag_207\n        /* \"#utility.yul\":1258:1263   */\n      dup2\n        /* \"#utility.yul\":1231:1264   */\n      tag_163\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":1131:1270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1605   */\n    tag_22:\n        /* \"#utility.yul\":1335:1341   */\n      0x00\n        /* \"#utility.yul\":1384:1386   */\n      0x20\n        /* \"#utility.yul\":1372:1381   */\n      dup3\n        /* \"#utility.yul\":1363:1370   */\n      dup5\n        /* \"#utility.yul\":1359:1382   */\n      sub\n        /* \"#utility.yul\":1355:1387   */\n      slt\n        /* \"#utility.yul\":1352:1471   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":1390:1469   */\n      tag_210\n      tag_159\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":1352:1471   */\n    tag_209:\n        /* \"#utility.yul\":1510:1511   */\n      0x00\n        /* \"#utility.yul\":1535:1588   */\n      tag_211\n        /* \"#utility.yul\":1580:1587   */\n      dup5\n        /* \"#utility.yul\":1571:1577   */\n      dup3\n        /* \"#utility.yul\":1560:1569   */\n      dup6\n        /* \"#utility.yul\":1556:1578   */\n      add\n        /* \"#utility.yul\":1535:1588   */\n      tag_164\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":1525:1588   */\n      swap2\n      pop\n        /* \"#utility.yul\":1481:1598   */\n      pop\n        /* \"#utility.yul\":1276:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_165:\n        /* \"#utility.yul\":1684:1708   */\n      tag_213\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_156\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_214\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_214:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_166:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_216\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_165\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2213   */\n    tag_27:\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":1980:1989   */\n      dup3\n        /* \"#utility.yul\":1971:1978   */\n      dup5\n        /* \"#utility.yul\":1967:1990   */\n      sub\n        /* \"#utility.yul\":1963:1995   */\n      slt\n        /* \"#utility.yul\":1960:2079   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":1998:2077   */\n      tag_219\n      tag_159\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":1960:2079   */\n    tag_218:\n        /* \"#utility.yul\":2118:2119   */\n      0x00\n        /* \"#utility.yul\":2143:2196   */\n      tag_220\n        /* \"#utility.yul\":2188:2195   */\n      dup5\n        /* \"#utility.yul\":2179:2185   */\n      dup3\n        /* \"#utility.yul\":2168:2177   */\n      dup6\n        /* \"#utility.yul\":2164:2186   */\n      add\n        /* \"#utility.yul\":2143:2196   */\n      tag_166\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":2133:2196   */\n      swap2\n      pop\n        /* \"#utility.yul\":2089:2206   */\n      pop\n        /* \"#utility.yul\":1884:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2551   */\n    tag_30:\n        /* \"#utility.yul\":2340:2344   */\n      0x00\n        /* \"#utility.yul\":2378:2380   */\n      0x40\n        /* \"#utility.yul\":2367:2376   */\n      dup3\n        /* \"#utility.yul\":2363:2381   */\n      add\n        /* \"#utility.yul\":2355:2381   */\n      swap1\n      pop\n        /* \"#utility.yul\":2391:2462   */\n      tag_222\n        /* \"#utility.yul\":2459:2460   */\n      0x00\n        /* \"#utility.yul\":2448:2457   */\n      dup4\n        /* \"#utility.yul\":2444:2461   */\n      add\n        /* \"#utility.yul\":2435:2441   */\n      dup6\n        /* \"#utility.yul\":2391:2462   */\n      tag_157\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":2472:2544   */\n      tag_223\n        /* \"#utility.yul\":2540:2542   */\n      0x20\n        /* \"#utility.yul\":2529:2538   */\n      dup4\n        /* \"#utility.yul\":2525:2543   */\n      add\n        /* \"#utility.yul\":2516:2522   */\n      dup5\n        /* \"#utility.yul\":2472:2544   */\n      tag_157\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":2219:2551   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2557:3031   */\n    tag_33:\n        /* \"#utility.yul\":2625:2631   */\n      0x00\n        /* \"#utility.yul\":2633:2639   */\n      dup1\n        /* \"#utility.yul\":2682:2684   */\n      0x40\n        /* \"#utility.yul\":2670:2679   */\n      dup4\n        /* \"#utility.yul\":2661:2668   */\n      dup6\n        /* \"#utility.yul\":2657:2680   */\n      sub\n        /* \"#utility.yul\":2653:2685   */\n      slt\n        /* \"#utility.yul\":2650:2769   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":2688:2767   */\n      tag_226\n      tag_159\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":2650:2769   */\n    tag_225:\n        /* \"#utility.yul\":2808:2809   */\n      0x00\n        /* \"#utility.yul\":2833:2886   */\n      tag_227\n        /* \"#utility.yul\":2878:2885   */\n      dup6\n        /* \"#utility.yul\":2869:2875   */\n      dup3\n        /* \"#utility.yul\":2858:2867   */\n      dup7\n        /* \"#utility.yul\":2854:2876   */\n      add\n        /* \"#utility.yul\":2833:2886   */\n      tag_166\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":2823:2886   */\n      swap3\n      pop\n        /* \"#utility.yul\":2779:2896   */\n      pop\n        /* \"#utility.yul\":2935:2937   */\n      0x20\n        /* \"#utility.yul\":2961:3014   */\n      tag_228\n        /* \"#utility.yul\":3006:3013   */\n      dup6\n        /* \"#utility.yul\":2997:3003   */\n      dup3\n        /* \"#utility.yul\":2986:2995   */\n      dup7\n        /* \"#utility.yul\":2982:3004   */\n      add\n        /* \"#utility.yul\":2961:3014   */\n      tag_166\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":2951:3014   */\n      swap2\n      pop\n        /* \"#utility.yul\":2906:3024   */\n      pop\n        /* \"#utility.yul\":2557:3031   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3037:3511   */\n    tag_42:\n        /* \"#utility.yul\":3105:3111   */\n      0x00\n        /* \"#utility.yul\":3113:3119   */\n      dup1\n        /* \"#utility.yul\":3162:3164   */\n      0x40\n        /* \"#utility.yul\":3150:3159   */\n      dup4\n        /* \"#utility.yul\":3141:3148   */\n      dup6\n        /* \"#utility.yul\":3137:3160   */\n      sub\n        /* \"#utility.yul\":3133:3165   */\n      slt\n        /* \"#utility.yul\":3130:3249   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":3168:3247   */\n      tag_231\n      tag_159\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":3130:3249   */\n    tag_230:\n        /* \"#utility.yul\":3288:3289   */\n      0x00\n        /* \"#utility.yul\":3313:3366   */\n      tag_232\n        /* \"#utility.yul\":3358:3365   */\n      dup6\n        /* \"#utility.yul\":3349:3355   */\n      dup3\n        /* \"#utility.yul\":3338:3347   */\n      dup7\n        /* \"#utility.yul\":3334:3356   */\n      add\n        /* \"#utility.yul\":3313:3366   */\n      tag_164\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":3303:3366   */\n      swap3\n      pop\n        /* \"#utility.yul\":3259:3376   */\n      pop\n        /* \"#utility.yul\":3415:3417   */\n      0x20\n        /* \"#utility.yul\":3441:3494   */\n      tag_233\n        /* \"#utility.yul\":3486:3493   */\n      dup6\n        /* \"#utility.yul\":3477:3483   */\n      dup3\n        /* \"#utility.yul\":3466:3475   */\n      dup7\n        /* \"#utility.yul\":3462:3484   */\n      add\n        /* \"#utility.yul\":3441:3494   */\n      tag_166\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":3431:3494   */\n      swap2\n      pop\n        /* \"#utility.yul\":3386:3504   */\n      pop\n        /* \"#utility.yul\":3037:3511   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3517:3686   */\n    tag_167:\n        /* \"#utility.yul\":3601:3612   */\n      0x00\n        /* \"#utility.yul\":3635:3641   */\n      dup3\n        /* \"#utility.yul\":3630:3633   */\n      dup3\n        /* \"#utility.yul\":3623:3642   */\n      mstore\n        /* \"#utility.yul\":3675:3679   */\n      0x20\n        /* \"#utility.yul\":3670:3673   */\n      dup3\n        /* \"#utility.yul\":3666:3680   */\n      add\n        /* \"#utility.yul\":3651:3680   */\n      swap1\n      pop\n        /* \"#utility.yul\":3517:3686   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3692:3859   */\n    tag_168:\n        /* \"#utility.yul\":3832:3851   */\n      0x2073686172652073686f756c64203e2030000000000000000000000000000000\n        /* \"#utility.yul\":3828:3829   */\n      0x00\n        /* \"#utility.yul\":3820:3826   */\n      dup3\n        /* \"#utility.yul\":3816:3830   */\n      add\n        /* \"#utility.yul\":3809:3852   */\n      mstore\n        /* \"#utility.yul\":3692:3859   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3865:4231   */\n    tag_169:\n        /* \"#utility.yul\":4007:4010   */\n      0x00\n        /* \"#utility.yul\":4028:4095   */\n      tag_237\n        /* \"#utility.yul\":4092:4094   */\n      0x11\n        /* \"#utility.yul\":4087:4090   */\n      dup4\n        /* \"#utility.yul\":4028:4095   */\n      tag_167\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":4021:4095   */\n      swap2\n      pop\n        /* \"#utility.yul\":4104:4197   */\n      tag_238\n        /* \"#utility.yul\":4193:4196   */\n      dup3\n        /* \"#utility.yul\":4104:4197   */\n      tag_168\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":4222:4224   */\n      0x20\n        /* \"#utility.yul\":4217:4220   */\n      dup3\n        /* \"#utility.yul\":4213:4225   */\n      add\n        /* \"#utility.yul\":4206:4225   */\n      swap1\n      pop\n        /* \"#utility.yul\":3865:4231   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4237:4656   */\n    tag_48:\n        /* \"#utility.yul\":4403:4407   */\n      0x00\n        /* \"#utility.yul\":4441:4443   */\n      0x20\n        /* \"#utility.yul\":4430:4439   */\n      dup3\n        /* \"#utility.yul\":4426:4444   */\n      add\n        /* \"#utility.yul\":4418:4444   */\n      swap1\n      pop\n        /* \"#utility.yul\":4490:4499   */\n      dup2\n        /* \"#utility.yul\":4484:4488   */\n      dup2\n        /* \"#utility.yul\":4480:4500   */\n      sub\n        /* \"#utility.yul\":4476:4477   */\n      0x00\n        /* \"#utility.yul\":4465:4474   */\n      dup4\n        /* \"#utility.yul\":4461:4478   */\n      add\n        /* \"#utility.yul\":4454:4501   */\n      mstore\n        /* \"#utility.yul\":4518:4649   */\n      tag_240\n        /* \"#utility.yul\":4644:4648   */\n      dup2\n        /* \"#utility.yul\":4518:4649   */\n      tag_169\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":4510:4649   */\n      swap1\n      pop\n        /* \"#utility.yul\":4237:4656   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4662:4839   */\n    tag_170:\n        /* \"#utility.yul\":4802:4831   */\n      0x6e6f7420656e6f7567682073686172657320746f2072656d6f76650000000000\n        /* \"#utility.yul\":4798:4799   */\n      0x00\n        /* \"#utility.yul\":4790:4796   */\n      dup3\n        /* \"#utility.yul\":4786:4800   */\n      add\n        /* \"#utility.yul\":4779:4832   */\n      mstore\n        /* \"#utility.yul\":4662:4839   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4845:5211   */\n    tag_171:\n        /* \"#utility.yul\":4987:4990   */\n      0x00\n        /* \"#utility.yul\":5008:5075   */\n      tag_243\n        /* \"#utility.yul\":5072:5074   */\n      0x1b\n        /* \"#utility.yul\":5067:5070   */\n      dup4\n        /* \"#utility.yul\":5008:5075   */\n      tag_167\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":5001:5075   */\n      swap2\n      pop\n        /* \"#utility.yul\":5084:5177   */\n      tag_244\n        /* \"#utility.yul\":5173:5176   */\n      dup3\n        /* \"#utility.yul\":5084:5177   */\n      tag_170\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":5202:5204   */\n      0x20\n        /* \"#utility.yul\":5197:5200   */\n      dup3\n        /* \"#utility.yul\":5193:5205   */\n      add\n        /* \"#utility.yul\":5186:5205   */\n      swap1\n      pop\n        /* \"#utility.yul\":4845:5211   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5217:5636   */\n    tag_51:\n        /* \"#utility.yul\":5383:5387   */\n      0x00\n        /* \"#utility.yul\":5421:5423   */\n      0x20\n        /* \"#utility.yul\":5410:5419   */\n      dup3\n        /* \"#utility.yul\":5406:5424   */\n      add\n        /* \"#utility.yul\":5398:5424   */\n      swap1\n      pop\n        /* \"#utility.yul\":5470:5479   */\n      dup2\n        /* \"#utility.yul\":5464:5468   */\n      dup2\n        /* \"#utility.yul\":5460:5480   */\n      sub\n        /* \"#utility.yul\":5456:5457   */\n      0x00\n        /* \"#utility.yul\":5445:5454   */\n      dup4\n        /* \"#utility.yul\":5441:5458   */\n      add\n        /* \"#utility.yul\":5434:5481   */\n      mstore\n        /* \"#utility.yul\":5498:5629   */\n      tag_246\n        /* \"#utility.yul\":5624:5628   */\n      dup2\n        /* \"#utility.yul\":5498:5629   */\n      tag_171\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":5490:5629   */\n      swap1\n      pop\n        /* \"#utility.yul\":5217:5636   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5642:5822   */\n    tag_172:\n        /* \"#utility.yul\":5690:5767   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5687:5688   */\n      0x00\n        /* \"#utility.yul\":5680:5768   */\n      mstore\n        /* \"#utility.yul\":5787:5791   */\n      0x11\n        /* \"#utility.yul\":5784:5785   */\n      0x04\n        /* \"#utility.yul\":5777:5792   */\n      mstore\n        /* \"#utility.yul\":5811:5815   */\n      0x24\n        /* \"#utility.yul\":5808:5809   */\n      0x00\n        /* \"#utility.yul\":5801:5816   */\n      revert\n        /* \"#utility.yul\":5828:6238   */\n    tag_53:\n        /* \"#utility.yul\":5868:5875   */\n      0x00\n        /* \"#utility.yul\":5891:5911   */\n      tag_249\n        /* \"#utility.yul\":5909:5910   */\n      dup3\n        /* \"#utility.yul\":5891:5911   */\n      tag_156\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":5886:5911   */\n      swap2\n      pop\n        /* \"#utility.yul\":5925:5945   */\n      tag_250\n        /* \"#utility.yul\":5943:5944   */\n      dup4\n        /* \"#utility.yul\":5925:5945   */\n      tag_156\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":5920:5945   */\n      swap3\n      pop\n        /* \"#utility.yul\":5980:5981   */\n      dup3\n        /* \"#utility.yul\":5977:5978   */\n      dup3\n        /* \"#utility.yul\":5973:5982   */\n      mul\n        /* \"#utility.yul\":6002:6032   */\n      tag_251\n        /* \"#utility.yul\":6020:6031   */\n      dup2\n        /* \"#utility.yul\":6002:6032   */\n      tag_156\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":5991:6032   */\n      swap2\n      pop\n        /* \"#utility.yul\":6181:6182   */\n      dup3\n        /* \"#utility.yul\":6172:6179   */\n      dup3\n        /* \"#utility.yul\":6168:6183   */\n      div\n        /* \"#utility.yul\":6165:6166   */\n      dup5\n        /* \"#utility.yul\":6162:6184   */\n      eq\n        /* \"#utility.yul\":6142:6143   */\n      dup4\n        /* \"#utility.yul\":6135:6144   */\n      iszero\n        /* \"#utility.yul\":6115:6198   */\n      or\n        /* \"#utility.yul\":6092:6231   */\n      tag_252\n      jumpi\n        /* \"#utility.yul\":6211:6229   */\n      tag_253\n      tag_172\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":6092:6231   */\n    tag_252:\n        /* \"#utility.yul\":5876:6238   */\n      pop\n        /* \"#utility.yul\":5828:6238   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6244:6424   */\n    tag_173:\n        /* \"#utility.yul\":6292:6369   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6289:6290   */\n      0x00\n        /* \"#utility.yul\":6282:6370   */\n      mstore\n        /* \"#utility.yul\":6389:6393   */\n      0x12\n        /* \"#utility.yul\":6386:6387   */\n      0x04\n        /* \"#utility.yul\":6379:6394   */\n      mstore\n        /* \"#utility.yul\":6413:6417   */\n      0x24\n        /* \"#utility.yul\":6410:6411   */\n      0x00\n        /* \"#utility.yul\":6403:6418   */\n      revert\n        /* \"#utility.yul\":6430:6615   */\n    tag_55:\n        /* \"#utility.yul\":6470:6471   */\n      0x00\n        /* \"#utility.yul\":6487:6507   */\n      tag_256\n        /* \"#utility.yul\":6505:6506   */\n      dup3\n        /* \"#utility.yul\":6487:6507   */\n      tag_156\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":6482:6507   */\n      swap2\n      pop\n        /* \"#utility.yul\":6521:6541   */\n      tag_257\n        /* \"#utility.yul\":6539:6540   */\n      dup4\n        /* \"#utility.yul\":6521:6541   */\n      tag_156\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":6516:6541   */\n      swap3\n      pop\n        /* \"#utility.yul\":6560:6561   */\n      dup3\n        /* \"#utility.yul\":6550:6585   */\n      tag_258\n      jumpi\n        /* \"#utility.yul\":6565:6583   */\n      tag_259\n      tag_173\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":6550:6585   */\n    tag_258:\n        /* \"#utility.yul\":6607:6608   */\n      dup3\n        /* \"#utility.yul\":6604:6605   */\n      dup3\n        /* \"#utility.yul\":6600:6609   */\n      div\n        /* \"#utility.yul\":6595:6609   */\n      swap1\n      pop\n        /* \"#utility.yul\":6430:6615   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6621:6681   */\n    tag_174:\n        /* \"#utility.yul\":6649:6652   */\n      0x00\n        /* \"#utility.yul\":6670:6675   */\n      dup2\n        /* \"#utility.yul\":6663:6675   */\n      swap1\n      pop\n        /* \"#utility.yul\":6621:6681   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6687:6829   */\n    tag_175:\n        /* \"#utility.yul\":6737:6746   */\n      0x00\n        /* \"#utility.yul\":6770:6823   */\n      tag_262\n        /* \"#utility.yul\":6788:6822   */\n      tag_263\n        /* \"#utility.yul\":6797:6821   */\n      tag_264\n        /* \"#utility.yul\":6815:6820   */\n      dup5\n        /* \"#utility.yul\":6797:6821   */\n      tag_161\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":6788:6822   */\n      tag_174\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":6770:6823   */\n      tag_161\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":6757:6823   */\n      swap1\n      pop\n        /* \"#utility.yul\":6687:6829   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6835:6961   */\n    tag_176:\n        /* \"#utility.yul\":6885:6894   */\n      0x00\n        /* \"#utility.yul\":6918:6955   */\n      tag_266\n        /* \"#utility.yul\":6949:6954   */\n      dup3\n        /* \"#utility.yul\":6918:6955   */\n      tag_175\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":6905:6955   */\n      swap1\n      pop\n        /* \"#utility.yul\":6835:6961   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6967:7101   */\n    tag_177:\n        /* \"#utility.yul\":7025:7034   */\n      0x00\n        /* \"#utility.yul\":7058:7095   */\n      tag_268\n        /* \"#utility.yul\":7089:7094   */\n      dup3\n        /* \"#utility.yul\":7058:7095   */\n      tag_176\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":7045:7095   */\n      swap1\n      pop\n        /* \"#utility.yul\":6967:7101   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7107:7254   */\n    tag_178:\n        /* \"#utility.yul\":7202:7247   */\n      tag_270\n        /* \"#utility.yul\":7241:7246   */\n      dup2\n        /* \"#utility.yul\":7202:7247   */\n      tag_177\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":7197:7200   */\n      dup3\n        /* \"#utility.yul\":7190:7248   */\n      mstore\n        /* \"#utility.yul\":7107:7254   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7260:7608   */\n    tag_60:\n        /* \"#utility.yul\":7389:7393   */\n      0x00\n        /* \"#utility.yul\":7427:7429   */\n      0x40\n        /* \"#utility.yul\":7416:7425   */\n      dup3\n        /* \"#utility.yul\":7412:7430   */\n      add\n        /* \"#utility.yul\":7404:7430   */\n      swap1\n      pop\n        /* \"#utility.yul\":7440:7519   */\n      tag_272\n        /* \"#utility.yul\":7516:7517   */\n      0x00\n        /* \"#utility.yul\":7505:7514   */\n      dup4\n        /* \"#utility.yul\":7501:7518   */\n      add\n        /* \"#utility.yul\":7492:7498   */\n      dup6\n        /* \"#utility.yul\":7440:7519   */\n      tag_178\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":7529:7601   */\n      tag_273\n        /* \"#utility.yul\":7597:7599   */\n      0x20\n        /* \"#utility.yul\":7586:7595   */\n      dup4\n        /* \"#utility.yul\":7582:7600   */\n      add\n        /* \"#utility.yul\":7573:7579   */\n      dup5\n        /* \"#utility.yul\":7529:7601   */\n      tag_157\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":7260:7608   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7614:7704   */\n    tag_179:\n        /* \"#utility.yul\":7648:7655   */\n      0x00\n        /* \"#utility.yul\":7691:7696   */\n      dup2\n        /* \"#utility.yul\":7684:7697   */\n      iszero\n        /* \"#utility.yul\":7677:7698   */\n      iszero\n        /* \"#utility.yul\":7666:7698   */\n      swap1\n      pop\n        /* \"#utility.yul\":7614:7704   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7710:7826   */\n    tag_180:\n        /* \"#utility.yul\":7780:7801   */\n      tag_276\n        /* \"#utility.yul\":7795:7800   */\n      dup2\n        /* \"#utility.yul\":7780:7801   */\n      tag_179\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":7773:7778   */\n      dup2\n        /* \"#utility.yul\":7770:7802   */\n      eq\n        /* \"#utility.yul\":7760:7820   */\n      tag_277\n      jumpi\n        /* \"#utility.yul\":7816:7817   */\n      0x00\n        /* \"#utility.yul\":7813:7814   */\n      dup1\n        /* \"#utility.yul\":7806:7818   */\n      revert\n        /* \"#utility.yul\":7760:7820   */\n    tag_277:\n        /* \"#utility.yul\":7710:7826   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7832:7969   */\n    tag_181:\n        /* \"#utility.yul\":7886:7891   */\n      0x00\n        /* \"#utility.yul\":7917:7923   */\n      dup2\n        /* \"#utility.yul\":7911:7924   */\n      mload\n        /* \"#utility.yul\":7902:7924   */\n      swap1\n      pop\n        /* \"#utility.yul\":7933:7963   */\n      tag_279\n        /* \"#utility.yul\":7957:7962   */\n      dup2\n        /* \"#utility.yul\":7933:7963   */\n      tag_180\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":7832:7969   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7975:8320   */\n    tag_64:\n        /* \"#utility.yul\":8042:8048   */\n      0x00\n        /* \"#utility.yul\":8091:8093   */\n      0x20\n        /* \"#utility.yul\":8079:8088   */\n      dup3\n        /* \"#utility.yul\":8070:8077   */\n      dup5\n        /* \"#utility.yul\":8066:8089   */\n      sub\n        /* \"#utility.yul\":8062:8094   */\n      slt\n        /* \"#utility.yul\":8059:8178   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":8097:8176   */\n      tag_282\n      tag_159\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":8059:8178   */\n    tag_281:\n        /* \"#utility.yul\":8217:8218   */\n      0x00\n        /* \"#utility.yul\":8242:8303   */\n      tag_283\n        /* \"#utility.yul\":8295:8302   */\n      dup5\n        /* \"#utility.yul\":8286:8292   */\n      dup3\n        /* \"#utility.yul\":8275:8284   */\n      dup6\n        /* \"#utility.yul\":8271:8293   */\n      add\n        /* \"#utility.yul\":8242:8303   */\n      tag_181\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":8232:8303   */\n      swap2\n      pop\n        /* \"#utility.yul\":8188:8313   */\n      pop\n        /* \"#utility.yul\":7975:8320   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8326:8520   */\n    tag_72:\n        /* \"#utility.yul\":8366:8370   */\n      0x00\n        /* \"#utility.yul\":8386:8406   */\n      tag_285\n        /* \"#utility.yul\":8404:8405   */\n      dup3\n        /* \"#utility.yul\":8386:8406   */\n      tag_156\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":8381:8406   */\n      swap2\n      pop\n        /* \"#utility.yul\":8420:8440   */\n      tag_286\n        /* \"#utility.yul\":8438:8439   */\n      dup4\n        /* \"#utility.yul\":8420:8440   */\n      tag_156\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":8415:8440   */\n      swap3\n      pop\n        /* \"#utility.yul\":8464:8465   */\n      dup3\n        /* \"#utility.yul\":8461:8462   */\n      dup3\n        /* \"#utility.yul\":8457:8466   */\n      sub\n        /* \"#utility.yul\":8449:8466   */\n      swap1\n      pop\n        /* \"#utility.yul\":8488:8489   */\n      dup2\n        /* \"#utility.yul\":8482:8486   */\n      dup2\n        /* \"#utility.yul\":8479:8490   */\n      gt\n        /* \"#utility.yul\":8476:8513   */\n      iszero\n      tag_287\n      jumpi\n        /* \"#utility.yul\":8493:8511   */\n      tag_288\n      tag_172\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":8476:8513   */\n    tag_287:\n        /* \"#utility.yul\":8326:8520   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8526:8644   */\n    tag_182:\n        /* \"#utility.yul\":8613:8637   */\n      tag_290\n        /* \"#utility.yul\":8631:8636   */\n      dup2\n        /* \"#utility.yul\":8613:8637   */\n      tag_162\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":8608:8611   */\n      dup3\n        /* \"#utility.yul\":8601:8638   */\n      mstore\n        /* \"#utility.yul\":8526:8644   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8650:9108   */\n    tag_79:\n        /* \"#utility.yul\":8807:8811   */\n      0x00\n        /* \"#utility.yul\":8845:8847   */\n      0x60\n        /* \"#utility.yul\":8834:8843   */\n      dup3\n        /* \"#utility.yul\":8830:8848   */\n      add\n        /* \"#utility.yul\":8822:8848   */\n      swap1\n      pop\n        /* \"#utility.yul\":8858:8937   */\n      tag_292\n        /* \"#utility.yul\":8934:8935   */\n      0x00\n        /* \"#utility.yul\":8923:8932   */\n      dup4\n        /* \"#utility.yul\":8919:8936   */\n      add\n        /* \"#utility.yul\":8910:8916   */\n      dup7\n        /* \"#utility.yul\":8858:8937   */\n      tag_178\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":8947:9019   */\n      tag_293\n        /* \"#utility.yul\":9015:9017   */\n      0x20\n        /* \"#utility.yul\":9004:9013   */\n      dup4\n        /* \"#utility.yul\":9000:9018   */\n      add\n        /* \"#utility.yul\":8991:8997   */\n      dup6\n        /* \"#utility.yul\":8947:9019   */\n      tag_182\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":9029:9101   */\n      tag_294\n        /* \"#utility.yul\":9097:9099   */\n      0x40\n        /* \"#utility.yul\":9086:9095   */\n      dup4\n        /* \"#utility.yul\":9082:9100   */\n      add\n        /* \"#utility.yul\":9073:9079   */\n      dup5\n        /* \"#utility.yul\":9029:9101   */\n      tag_157\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":8650:9108   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9114:9336   */\n    tag_88:\n        /* \"#utility.yul\":9207:9211   */\n      0x00\n        /* \"#utility.yul\":9245:9247   */\n      0x20\n        /* \"#utility.yul\":9234:9243   */\n      dup3\n        /* \"#utility.yul\":9230:9248   */\n      add\n        /* \"#utility.yul\":9222:9248   */\n      swap1\n      pop\n        /* \"#utility.yul\":9258:9329   */\n      tag_296\n        /* \"#utility.yul\":9326:9327   */\n      0x00\n        /* \"#utility.yul\":9315:9324   */\n      dup4\n        /* \"#utility.yul\":9311:9328   */\n      add\n        /* \"#utility.yul\":9302:9308   */\n      dup5\n        /* \"#utility.yul\":9258:9329   */\n      tag_182\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":9114:9336   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9342:9485   */\n    tag_183:\n        /* \"#utility.yul\":9399:9404   */\n      0x00\n        /* \"#utility.yul\":9430:9436   */\n      dup2\n        /* \"#utility.yul\":9424:9437   */\n      mload\n        /* \"#utility.yul\":9415:9437   */\n      swap1\n      pop\n        /* \"#utility.yul\":9446:9479   */\n      tag_298\n        /* \"#utility.yul\":9473:9478   */\n      dup2\n        /* \"#utility.yul\":9446:9479   */\n      tag_165\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":9342:9485   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9491:9842   */\n    tag_92:\n        /* \"#utility.yul\":9561:9567   */\n      0x00\n        /* \"#utility.yul\":9610:9612   */\n      0x20\n        /* \"#utility.yul\":9598:9607   */\n      dup3\n        /* \"#utility.yul\":9589:9596   */\n      dup5\n        /* \"#utility.yul\":9585:9608   */\n      sub\n        /* \"#utility.yul\":9581:9613   */\n      slt\n        /* \"#utility.yul\":9578:9697   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":9616:9695   */\n      tag_301\n      tag_159\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":9578:9697   */\n    tag_300:\n        /* \"#utility.yul\":9736:9737   */\n      0x00\n        /* \"#utility.yul\":9761:9825   */\n      tag_302\n        /* \"#utility.yul\":9817:9824   */\n      dup5\n        /* \"#utility.yul\":9808:9814   */\n      dup3\n        /* \"#utility.yul\":9797:9806   */\n      dup6\n        /* \"#utility.yul\":9793:9815   */\n      add\n        /* \"#utility.yul\":9761:9825   */\n      tag_183\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":9751:9825   */\n      swap2\n      pop\n        /* \"#utility.yul\":9707:9835   */\n      pop\n        /* \"#utility.yul\":9491:9842   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9848:10039   */\n    tag_101:\n        /* \"#utility.yul\":9888:9891   */\n      0x00\n        /* \"#utility.yul\":9907:9927   */\n      tag_304\n        /* \"#utility.yul\":9925:9926   */\n      dup3\n        /* \"#utility.yul\":9907:9927   */\n      tag_156\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":9902:9927   */\n      swap2\n      pop\n        /* \"#utility.yul\":9941:9961   */\n      tag_305\n        /* \"#utility.yul\":9959:9960   */\n      dup4\n        /* \"#utility.yul\":9941:9961   */\n      tag_156\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":9936:9961   */\n      swap3\n      pop\n        /* \"#utility.yul\":9984:9985   */\n      dup3\n        /* \"#utility.yul\":9981:9982   */\n      dup3\n        /* \"#utility.yul\":9977:9986   */\n      add\n        /* \"#utility.yul\":9970:9986   */\n      swap1\n      pop\n        /* \"#utility.yul\":10005:10008   */\n      dup1\n        /* \"#utility.yul\":10002:10003   */\n      dup3\n        /* \"#utility.yul\":9999:10009   */\n      gt\n        /* \"#utility.yul\":9996:10032   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":10012:10030   */\n      tag_307\n      tag_172\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":9996:10032   */\n    tag_306:\n        /* \"#utility.yul\":9848:10039   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10045:10205   */\n    tag_184:\n        /* \"#utility.yul\":10185:10197   */\n      0x736861726573203c203000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10181:10182   */\n      0x00\n        /* \"#utility.yul\":10173:10179   */\n      dup3\n        /* \"#utility.yul\":10169:10183   */\n      add\n        /* \"#utility.yul\":10162:10198   */\n      mstore\n        /* \"#utility.yul\":10045:10205   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10211:10577   */\n    tag_185:\n        /* \"#utility.yul\":10353:10356   */\n      0x00\n        /* \"#utility.yul\":10374:10441   */\n      tag_310\n        /* \"#utility.yul\":10438:10440   */\n      0x0a\n        /* \"#utility.yul\":10433:10436   */\n      dup4\n        /* \"#utility.yul\":10374:10441   */\n      tag_167\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":10367:10441   */\n      swap2\n      pop\n        /* \"#utility.yul\":10450:10543   */\n      tag_311\n        /* \"#utility.yul\":10539:10542   */\n      dup3\n        /* \"#utility.yul\":10450:10543   */\n      tag_184\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":10568:10570   */\n      0x20\n        /* \"#utility.yul\":10563:10566   */\n      dup3\n        /* \"#utility.yul\":10559:10571   */\n      add\n        /* \"#utility.yul\":10552:10571   */\n      swap1\n      pop\n        /* \"#utility.yul\":10211:10577   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10583:11002   */\n    tag_109:\n        /* \"#utility.yul\":10749:10753   */\n      0x00\n        /* \"#utility.yul\":10787:10789   */\n      0x20\n        /* \"#utility.yul\":10776:10785   */\n      dup3\n        /* \"#utility.yul\":10772:10790   */\n      add\n        /* \"#utility.yul\":10764:10790   */\n      swap1\n      pop\n        /* \"#utility.yul\":10836:10845   */\n      dup2\n        /* \"#utility.yul\":10830:10834   */\n      dup2\n        /* \"#utility.yul\":10826:10846   */\n      sub\n        /* \"#utility.yul\":10822:10823   */\n      0x00\n        /* \"#utility.yul\":10811:10820   */\n      dup4\n        /* \"#utility.yul\":10807:10824   */\n      add\n        /* \"#utility.yul\":10800:10847   */\n      mstore\n        /* \"#utility.yul\":10864:10995   */\n      tag_313\n        /* \"#utility.yul\":10990:10994   */\n      dup2\n        /* \"#utility.yul\":10864:10995   */\n      tag_185\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":10856:10995   */\n      swap1\n      pop\n        /* \"#utility.yul\":10583:11002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11008:11171   */\n    tag_186:\n        /* \"#utility.yul\":11148:11163   */\n      0x546f6b656e20696e76616c696400000000000000000000000000000000000000\n        /* \"#utility.yul\":11144:11145   */\n      0x00\n        /* \"#utility.yul\":11136:11142   */\n      dup3\n        /* \"#utility.yul\":11132:11146   */\n      add\n        /* \"#utility.yul\":11125:11164   */\n      mstore\n        /* \"#utility.yul\":11008:11171   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11177:11543   */\n    tag_187:\n        /* \"#utility.yul\":11319:11322   */\n      0x00\n        /* \"#utility.yul\":11340:11407   */\n      tag_316\n        /* \"#utility.yul\":11404:11406   */\n      0x0d\n        /* \"#utility.yul\":11399:11402   */\n      dup4\n        /* \"#utility.yul\":11340:11407   */\n      tag_167\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":11333:11407   */\n      swap2\n      pop\n        /* \"#utility.yul\":11416:11509   */\n      tag_317\n        /* \"#utility.yul\":11505:11508   */\n      dup3\n        /* \"#utility.yul\":11416:11509   */\n      tag_186\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":11534:11536   */\n      0x20\n        /* \"#utility.yul\":11529:11532   */\n      dup3\n        /* \"#utility.yul\":11525:11537   */\n      add\n        /* \"#utility.yul\":11518:11537   */\n      swap1\n      pop\n        /* \"#utility.yul\":11177:11543   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11549:11968   */\n    tag_119:\n        /* \"#utility.yul\":11715:11719   */\n      0x00\n        /* \"#utility.yul\":11753:11755   */\n      0x20\n        /* \"#utility.yul\":11742:11751   */\n      dup3\n        /* \"#utility.yul\":11738:11756   */\n      add\n        /* \"#utility.yul\":11730:11756   */\n      swap1\n      pop\n        /* \"#utility.yul\":11802:11811   */\n      dup2\n        /* \"#utility.yul\":11796:11800   */\n      dup2\n        /* \"#utility.yul\":11792:11812   */\n      sub\n        /* \"#utility.yul\":11788:11789   */\n      0x00\n        /* \"#utility.yul\":11777:11786   */\n      dup4\n        /* \"#utility.yul\":11773:11790   */\n      add\n        /* \"#utility.yul\":11766:11813   */\n      mstore\n        /* \"#utility.yul\":11830:11961   */\n      tag_319\n        /* \"#utility.yul\":11956:11960   */\n      dup2\n        /* \"#utility.yul\":11830:11961   */\n      tag_187\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":11822:11961   */\n      swap1\n      pop\n        /* \"#utility.yul\":11549:11968   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11974:12059   */\n    tag_188:\n        /* \"#utility.yul\":12019:12026   */\n      0x00\n        /* \"#utility.yul\":12048:12053   */\n      dup2\n        /* \"#utility.yul\":12037:12053   */\n      swap1\n      pop\n        /* \"#utility.yul\":11974:12059   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12065:12223   */\n    tag_189:\n        /* \"#utility.yul\":12123:12132   */\n      0x00\n        /* \"#utility.yul\":12156:12217   */\n      tag_322\n        /* \"#utility.yul\":12174:12216   */\n      tag_323\n        /* \"#utility.yul\":12183:12215   */\n      tag_324\n        /* \"#utility.yul\":12209:12214   */\n      dup5\n        /* \"#utility.yul\":12183:12215   */\n      tag_188\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":12174:12216   */\n      tag_174\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":12156:12217   */\n      tag_156\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":12143:12217   */\n      swap1\n      pop\n        /* \"#utility.yul\":12065:12223   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12229:12376   */\n    tag_190:\n        /* \"#utility.yul\":12324:12369   */\n      tag_326\n        /* \"#utility.yul\":12363:12368   */\n      dup2\n        /* \"#utility.yul\":12324:12369   */\n      tag_189\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":12319:12322   */\n      dup3\n        /* \"#utility.yul\":12312:12370   */\n      mstore\n        /* \"#utility.yul\":12229:12376   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12382:12967   */\n    tag_143:\n        /* \"#utility.yul\":12575:12579   */\n      0x00\n        /* \"#utility.yul\":12613:12616   */\n      0x80\n        /* \"#utility.yul\":12602:12611   */\n      dup3\n        /* \"#utility.yul\":12598:12617   */\n      add\n        /* \"#utility.yul\":12590:12617   */\n      swap1\n      pop\n        /* \"#utility.yul\":12627:12698   */\n      tag_328\n        /* \"#utility.yul\":12695:12696   */\n      0x00\n        /* \"#utility.yul\":12684:12693   */\n      dup4\n        /* \"#utility.yul\":12680:12697   */\n      add\n        /* \"#utility.yul\":12671:12677   */\n      dup8\n        /* \"#utility.yul\":12627:12698   */\n      tag_157\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":12708:12788   */\n      tag_329\n        /* \"#utility.yul\":12784:12786   */\n      0x20\n        /* \"#utility.yul\":12773:12782   */\n      dup4\n        /* \"#utility.yul\":12769:12787   */\n      add\n        /* \"#utility.yul\":12760:12766   */\n      dup7\n        /* \"#utility.yul\":12708:12788   */\n      tag_190\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":12798:12870   */\n      tag_330\n        /* \"#utility.yul\":12866:12868   */\n      0x40\n        /* \"#utility.yul\":12855:12864   */\n      dup4\n        /* \"#utility.yul\":12851:12869   */\n      add\n        /* \"#utility.yul\":12842:12848   */\n      dup6\n        /* \"#utility.yul\":12798:12870   */\n      tag_157\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":12880:12960   */\n      tag_331\n        /* \"#utility.yul\":12956:12958   */\n      0x60\n        /* \"#utility.yul\":12945:12954   */\n      dup4\n        /* \"#utility.yul\":12941:12959   */\n      add\n        /* \"#utility.yul\":12932:12938   */\n      dup5\n        /* \"#utility.yul\":12880:12960   */\n      tag_190\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":12382:12967   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12973:13558   */\n    tag_148:\n        /* \"#utility.yul\":13166:13170   */\n      0x00\n        /* \"#utility.yul\":13204:13207   */\n      0x80\n        /* \"#utility.yul\":13193:13202   */\n      dup3\n        /* \"#utility.yul\":13189:13208   */\n      add\n        /* \"#utility.yul\":13181:13208   */\n      swap1\n      pop\n        /* \"#utility.yul\":13218:13297   */\n      tag_333\n        /* \"#utility.yul\":13294:13295   */\n      0x00\n        /* \"#utility.yul\":13283:13292   */\n      dup4\n        /* \"#utility.yul\":13279:13296   */\n      add\n        /* \"#utility.yul\":13270:13276   */\n      dup8\n        /* \"#utility.yul\":13218:13297   */\n      tag_190\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":13307:13379   */\n      tag_334\n        /* \"#utility.yul\":13375:13377   */\n      0x20\n        /* \"#utility.yul\":13364:13373   */\n      dup4\n        /* \"#utility.yul\":13360:13378   */\n      add\n        /* \"#utility.yul\":13351:13357   */\n      dup7\n        /* \"#utility.yul\":13307:13379   */\n      tag_157\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":13389:13469   */\n      tag_335\n        /* \"#utility.yul\":13465:13467   */\n      0x40\n        /* \"#utility.yul\":13454:13463   */\n      dup4\n        /* \"#utility.yul\":13450:13468   */\n      add\n        /* \"#utility.yul\":13441:13447   */\n      dup6\n        /* \"#utility.yul\":13389:13469   */\n      tag_190\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":13479:13551   */\n      tag_336\n        /* \"#utility.yul\":13547:13549   */\n      0x60\n        /* \"#utility.yul\":13536:13545   */\n      dup4\n        /* \"#utility.yul\":13532:13550   */\n      add\n        /* \"#utility.yul\":13523:13529   */\n      dup5\n        /* \"#utility.yul\":13479:13551   */\n      tag_157\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":12973:13558   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220716af96a7c0cc24bf8dc59848307eafde54e80d4640b06577239b2187679b9f364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_836": {
									"entryPoint": null,
									"id": 836,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 160,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1355:6",
										"nodeType": "YulBlock",
										"src": "0:1355:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "759:80:6",
													"nodeType": "YulBlock",
													"src": "759:80:6",
													"statements": [
														{
															"nativeSrc": "769:22:6",
															"nodeType": "YulAssignment",
															"src": "769:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:6"
																},
																"nativeSrc": "778:13:6",
																"nodeType": "YulFunctionCall",
																"src": "778:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:6"
																},
																"nativeSrc": "800:33:6",
																"nodeType": "YulFunctionCall",
																"src": "800:33:6"
															},
															"nativeSrc": "800:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:6",
														"nodeType": "YulTypedName",
														"src": "737:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:6",
														"nodeType": "YulTypedName",
														"src": "745:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:6",
														"nodeType": "YulTypedName",
														"src": "753:5:6",
														"type": ""
													}
												],
												"src": "696:143:6"
											},
											{
												"body": {
													"nativeSrc": "939:413:6",
													"nodeType": "YulBlock",
													"src": "939:413:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:6",
																"nodeType": "YulBlock",
																"src": "985:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:6"
																			},
																			"nativeSrc": "987:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:6"
																		},
																		"nativeSrc": "987:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:6"
																		},
																		"nativeSrc": "956:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:6",
																		"nodeType": "YulLiteral",
																		"src": "981:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:6"
																},
																"nativeSrc": "952:32:6",
																"nodeType": "YulFunctionCall",
																"src": "952:32:6"
															},
															"nativeSrc": "949:119:6",
															"nodeType": "YulIf",
															"src": "949:119:6"
														},
														{
															"nativeSrc": "1078:128:6",
															"nodeType": "YulBlock",
															"src": "1078:128:6",
															"statements": [
																{
																	"nativeSrc": "1093:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:6"
																				},
																				"nativeSrc": "1164:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:6"
																		},
																		"nativeSrc": "1132:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:6",
															"nodeType": "YulBlock",
															"src": "1216:129:6",
															"statements": [
																{
																	"nativeSrc": "1231:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:6"
																				},
																				"nativeSrc": "1303:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:6"
																		},
																		"nativeSrc": "1271:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:6",
														"nodeType": "YulTypedName",
														"src": "901:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:6",
														"nodeType": "YulTypedName",
														"src": "912:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:6",
														"nodeType": "YulTypedName",
														"src": "924:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:6",
														"nodeType": "YulTypedName",
														"src": "932:6:6",
														"type": ""
													}
												],
												"src": "845:507:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f80fd5b50604051611629380380611629833981810160405281019061003191906100fe565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050505061013c565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100cd826100a4565b9050919050565b6100dd816100c3565b81146100e7575f80fd5b50565b5f815190506100f8816100d4565b92915050565b5f8060408385031215610114576101136100a0565b5b5f610121858286016100ea565b9250506020610132858286016100ea565b9150509250929050565b60805160a05161147f6101aa5f395f818161039c01528181610517015281816106510152818161083e01528181610926015261098e01525f81816102f701528181610479015281816105b6015281816107e9015281816108ce01528181610947015261096d015261147f5ff3fe60806040526004361061006f575f3560e01c80639c8f9f231161004d5780639c8f9f23146101035780639cd441da14610134578063ba7bde5514610164578063d004f0f71461018e5761006f565b80630d5eb908146100735780634da296a91461009d57806370a08231146100c7575b5f80fd5b34801561007e575f80fd5b506100876101be565b6040516100949190610d91565b60405180910390f35b3480156100a8575f80fd5b506100b16101c4565b6040516100be9190610d91565b60405180910390f35b3480156100d2575f80fd5b506100ed60048036038101906100e89190610e08565b6101c9565b6040516100fa9190610d91565b60405180910390f35b61011d60048036038101906101189190610e5d565b6101de565b60405161012b929190610e88565b60405180910390f35b61014e60048036038101906101499190610eaf565b610472565b60405161015b9190610d91565b60405180910390f35b34801561016f575f80fd5b506101786107dc565b6040516101859190610d91565b60405180910390f35b6101a860048036038101906101a39190610eed565b6107e2565b6040516101b59190610d91565b60405180910390f35b60015481565b5f5481565b6003602052805f5260405f205f915090505481565b5f805f8311610222576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021990610f85565b60405180910390fd5b5f3390505f60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050808511156102aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a190610fed565b60405180910390fd5b5f805490505f60015490505f60025488846102c59190611038565b6102cf91906110a6565b90505f60025489846102e19190611038565b6102eb91906110a6565b90505f821115610392577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb87846040518363ffffffff1660e01b8152600401610350929190611131565b6020604051808303815f875af115801561036c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610390919061118d565b505b5f811115610437577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb87836040518363ffffffff1660e01b81526004016103f5929190611131565b6020604051808303815f875af1158015610411573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610435919061118d565b505b610457828561044691906111b8565b828561045291906111b8565b610c8a565b610461868a610c9b565b818197509750505050505050915091565b5f803390507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd8230876040518463ffffffff1660e01b81526004016104d4939291906111fa565b6020604051808303815f875af11580156104f0573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610514919061118d565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd8230866040518463ffffffff1660e01b8152600401610572939291906111fa565b6020604051808303815f875af115801561058e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105b2919061118d565b505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161060d919061122f565b602060405180830381865afa158015610628573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061064c919061125c565b90505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106a8919061122f565b602060405180830381865afa1580156106c3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106e7919061125c565b90505f8054836106f791906111b8565b90505f6001548361070891906111b8565b90505f805490505f60015490505f6002540361073157828461072a9190611287565b9750610763565b808261073d9190611287565b600254848661074c9190611287565b6107569190611038565b61076091906110a6565b97505b5f88116107a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079c90611304565b60405180910390fd5b6107af8789610d0a565b6107cf84836107be9190611287565b84836107ca9190611287565b610c8a565b5050505050505092915050565b60025481565b5f803390507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061088c57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b6108cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c29061136c565b60405180910390fd5b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161490505f808261096b577f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006109ae565b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000005b915091505f8690505f846109c4576001546109c7565b5f545b90505f8473ffffffffffffffffffffffffffffffffffffffff166323b872dd8830866040518463ffffffff1660e01b8152600401610a07939291906111fa565b6020604051808303815f875af1158015610a23573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a47919061118d565b50818573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a82919061122f565b602060405180830381865afa158015610a9d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ac1919061125c565b610acb91906111b8565b90505f6103e86103e583610adf9190611038565b610ae991906110a6565b90508473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb89836040518363ffffffff1660e01b8152600401610b26929190611131565b6020604051808303815f875af1158015610b42573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b66919061118d565b508615610bf557835f80828254610b7d9190611287565b925050819055508060015f828254610b9591906111b8565b925050819055508773ffffffffffffffffffffffffffffffffffffffff167f49926bbebe8474393f434dfa4f78694c0923efa07d19f2284518bfabd06eb737855f845f604051610be894939291906113c3565b60405180910390a2610c79565b805f80828254610c0591906111b8565b925050819055508360015f828254610c1d9190611287565b925050819055508773ffffffffffffffffffffffffffffffffffffffff167f49926bbebe8474393f434dfa4f78694c0923efa07d19f2284518bfabd06eb7375f865f85604051610c709493929190611406565b60405180910390a25b809850505050505050505092915050565b815f81905550806001819055505050565b8060025f828254610cac91906111b8565b925050819055508060035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610cff91906111b8565b925050819055505050565b8060025f828254610d1b9190611287565b925050819055508060035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610d6e9190611287565b925050819055505050565b5f819050919050565b610d8b81610d79565b82525050565b5f602082019050610da45f830184610d82565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610dd782610dae565b9050919050565b610de781610dcd565b8114610df1575f80fd5b50565b5f81359050610e0281610dde565b92915050565b5f60208284031215610e1d57610e1c610daa565b5b5f610e2a84828501610df4565b91505092915050565b610e3c81610d79565b8114610e46575f80fd5b50565b5f81359050610e5781610e33565b92915050565b5f60208284031215610e7257610e71610daa565b5b5f610e7f84828501610e49565b91505092915050565b5f604082019050610e9b5f830185610d82565b610ea86020830184610d82565b9392505050565b5f8060408385031215610ec557610ec4610daa565b5b5f610ed285828601610e49565b9250506020610ee385828601610e49565b9150509250929050565b5f8060408385031215610f0357610f02610daa565b5b5f610f1085828601610df4565b9250506020610f2185828601610e49565b9150509250929050565b5f82825260208201905092915050565b7f2073686172652073686f756c64203e20300000000000000000000000000000005f82015250565b5f610f6f601183610f2b565b9150610f7a82610f3b565b602082019050919050565b5f6020820190508181035f830152610f9c81610f63565b9050919050565b7f6e6f7420656e6f7567682073686172657320746f2072656d6f766500000000005f82015250565b5f610fd7601b83610f2b565b9150610fe282610fa3565b602082019050919050565b5f6020820190508181035f83015261100481610fcb565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61104282610d79565b915061104d83610d79565b925082820261105b81610d79565b915082820484148315176110725761107161100b565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6110b082610d79565b91506110bb83610d79565b9250826110cb576110ca611079565b5b828204905092915050565b5f819050919050565b5f6110f96110f46110ef84610dae565b6110d6565b610dae565b9050919050565b5f61110a826110df565b9050919050565b5f61111b82611100565b9050919050565b61112b81611111565b82525050565b5f6040820190506111445f830185611122565b6111516020830184610d82565b9392505050565b5f8115159050919050565b61116c81611158565b8114611176575f80fd5b50565b5f8151905061118781611163565b92915050565b5f602082840312156111a2576111a1610daa565b5b5f6111af84828501611179565b91505092915050565b5f6111c282610d79565b91506111cd83610d79565b92508282039050818111156111e5576111e461100b565b5b92915050565b6111f481610dcd565b82525050565b5f60608201905061120d5f830186611122565b61121a60208301856111eb565b6112276040830184610d82565b949350505050565b5f6020820190506112425f8301846111eb565b92915050565b5f8151905061125681610e33565b92915050565b5f6020828403121561127157611270610daa565b5b5f61127e84828501611248565b91505092915050565b5f61129182610d79565b915061129c83610d79565b92508282019050808211156112b4576112b361100b565b5b92915050565b7f736861726573203c2030000000000000000000000000000000000000000000005f82015250565b5f6112ee600a83610f2b565b91506112f9826112ba565b602082019050919050565b5f6020820190508181035f83015261131b816112e2565b9050919050565b7f546f6b656e20696e76616c6964000000000000000000000000000000000000005f82015250565b5f611356600d83610f2b565b915061136182611322565b602082019050919050565b5f6020820190508181035f8301526113838161134a565b9050919050565b5f819050919050565b5f6113ad6113a86113a38461138a565b6110d6565b610d79565b9050919050565b6113bd81611393565b82525050565b5f6080820190506113d65f830187610d82565b6113e360208301866113b4565b6113f06040830185610d82565b6113fd60608301846113b4565b95945050505050565b5f6080820190506114195f8301876113b4565b6114266020830186610d82565b61143360408301856113b4565b6114406060830184610d82565b9594505050505056fea2646970667358221220716af96a7c0cc24bf8dc59848307eafde54e80d4640b06577239b2187679b9f364736f6c634300081a0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1629 CODESIZE SUB DUP1 PUSH2 0x1629 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0xFE JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH2 0x13C JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCD DUP3 PUSH2 0xA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDD DUP2 PUSH2 0xC3 JUMP JUMPDEST DUP2 EQ PUSH2 0xE7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xF8 DUP2 PUSH2 0xD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x114 JUMPI PUSH2 0x113 PUSH2 0xA0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x121 DUP6 DUP3 DUP7 ADD PUSH2 0xEA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x132 DUP6 DUP3 DUP7 ADD PUSH2 0xEA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x147F PUSH2 0x1AA PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x39C ADD MSTORE DUP2 DUP2 PUSH2 0x517 ADD MSTORE DUP2 DUP2 PUSH2 0x651 ADD MSTORE DUP2 DUP2 PUSH2 0x83E ADD MSTORE DUP2 DUP2 PUSH2 0x926 ADD MSTORE PUSH2 0x98E ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x2F7 ADD MSTORE DUP2 DUP2 PUSH2 0x479 ADD MSTORE DUP2 DUP2 PUSH2 0x5B6 ADD MSTORE DUP2 DUP2 PUSH2 0x7E9 ADD MSTORE DUP2 DUP2 PUSH2 0x8CE ADD MSTORE DUP2 DUP2 PUSH2 0x947 ADD MSTORE PUSH2 0x96D ADD MSTORE PUSH2 0x147F PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9C8F9F23 GT PUSH2 0x4D JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0xBA7BDE55 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0xD004F0F7 EQ PUSH2 0x18E JUMPI PUSH2 0x6F JUMP JUMPDEST DUP1 PUSH4 0xD5EB908 EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0x4DA296A9 EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xC7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x87 PUSH2 0x1BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB1 PUSH2 0x1C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBE SWAP2 SWAP1 PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xE08 JUMP JUMPDEST PUSH2 0x1C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x118 SWAP2 SWAP1 PUSH2 0xE5D JUMP JUMPDEST PUSH2 0x1DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP3 SWAP2 SWAP1 PUSH2 0xE88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x149 SWAP2 SWAP1 PUSH2 0xEAF JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B SWAP2 SWAP1 PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x178 PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0xEED JUMP JUMPDEST PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 GT PUSH2 0x222 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x219 SWAP1 PUSH2 0xF85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP6 GT ISZERO PUSH2 0x2AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A1 SWAP1 PUSH2 0xFED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 POP PUSH0 PUSH1 0x1 SLOAD SWAP1 POP PUSH0 PUSH1 0x2 SLOAD DUP9 DUP5 PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x1038 JUMP JUMPDEST PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x10A6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 SLOAD DUP10 DUP5 PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x1038 JUMP JUMPDEST PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x10A6 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 GT ISZERO PUSH2 0x392 JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP8 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x350 SWAP3 SWAP2 SWAP1 PUSH2 0x1131 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x36C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x118D JUMP JUMPDEST POP JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x437 JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP8 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F5 SWAP3 SWAP2 SWAP1 PUSH2 0x1131 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x411 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x118D JUMP JUMPDEST POP JUMPDEST PUSH2 0x457 DUP3 DUP6 PUSH2 0x446 SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST DUP3 DUP6 PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x461 DUP7 DUP11 PUSH2 0xC9B JUMP JUMPDEST DUP2 DUP2 SWAP8 POP SWAP8 POP POP POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 DUP1 CALLER SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP3 ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4F0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x514 SWAP2 SWAP1 PUSH2 0x118D JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP3 ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x572 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x58E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B2 SWAP2 SWAP1 PUSH2 0x118D JUMP JUMPDEST POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x628 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x64C SWAP2 SWAP1 PUSH2 0x125C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A8 SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6C3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E7 SWAP2 SWAP1 PUSH2 0x125C JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 SLOAD DUP4 PUSH2 0x6F7 SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 SLOAD DUP4 PUSH2 0x708 SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 SLOAD SWAP1 POP PUSH0 PUSH1 0x1 SLOAD SWAP1 POP PUSH0 PUSH1 0x2 SLOAD SUB PUSH2 0x731 JUMPI DUP3 DUP5 PUSH2 0x72A SWAP2 SWAP1 PUSH2 0x1287 JUMP JUMPDEST SWAP8 POP PUSH2 0x763 JUMP JUMPDEST DUP1 DUP3 PUSH2 0x73D SWAP2 SWAP1 PUSH2 0x1287 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP5 DUP7 PUSH2 0x74C SWAP2 SWAP1 PUSH2 0x1287 JUMP JUMPDEST PUSH2 0x756 SWAP2 SWAP1 PUSH2 0x1038 JUMP JUMPDEST PUSH2 0x760 SWAP2 SWAP1 PUSH2 0x10A6 JUMP JUMPDEST SWAP8 POP JUMPDEST PUSH0 DUP9 GT PUSH2 0x7A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79C SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7AF DUP8 DUP10 PUSH2 0xD0A JUMP JUMPDEST PUSH2 0x7CF DUP5 DUP4 PUSH2 0x7BE SWAP2 SWAP1 PUSH2 0x1287 JUMP JUMPDEST DUP5 DUP4 PUSH2 0x7CA SWAP2 SWAP1 PUSH2 0x1287 JUMP JUMPDEST PUSH2 0xC8A JUMP JUMPDEST POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 CALLER SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x88C JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x8CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C2 SWAP1 PUSH2 0x136C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH0 DUP1 DUP3 PUSH2 0x96B JUMPI PUSH32 0x0 PUSH32 0x0 PUSH2 0x9AE JUMP JUMPDEST PUSH32 0x0 PUSH32 0x0 JUMPDEST SWAP2 POP SWAP2 POP PUSH0 DUP7 SWAP1 POP PUSH0 DUP5 PUSH2 0x9C4 JUMPI PUSH1 0x1 SLOAD PUSH2 0x9C7 JUMP JUMPDEST PUSH0 SLOAD JUMPDEST SWAP1 POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP9 ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA07 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA23 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA47 SWAP2 SWAP1 PUSH2 0x118D JUMP JUMPDEST POP DUP2 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA82 SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA9D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAC1 SWAP2 SWAP1 PUSH2 0x125C JUMP JUMPDEST PUSH2 0xACB SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x3E8 PUSH2 0x3E5 DUP4 PUSH2 0xADF SWAP2 SWAP1 PUSH2 0x1038 JUMP JUMPDEST PUSH2 0xAE9 SWAP2 SWAP1 PUSH2 0x10A6 JUMP JUMPDEST SWAP1 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP10 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB26 SWAP3 SWAP2 SWAP1 PUSH2 0x1131 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB42 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB66 SWAP2 SWAP1 PUSH2 0x118D JUMP JUMPDEST POP DUP7 ISZERO PUSH2 0xBF5 JUMPI DUP4 PUSH0 DUP1 DUP3 DUP3 SLOAD PUSH2 0xB7D SWAP2 SWAP1 PUSH2 0x1287 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB95 SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x49926BBEBE8474393F434DFA4F78694C0923EFA07D19F2284518BFABD06EB737 DUP6 PUSH0 DUP5 PUSH0 PUSH1 0x40 MLOAD PUSH2 0xBE8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xC79 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP3 DUP3 SLOAD PUSH2 0xC05 SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC1D SWAP2 SWAP1 PUSH2 0x1287 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x49926BBEBE8474393F434DFA4F78694C0923EFA07D19F2284518BFABD06EB737 PUSH0 DUP7 PUSH0 DUP6 PUSH1 0x40 MLOAD PUSH2 0xC70 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1406 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP1 SWAP9 POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 PUSH0 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCAC SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCFF SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD1B SWAP2 SWAP1 PUSH2 0x1287 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD6E SWAP2 SWAP1 PUSH2 0x1287 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD8B DUP2 PUSH2 0xD79 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDA4 PUSH0 DUP4 ADD DUP5 PUSH2 0xD82 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDD7 DUP3 PUSH2 0xDAE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDE7 DUP2 PUSH2 0xDCD JUMP JUMPDEST DUP2 EQ PUSH2 0xDF1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE02 DUP2 PUSH2 0xDDE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE1D JUMPI PUSH2 0xE1C PUSH2 0xDAA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE2A DUP5 DUP3 DUP6 ADD PUSH2 0xDF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE3C DUP2 PUSH2 0xD79 JUMP JUMPDEST DUP2 EQ PUSH2 0xE46 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE57 DUP2 PUSH2 0xE33 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE72 JUMPI PUSH2 0xE71 PUSH2 0xDAA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE7F DUP5 DUP3 DUP6 ADD PUSH2 0xE49 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xE9B PUSH0 DUP4 ADD DUP6 PUSH2 0xD82 JUMP JUMPDEST PUSH2 0xEA8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD82 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEC5 JUMPI PUSH2 0xEC4 PUSH2 0xDAA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xED2 DUP6 DUP3 DUP7 ADD PUSH2 0xE49 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEE3 DUP6 DUP3 DUP7 ADD PUSH2 0xE49 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF03 JUMPI PUSH2 0xF02 PUSH2 0xDAA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF10 DUP6 DUP3 DUP7 ADD PUSH2 0xDF4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF21 DUP6 DUP3 DUP7 ADD PUSH2 0xE49 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2073686172652073686F756C64203E2030000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF6F PUSH1 0x11 DUP4 PUSH2 0xF2B JUMP JUMPDEST SWAP2 POP PUSH2 0xF7A DUP3 PUSH2 0xF3B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF9C DUP2 PUSH2 0xF63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F7420656E6F7567682073686172657320746F2072656D6F76650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFD7 PUSH1 0x1B DUP4 PUSH2 0xF2B JUMP JUMPDEST SWAP2 POP PUSH2 0xFE2 DUP3 PUSH2 0xFA3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1004 DUP2 PUSH2 0xFCB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1042 DUP3 PUSH2 0xD79 JUMP JUMPDEST SWAP2 POP PUSH2 0x104D DUP4 PUSH2 0xD79 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x105B DUP2 PUSH2 0xD79 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1072 JUMPI PUSH2 0x1071 PUSH2 0x100B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x10B0 DUP3 PUSH2 0xD79 JUMP JUMPDEST SWAP2 POP PUSH2 0x10BB DUP4 PUSH2 0xD79 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x10CB JUMPI PUSH2 0x10CA PUSH2 0x1079 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10F9 PUSH2 0x10F4 PUSH2 0x10EF DUP5 PUSH2 0xDAE JUMP JUMPDEST PUSH2 0x10D6 JUMP JUMPDEST PUSH2 0xDAE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x110A DUP3 PUSH2 0x10DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x111B DUP3 PUSH2 0x1100 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x112B DUP2 PUSH2 0x1111 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1144 PUSH0 DUP4 ADD DUP6 PUSH2 0x1122 JUMP JUMPDEST PUSH2 0x1151 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD82 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x116C DUP2 PUSH2 0x1158 JUMP JUMPDEST DUP2 EQ PUSH2 0x1176 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1187 DUP2 PUSH2 0x1163 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11A2 JUMPI PUSH2 0x11A1 PUSH2 0xDAA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11AF DUP5 DUP3 DUP6 ADD PUSH2 0x1179 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11C2 DUP3 PUSH2 0xD79 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CD DUP4 PUSH2 0xD79 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x11E5 JUMPI PUSH2 0x11E4 PUSH2 0x100B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11F4 DUP2 PUSH2 0xDCD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x120D PUSH0 DUP4 ADD DUP7 PUSH2 0x1122 JUMP JUMPDEST PUSH2 0x121A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x11EB JUMP JUMPDEST PUSH2 0x1227 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD82 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1242 PUSH0 DUP4 ADD DUP5 PUSH2 0x11EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1256 DUP2 PUSH2 0xE33 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1271 JUMPI PUSH2 0x1270 PUSH2 0xDAA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x127E DUP5 DUP3 DUP6 ADD PUSH2 0x1248 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1291 DUP3 PUSH2 0xD79 JUMP JUMPDEST SWAP2 POP PUSH2 0x129C DUP4 PUSH2 0xD79 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x12B4 JUMPI PUSH2 0x12B3 PUSH2 0x100B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x736861726573203C203000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12EE PUSH1 0xA DUP4 PUSH2 0xF2B JUMP JUMPDEST SWAP2 POP PUSH2 0x12F9 DUP3 PUSH2 0x12BA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x131B DUP2 PUSH2 0x12E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E20696E76616C696400000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1356 PUSH1 0xD DUP4 PUSH2 0xF2B JUMP JUMPDEST SWAP2 POP PUSH2 0x1361 DUP3 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1383 DUP2 PUSH2 0x134A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13AD PUSH2 0x13A8 PUSH2 0x13A3 DUP5 PUSH2 0x138A JUMP JUMPDEST PUSH2 0x10D6 JUMP JUMPDEST PUSH2 0xD79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13BD DUP2 PUSH2 0x1393 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x13D6 PUSH0 DUP4 ADD DUP8 PUSH2 0xD82 JUMP JUMPDEST PUSH2 0x13E3 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x13B4 JUMP JUMPDEST PUSH2 0x13F0 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xD82 JUMP JUMPDEST PUSH2 0x13FD PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x13B4 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1419 PUSH0 DUP4 ADD DUP8 PUSH2 0x13B4 JUMP JUMPDEST PUSH2 0x1426 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xD82 JUMP JUMPDEST PUSH2 0x1433 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x13B4 JUMP JUMPDEST PUSH2 0x1440 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xD82 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x6AF96A7C0CC24BF8DC59848307EAFDE54E80 0xD4 PUSH5 0xB06577239 0xB2 XOR PUSH23 0x79B9F364736F6C634300081A0033000000000000000000 ",
							"sourceMap": "119:5267:5:-:0;;;680:443;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;760:11;744:28;;;;;;;;;;799:11;783:28;;;;;;;;;;680:443;;119:5267;;88:117:6;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;119:5267:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_burn_872": {
									"entryPoint": 3227,
									"id": 872,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_854": {
									"entryPoint": 3338,
									"id": 854,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_updateLiquidity_888": {
									"entryPoint": 3210,
									"id": 888,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addLiquidity_1166": {
									"entryPoint": 1138,
									"id": 1166,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_816": {
									"entryPoint": 457,
									"id": 816,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@removeLiquidity_1268": {
									"entryPoint": 478,
									"id": 1268,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@reverse0_808": {
									"entryPoint": 452,
									"id": 808,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reverse1_810": {
									"entryPoint": 446,
									"id": 810,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swap_1038": {
									"entryPoint": 2018,
									"id": 1038,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalSupplyShares_812": {
									"entryPoint": 2012,
									"id": 812,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4680,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 3759,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_payable_to_t_address_fromStack": {
									"entryPoint": 4386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
									"entryPoint": 5044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_32c653245c0228225a258bd03165739cf6325d21bf62854131df10f81c47b11c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3939,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8c9681eec7b9e51c29345bfe73192ffcc986b5075f1cf5eb963a6153498fcbee_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ec53abdba0c504b1596ec465ad31a403eca74d58284230d63be9ec31b4299353_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4938,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ed276504624489b2996b0ff7998948c3b56ac6319f900633e32f7dd9aa170503_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4602,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4401,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_0_by_1_t_uint256_t_rational_0_by_1_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5126,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_32c653245c0228225a258bd03165739cf6325d21bf62854131df10f81c47b11c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3973,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8c9681eec7b9e51c29345bfe73192ffcc986b5075f1cf5eb963a6153498fcbee__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ec53abdba0c504b1596ec465ad31a403eca74d58284230d63be9ec31b4299353__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4972,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ed276504624489b2996b0ff7998948c3b56ac6319f900633e32f7dd9aa170503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_rational_0_by_1_t_uint256_t_rational_0_by_1__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5059,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3720,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 5002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3449,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_address_payable_to_t_address": {
									"entryPoint": 4369,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_0_by_1_to_t_uint256": {
									"entryPoint": 5011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4352,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4319,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 4310,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4107,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4217,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3498,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_32c653245c0228225a258bd03165739cf6325d21bf62854131df10f81c47b11c": {
									"entryPoint": 3899,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8c9681eec7b9e51c29345bfe73192ffcc986b5075f1cf5eb963a6153498fcbee": {
									"entryPoint": 4003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ec53abdba0c504b1596ec465ad31a403eca74d58284230d63be9ec31b4299353": {
									"entryPoint": 4898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ed276504624489b2996b0ff7998948c3b56ac6319f900633e32f7dd9aa170503": {
									"entryPoint": 4794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13561:6",
										"nodeType": "YulBlock",
										"src": "0:13561:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:6",
													"nodeType": "YulBlock",
													"src": "52:32:6",
													"statements": [
														{
															"nativeSrc": "62:16:6",
															"nodeType": "YulAssignment",
															"src": "62:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:6",
																"nodeType": "YulIdentifier",
																"src": "73:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:6",
														"nodeType": "YulTypedName",
														"src": "34:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:6",
														"nodeType": "YulTypedName",
														"src": "44:7:6",
														"type": ""
													}
												],
												"src": "7:77:6"
											},
											{
												"body": {
													"nativeSrc": "155:53:6",
													"nodeType": "YulBlock",
													"src": "155:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:6"
																		},
																		"nativeSrc": "177:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:6"
																},
																"nativeSrc": "165:37:6",
																"nodeType": "YulFunctionCall",
																"src": "165:37:6"
															},
															"nativeSrc": "165:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:6",
														"nodeType": "YulTypedName",
														"src": "143:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:6",
														"nodeType": "YulTypedName",
														"src": "150:3:6",
														"type": ""
													}
												],
												"src": "90:118:6"
											},
											{
												"body": {
													"nativeSrc": "312:124:6",
													"nodeType": "YulBlock",
													"src": "312:124:6",
													"statements": [
														{
															"nativeSrc": "322:26:6",
															"nodeType": "YulAssignment",
															"src": "322:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:6",
																		"nodeType": "YulLiteral",
																		"src": "345:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:6"
																},
																"nativeSrc": "330:18:6",
																"nodeType": "YulFunctionCall",
																"src": "330:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:6",
																				"nodeType": "YulLiteral",
																				"src": "426:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:6"
																		},
																		"nativeSrc": "411:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:6"
																},
																"nativeSrc": "358:71:6",
																"nodeType": "YulFunctionCall",
																"src": "358:71:6"
															},
															"nativeSrc": "358:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:6",
														"nodeType": "YulTypedName",
														"src": "284:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:6",
														"nodeType": "YulTypedName",
														"src": "296:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:6",
														"nodeType": "YulTypedName",
														"src": "307:4:6",
														"type": ""
													}
												],
												"src": "214:222:6"
											},
											{
												"body": {
													"nativeSrc": "482:35:6",
													"nodeType": "YulBlock",
													"src": "482:35:6",
													"statements": [
														{
															"nativeSrc": "492:19:6",
															"nodeType": "YulAssignment",
															"src": "492:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "508:2:6",
																		"nodeType": "YulLiteral",
																		"src": "508:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "502:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:6"
																},
																"nativeSrc": "502:9:6",
																"nodeType": "YulFunctionCall",
																"src": "502:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "492:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "442:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "475:6:6",
														"nodeType": "YulTypedName",
														"src": "475:6:6",
														"type": ""
													}
												],
												"src": "442:75:6"
											},
											{
												"body": {
													"nativeSrc": "612:28:6",
													"nodeType": "YulBlock",
													"src": "612:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:6",
																		"nodeType": "YulLiteral",
																		"src": "629:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:1:6",
																		"nodeType": "YulLiteral",
																		"src": "632:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "622:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:6"
																},
																"nativeSrc": "622:12:6",
																"nodeType": "YulFunctionCall",
																"src": "622:12:6"
															},
															"nativeSrc": "622:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "622:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "523:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:6"
											},
											{
												"body": {
													"nativeSrc": "735:28:6",
													"nodeType": "YulBlock",
													"src": "735:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "752:1:6",
																		"nodeType": "YulLiteral",
																		"src": "752:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "755:1:6",
																		"nodeType": "YulLiteral",
																		"src": "755:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "745:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:6"
																},
																"nativeSrc": "745:12:6",
																"nodeType": "YulFunctionCall",
																"src": "745:12:6"
															},
															"nativeSrc": "745:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "745:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "646:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:6"
											},
											{
												"body": {
													"nativeSrc": "814:81:6",
													"nodeType": "YulBlock",
													"src": "814:81:6",
													"statements": [
														{
															"nativeSrc": "824:65:6",
															"nodeType": "YulAssignment",
															"src": "824:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "839:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "839:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "846:42:6",
																		"nodeType": "YulLiteral",
																		"src": "846:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "835:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:6"
																},
																"nativeSrc": "835:54:6",
																"nodeType": "YulFunctionCall",
																"src": "835:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "824:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "824:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "769:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "796:5:6",
														"nodeType": "YulTypedName",
														"src": "796:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "806:7:6",
														"nodeType": "YulTypedName",
														"src": "806:7:6",
														"type": ""
													}
												],
												"src": "769:126:6"
											},
											{
												"body": {
													"nativeSrc": "946:51:6",
													"nodeType": "YulBlock",
													"src": "946:51:6",
													"statements": [
														{
															"nativeSrc": "956:35:6",
															"nodeType": "YulAssignment",
															"src": "956:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "985:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "985:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "967:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "967:17:6"
																},
																"nativeSrc": "967:24:6",
																"nodeType": "YulFunctionCall",
																"src": "967:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "956:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "956:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "901:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "928:5:6",
														"nodeType": "YulTypedName",
														"src": "928:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "938:7:6",
														"nodeType": "YulTypedName",
														"src": "938:7:6",
														"type": ""
													}
												],
												"src": "901:96:6"
											},
											{
												"body": {
													"nativeSrc": "1046:79:6",
													"nodeType": "YulBlock",
													"src": "1046:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1103:16:6",
																"nodeType": "YulBlock",
																"src": "1103:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1112:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1115:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1115:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1105:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1105:6:6"
																			},
																			"nativeSrc": "1105:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1105:12:6"
																		},
																		"nativeSrc": "1105:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1105:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1069:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1094:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1094:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1076:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1076:17:6"
																				},
																				"nativeSrc": "1076:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1076:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1066:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:6"
																		},
																		"nativeSrc": "1066:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1066:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1059:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:6"
																},
																"nativeSrc": "1059:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1059:43:6"
															},
															"nativeSrc": "1056:63:6",
															"nodeType": "YulIf",
															"src": "1056:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1003:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1039:5:6",
														"nodeType": "YulTypedName",
														"src": "1039:5:6",
														"type": ""
													}
												],
												"src": "1003:122:6"
											},
											{
												"body": {
													"nativeSrc": "1183:87:6",
													"nodeType": "YulBlock",
													"src": "1183:87:6",
													"statements": [
														{
															"nativeSrc": "1193:29:6",
															"nodeType": "YulAssignment",
															"src": "1193:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1215:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1202:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1202:12:6"
																},
																"nativeSrc": "1202:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1202:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1193:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1193:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1258:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1258:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1231:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1231:26:6"
																},
																"nativeSrc": "1231:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1231:33:6"
															},
															"nativeSrc": "1231:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1231:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1131:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1161:6:6",
														"nodeType": "YulTypedName",
														"src": "1161:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1169:3:6",
														"nodeType": "YulTypedName",
														"src": "1169:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1177:5:6",
														"nodeType": "YulTypedName",
														"src": "1177:5:6",
														"type": ""
													}
												],
												"src": "1131:139:6"
											},
											{
												"body": {
													"nativeSrc": "1342:263:6",
													"nodeType": "YulBlock",
													"src": "1342:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1388:83:6",
																"nodeType": "YulBlock",
																"src": "1388:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1390:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1390:77:6"
																			},
																			"nativeSrc": "1390:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1390:79:6"
																		},
																		"nativeSrc": "1390:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1390:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1363:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1363:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1372:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1372:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1359:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1359:3:6"
																		},
																		"nativeSrc": "1359:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1359:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1384:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1384:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1355:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1355:3:6"
																},
																"nativeSrc": "1355:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1355:32:6"
															},
															"nativeSrc": "1352:119:6",
															"nodeType": "YulIf",
															"src": "1352:119:6"
														},
														{
															"nativeSrc": "1481:117:6",
															"nodeType": "YulBlock",
															"src": "1481:117:6",
															"statements": [
																{
																	"nativeSrc": "1496:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1496:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1510:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1510:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1500:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1500:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1525:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1525:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1560:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1560:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1571:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1571:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1556:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1556:3:6"
																				},
																				"nativeSrc": "1556:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1556:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1580:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1580:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1535:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1535:20:6"
																		},
																		"nativeSrc": "1535:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1535:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1525:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1525:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1276:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1312:9:6",
														"nodeType": "YulTypedName",
														"src": "1312:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1323:7:6",
														"nodeType": "YulTypedName",
														"src": "1323:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1335:6:6",
														"nodeType": "YulTypedName",
														"src": "1335:6:6",
														"type": ""
													}
												],
												"src": "1276:329:6"
											},
											{
												"body": {
													"nativeSrc": "1654:79:6",
													"nodeType": "YulBlock",
													"src": "1654:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1711:16:6",
																"nodeType": "YulBlock",
																"src": "1711:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1720:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1723:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1713:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:6"
																			},
																			"nativeSrc": "1713:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:6"
																		},
																		"nativeSrc": "1713:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1677:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1702:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1684:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:6"
																				},
																				"nativeSrc": "1684:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1674:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:6"
																		},
																		"nativeSrc": "1674:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1667:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:6"
																},
																"nativeSrc": "1667:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1667:43:6"
															},
															"nativeSrc": "1664:63:6",
															"nodeType": "YulIf",
															"src": "1664:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1611:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1647:5:6",
														"nodeType": "YulTypedName",
														"src": "1647:5:6",
														"type": ""
													}
												],
												"src": "1611:122:6"
											},
											{
												"body": {
													"nativeSrc": "1791:87:6",
													"nodeType": "YulBlock",
													"src": "1791:87:6",
													"statements": [
														{
															"nativeSrc": "1801:29:6",
															"nodeType": "YulAssignment",
															"src": "1801:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1823:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1810:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:6"
																},
																"nativeSrc": "1810:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1810:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1801:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1866:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1839:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:6"
																},
																"nativeSrc": "1839:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1839:33:6"
															},
															"nativeSrc": "1839:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1739:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1769:6:6",
														"nodeType": "YulTypedName",
														"src": "1769:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1777:3:6",
														"nodeType": "YulTypedName",
														"src": "1777:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1785:5:6",
														"nodeType": "YulTypedName",
														"src": "1785:5:6",
														"type": ""
													}
												],
												"src": "1739:139:6"
											},
											{
												"body": {
													"nativeSrc": "1950:263:6",
													"nodeType": "YulBlock",
													"src": "1950:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1996:83:6",
																"nodeType": "YulBlock",
																"src": "1996:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1998:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1998:77:6"
																			},
																			"nativeSrc": "1998:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1998:79:6"
																		},
																		"nativeSrc": "1998:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1971:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1980:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1980:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1967:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:6"
																		},
																		"nativeSrc": "1967:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1967:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1992:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1963:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:6"
																},
																"nativeSrc": "1963:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1963:32:6"
															},
															"nativeSrc": "1960:119:6",
															"nodeType": "YulIf",
															"src": "1960:119:6"
														},
														{
															"nativeSrc": "2089:117:6",
															"nodeType": "YulBlock",
															"src": "2089:117:6",
															"statements": [
																{
																	"nativeSrc": "2104:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2104:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2118:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2118:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2108:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2108:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2133:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2133:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2168:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2168:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2179:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2179:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2164:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:6"
																				},
																				"nativeSrc": "2164:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2164:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2188:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2188:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2143:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2143:20:6"
																		},
																		"nativeSrc": "2143:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2143:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2133:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2133:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1884:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1920:9:6",
														"nodeType": "YulTypedName",
														"src": "1920:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1931:7:6",
														"nodeType": "YulTypedName",
														"src": "1931:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1943:6:6",
														"nodeType": "YulTypedName",
														"src": "1943:6:6",
														"type": ""
													}
												],
												"src": "1884:329:6"
											},
											{
												"body": {
													"nativeSrc": "2345:206:6",
													"nodeType": "YulBlock",
													"src": "2345:206:6",
													"statements": [
														{
															"nativeSrc": "2355:26:6",
															"nodeType": "YulAssignment",
															"src": "2355:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2367:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2367:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2378:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2378:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2363:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2363:3:6"
																},
																"nativeSrc": "2363:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2363:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2355:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2355:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2435:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2435:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2448:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2448:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2459:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2459:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2444:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:6"
																		},
																		"nativeSrc": "2444:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2444:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2391:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "2391:43:6"
																},
																"nativeSrc": "2391:71:6",
																"nodeType": "YulFunctionCall",
																"src": "2391:71:6"
															},
															"nativeSrc": "2391:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "2391:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2516:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2516:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2529:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2529:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2540:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2540:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2525:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2525:3:6"
																		},
																		"nativeSrc": "2525:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2525:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2472:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "2472:43:6"
																},
																"nativeSrc": "2472:72:6",
																"nodeType": "YulFunctionCall",
																"src": "2472:72:6"
															},
															"nativeSrc": "2472:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "2472:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2219:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2309:9:6",
														"nodeType": "YulTypedName",
														"src": "2309:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2321:6:6",
														"nodeType": "YulTypedName",
														"src": "2321:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2329:6:6",
														"nodeType": "YulTypedName",
														"src": "2329:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2340:4:6",
														"nodeType": "YulTypedName",
														"src": "2340:4:6",
														"type": ""
													}
												],
												"src": "2219:332:6"
											},
											{
												"body": {
													"nativeSrc": "2640:391:6",
													"nodeType": "YulBlock",
													"src": "2640:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2686:83:6",
																"nodeType": "YulBlock",
																"src": "2686:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2688:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2688:77:6"
																			},
																			"nativeSrc": "2688:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2688:79:6"
																		},
																		"nativeSrc": "2688:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2688:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2661:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2661:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2670:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2670:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2657:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2657:3:6"
																		},
																		"nativeSrc": "2657:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2657:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2682:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2682:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2653:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2653:3:6"
																},
																"nativeSrc": "2653:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2653:32:6"
															},
															"nativeSrc": "2650:119:6",
															"nodeType": "YulIf",
															"src": "2650:119:6"
														},
														{
															"nativeSrc": "2779:117:6",
															"nodeType": "YulBlock",
															"src": "2779:117:6",
															"statements": [
																{
																	"nativeSrc": "2794:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2794:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2808:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2808:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2798:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2798:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2823:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2823:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2858:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2858:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2869:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2869:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2854:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2854:3:6"
																				},
																				"nativeSrc": "2854:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2854:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2878:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2878:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2833:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2833:20:6"
																		},
																		"nativeSrc": "2833:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2833:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2823:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2823:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2906:118:6",
															"nodeType": "YulBlock",
															"src": "2906:118:6",
															"statements": [
																{
																	"nativeSrc": "2921:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2921:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2935:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2935:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2925:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2925:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2951:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2951:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2986:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2986:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2997:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2997:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2982:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2982:3:6"
																				},
																				"nativeSrc": "2982:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2982:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3006:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3006:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2961:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2961:20:6"
																		},
																		"nativeSrc": "2961:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2961:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2951:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2951:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "2557:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2602:9:6",
														"nodeType": "YulTypedName",
														"src": "2602:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2613:7:6",
														"nodeType": "YulTypedName",
														"src": "2613:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2625:6:6",
														"nodeType": "YulTypedName",
														"src": "2625:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2633:6:6",
														"nodeType": "YulTypedName",
														"src": "2633:6:6",
														"type": ""
													}
												],
												"src": "2557:474:6"
											},
											{
												"body": {
													"nativeSrc": "3120:391:6",
													"nodeType": "YulBlock",
													"src": "3120:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3166:83:6",
																"nodeType": "YulBlock",
																"src": "3166:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3168:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3168:77:6"
																			},
																			"nativeSrc": "3168:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3168:79:6"
																		},
																		"nativeSrc": "3168:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3168:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3141:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3141:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3150:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3150:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3137:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3137:3:6"
																		},
																		"nativeSrc": "3137:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3137:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3162:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3162:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3133:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3133:3:6"
																},
																"nativeSrc": "3133:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3133:32:6"
															},
															"nativeSrc": "3130:119:6",
															"nodeType": "YulIf",
															"src": "3130:119:6"
														},
														{
															"nativeSrc": "3259:117:6",
															"nodeType": "YulBlock",
															"src": "3259:117:6",
															"statements": [
																{
																	"nativeSrc": "3274:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3274:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3288:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3288:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3278:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3278:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3303:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3303:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3338:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3338:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3349:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3349:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3334:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3334:3:6"
																				},
																				"nativeSrc": "3334:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3334:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3358:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3358:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3313:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3313:20:6"
																		},
																		"nativeSrc": "3313:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3313:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3303:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3303:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3386:118:6",
															"nodeType": "YulBlock",
															"src": "3386:118:6",
															"statements": [
																{
																	"nativeSrc": "3401:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3401:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3415:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3415:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3405:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3405:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3431:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3431:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3466:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3466:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3477:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3477:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3462:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3462:3:6"
																				},
																				"nativeSrc": "3462:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3462:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3486:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3486:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3441:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3441:20:6"
																		},
																		"nativeSrc": "3441:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3441:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3431:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3431:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3037:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3082:9:6",
														"nodeType": "YulTypedName",
														"src": "3082:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3093:7:6",
														"nodeType": "YulTypedName",
														"src": "3093:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3105:6:6",
														"nodeType": "YulTypedName",
														"src": "3105:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3113:6:6",
														"nodeType": "YulTypedName",
														"src": "3113:6:6",
														"type": ""
													}
												],
												"src": "3037:474:6"
											},
											{
												"body": {
													"nativeSrc": "3613:73:6",
													"nodeType": "YulBlock",
													"src": "3613:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3630:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3630:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3635:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3635:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3623:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3623:6:6"
																},
																"nativeSrc": "3623:19:6",
																"nodeType": "YulFunctionCall",
																"src": "3623:19:6"
															},
															"nativeSrc": "3623:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "3623:19:6"
														},
														{
															"nativeSrc": "3651:29:6",
															"nodeType": "YulAssignment",
															"src": "3651:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3670:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3670:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3675:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3675:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3666:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3666:3:6"
																},
																"nativeSrc": "3666:14:6",
																"nodeType": "YulFunctionCall",
																"src": "3666:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3651:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "3651:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3517:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3585:3:6",
														"nodeType": "YulTypedName",
														"src": "3585:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3590:6:6",
														"nodeType": "YulTypedName",
														"src": "3590:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3601:11:6",
														"nodeType": "YulTypedName",
														"src": "3601:11:6",
														"type": ""
													}
												],
												"src": "3517:169:6"
											},
											{
												"body": {
													"nativeSrc": "3798:61:6",
													"nodeType": "YulBlock",
													"src": "3798:61:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3820:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3820:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3828:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3828:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3816:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3816:3:6"
																		},
																		"nativeSrc": "3816:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3816:14:6"
																	},
																	{
																		"hexValue": "2073686172652073686f756c64203e2030",
																		"kind": "string",
																		"nativeSrc": "3832:19:6",
																		"nodeType": "YulLiteral",
																		"src": "3832:19:6",
																		"type": "",
																		"value": " share should > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3809:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3809:6:6"
																},
																"nativeSrc": "3809:43:6",
																"nodeType": "YulFunctionCall",
																"src": "3809:43:6"
															},
															"nativeSrc": "3809:43:6",
															"nodeType": "YulExpressionStatement",
															"src": "3809:43:6"
														}
													]
												},
												"name": "store_literal_in_memory_32c653245c0228225a258bd03165739cf6325d21bf62854131df10f81c47b11c",
												"nativeSrc": "3692:167:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3790:6:6",
														"nodeType": "YulTypedName",
														"src": "3790:6:6",
														"type": ""
													}
												],
												"src": "3692:167:6"
											},
											{
												"body": {
													"nativeSrc": "4011:220:6",
													"nodeType": "YulBlock",
													"src": "4011:220:6",
													"statements": [
														{
															"nativeSrc": "4021:74:6",
															"nodeType": "YulAssignment",
															"src": "4021:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4087:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4087:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4092:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4092:2:6",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4028:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "4028:58:6"
																},
																"nativeSrc": "4028:67:6",
																"nodeType": "YulFunctionCall",
																"src": "4028:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4021:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4021:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4193:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4193:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_32c653245c0228225a258bd03165739cf6325d21bf62854131df10f81c47b11c",
																	"nativeSrc": "4104:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "4104:88:6"
																},
																"nativeSrc": "4104:93:6",
																"nodeType": "YulFunctionCall",
																"src": "4104:93:6"
															},
															"nativeSrc": "4104:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "4104:93:6"
														},
														{
															"nativeSrc": "4206:19:6",
															"nodeType": "YulAssignment",
															"src": "4206:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4217:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4217:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4222:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4222:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4213:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4213:3:6"
																},
																"nativeSrc": "4213:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4213:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4206:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4206:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_32c653245c0228225a258bd03165739cf6325d21bf62854131df10f81c47b11c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3865:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3999:3:6",
														"nodeType": "YulTypedName",
														"src": "3999:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4007:3:6",
														"nodeType": "YulTypedName",
														"src": "4007:3:6",
														"type": ""
													}
												],
												"src": "3865:366:6"
											},
											{
												"body": {
													"nativeSrc": "4408:248:6",
													"nodeType": "YulBlock",
													"src": "4408:248:6",
													"statements": [
														{
															"nativeSrc": "4418:26:6",
															"nodeType": "YulAssignment",
															"src": "4418:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4430:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4430:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4441:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4441:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4426:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4426:3:6"
																},
																"nativeSrc": "4426:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4426:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4418:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4418:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4465:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4465:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4476:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4476:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4461:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4461:3:6"
																		},
																		"nativeSrc": "4461:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4461:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4484:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "4484:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4490:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4490:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4480:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4480:3:6"
																		},
																		"nativeSrc": "4480:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4480:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4454:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4454:6:6"
																},
																"nativeSrc": "4454:47:6",
																"nodeType": "YulFunctionCall",
																"src": "4454:47:6"
															},
															"nativeSrc": "4454:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "4454:47:6"
														},
														{
															"nativeSrc": "4510:139:6",
															"nodeType": "YulAssignment",
															"src": "4510:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4644:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4644:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_32c653245c0228225a258bd03165739cf6325d21bf62854131df10f81c47b11c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4518:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "4518:124:6"
																},
																"nativeSrc": "4518:131:6",
																"nodeType": "YulFunctionCall",
																"src": "4518:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4510:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4510:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_32c653245c0228225a258bd03165739cf6325d21bf62854131df10f81c47b11c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4237:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4388:9:6",
														"nodeType": "YulTypedName",
														"src": "4388:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4403:4:6",
														"nodeType": "YulTypedName",
														"src": "4403:4:6",
														"type": ""
													}
												],
												"src": "4237:419:6"
											},
											{
												"body": {
													"nativeSrc": "4768:71:6",
													"nodeType": "YulBlock",
													"src": "4768:71:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4790:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4790:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4798:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4798:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4786:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4786:3:6"
																		},
																		"nativeSrc": "4786:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4786:14:6"
																	},
																	{
																		"hexValue": "6e6f7420656e6f7567682073686172657320746f2072656d6f7665",
																		"kind": "string",
																		"nativeSrc": "4802:29:6",
																		"nodeType": "YulLiteral",
																		"src": "4802:29:6",
																		"type": "",
																		"value": "not enough shares to remove"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4779:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4779:6:6"
																},
																"nativeSrc": "4779:53:6",
																"nodeType": "YulFunctionCall",
																"src": "4779:53:6"
															},
															"nativeSrc": "4779:53:6",
															"nodeType": "YulExpressionStatement",
															"src": "4779:53:6"
														}
													]
												},
												"name": "store_literal_in_memory_8c9681eec7b9e51c29345bfe73192ffcc986b5075f1cf5eb963a6153498fcbee",
												"nativeSrc": "4662:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4760:6:6",
														"nodeType": "YulTypedName",
														"src": "4760:6:6",
														"type": ""
													}
												],
												"src": "4662:177:6"
											},
											{
												"body": {
													"nativeSrc": "4991:220:6",
													"nodeType": "YulBlock",
													"src": "4991:220:6",
													"statements": [
														{
															"nativeSrc": "5001:74:6",
															"nodeType": "YulAssignment",
															"src": "5001:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5067:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5067:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5072:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5072:2:6",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5008:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "5008:58:6"
																},
																"nativeSrc": "5008:67:6",
																"nodeType": "YulFunctionCall",
																"src": "5008:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5001:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5001:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5173:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5173:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8c9681eec7b9e51c29345bfe73192ffcc986b5075f1cf5eb963a6153498fcbee",
																	"nativeSrc": "5084:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "5084:88:6"
																},
																"nativeSrc": "5084:93:6",
																"nodeType": "YulFunctionCall",
																"src": "5084:93:6"
															},
															"nativeSrc": "5084:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "5084:93:6"
														},
														{
															"nativeSrc": "5186:19:6",
															"nodeType": "YulAssignment",
															"src": "5186:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5197:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5197:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5202:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5202:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5193:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5193:3:6"
																},
																"nativeSrc": "5193:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5193:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5186:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5186:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8c9681eec7b9e51c29345bfe73192ffcc986b5075f1cf5eb963a6153498fcbee_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4845:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4979:3:6",
														"nodeType": "YulTypedName",
														"src": "4979:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4987:3:6",
														"nodeType": "YulTypedName",
														"src": "4987:3:6",
														"type": ""
													}
												],
												"src": "4845:366:6"
											},
											{
												"body": {
													"nativeSrc": "5388:248:6",
													"nodeType": "YulBlock",
													"src": "5388:248:6",
													"statements": [
														{
															"nativeSrc": "5398:26:6",
															"nodeType": "YulAssignment",
															"src": "5398:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5410:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5410:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5421:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5421:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5406:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5406:3:6"
																},
																"nativeSrc": "5406:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5406:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5398:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5398:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5445:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5445:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5456:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5456:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5441:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5441:3:6"
																		},
																		"nativeSrc": "5441:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5441:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5464:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5464:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5470:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5470:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5460:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5460:3:6"
																		},
																		"nativeSrc": "5460:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5460:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5434:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5434:6:6"
																},
																"nativeSrc": "5434:47:6",
																"nodeType": "YulFunctionCall",
																"src": "5434:47:6"
															},
															"nativeSrc": "5434:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "5434:47:6"
														},
														{
															"nativeSrc": "5490:139:6",
															"nodeType": "YulAssignment",
															"src": "5490:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5624:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5624:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8c9681eec7b9e51c29345bfe73192ffcc986b5075f1cf5eb963a6153498fcbee_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5498:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "5498:124:6"
																},
																"nativeSrc": "5498:131:6",
																"nodeType": "YulFunctionCall",
																"src": "5498:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5490:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5490:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8c9681eec7b9e51c29345bfe73192ffcc986b5075f1cf5eb963a6153498fcbee__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5217:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5368:9:6",
														"nodeType": "YulTypedName",
														"src": "5368:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5383:4:6",
														"nodeType": "YulTypedName",
														"src": "5383:4:6",
														"type": ""
													}
												],
												"src": "5217:419:6"
											},
											{
												"body": {
													"nativeSrc": "5670:152:6",
													"nodeType": "YulBlock",
													"src": "5670:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5687:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5687:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5690:77:6",
																		"nodeType": "YulLiteral",
																		"src": "5690:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5680:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5680:6:6"
																},
																"nativeSrc": "5680:88:6",
																"nodeType": "YulFunctionCall",
																"src": "5680:88:6"
															},
															"nativeSrc": "5680:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "5680:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5784:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5784:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5787:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5787:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5777:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5777:6:6"
																},
																"nativeSrc": "5777:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5777:15:6"
															},
															"nativeSrc": "5777:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5777:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5808:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5808:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5811:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5811:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5801:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5801:6:6"
																},
																"nativeSrc": "5801:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5801:15:6"
															},
															"nativeSrc": "5801:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5801:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5642:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "5642:180:6"
											},
											{
												"body": {
													"nativeSrc": "5876:362:6",
													"nodeType": "YulBlock",
													"src": "5876:362:6",
													"statements": [
														{
															"nativeSrc": "5886:25:6",
															"nodeType": "YulAssignment",
															"src": "5886:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5909:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5909:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5891:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "5891:17:6"
																},
																"nativeSrc": "5891:20:6",
																"nodeType": "YulFunctionCall",
																"src": "5891:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5886:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "5886:1:6"
																}
															]
														},
														{
															"nativeSrc": "5920:25:6",
															"nodeType": "YulAssignment",
															"src": "5920:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5943:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5943:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5925:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "5925:17:6"
																},
																"nativeSrc": "5925:20:6",
																"nodeType": "YulFunctionCall",
																"src": "5925:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5920:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "5920:1:6"
																}
															]
														},
														{
															"nativeSrc": "5954:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5954:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5977:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5977:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5980:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5980:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5973:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5973:3:6"
																},
																"nativeSrc": "5973:9:6",
																"nodeType": "YulFunctionCall",
																"src": "5973:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "5958:11:6",
																	"nodeType": "YulTypedName",
																	"src": "5958:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5991:41:6",
															"nodeType": "YulAssignment",
															"src": "5991:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "6020:11:6",
																		"nodeType": "YulIdentifier",
																		"src": "6020:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6002:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "6002:17:6"
																},
																"nativeSrc": "6002:30:6",
																"nodeType": "YulFunctionCall",
																"src": "6002:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "5991:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "5991:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6209:22:6",
																"nodeType": "YulBlock",
																"src": "6209:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6211:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "6211:16:6"
																			},
																			"nativeSrc": "6211:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6211:18:6"
																		},
																		"nativeSrc": "6211:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6211:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "6142:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "6142:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6135:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "6135:6:6"
																				},
																				"nativeSrc": "6135:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6135:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "6165:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "6165:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "6172:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "6172:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "6181:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "6181:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "6168:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "6168:3:6"
																						},
																						"nativeSrc": "6168:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "6168:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "6162:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "6162:2:6"
																				},
																				"nativeSrc": "6162:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6162:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "6115:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6115:2:6"
																		},
																		"nativeSrc": "6115:83:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6115:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6095:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6095:6:6"
																},
																"nativeSrc": "6095:113:6",
																"nodeType": "YulFunctionCall",
																"src": "6095:113:6"
															},
															"nativeSrc": "6092:139:6",
															"nodeType": "YulIf",
															"src": "6092:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "5828:410:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5859:1:6",
														"nodeType": "YulTypedName",
														"src": "5859:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5862:1:6",
														"nodeType": "YulTypedName",
														"src": "5862:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "5868:7:6",
														"nodeType": "YulTypedName",
														"src": "5868:7:6",
														"type": ""
													}
												],
												"src": "5828:410:6"
											},
											{
												"body": {
													"nativeSrc": "6272:152:6",
													"nodeType": "YulBlock",
													"src": "6272:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6289:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6289:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6292:77:6",
																		"nodeType": "YulLiteral",
																		"src": "6292:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6282:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6282:6:6"
																},
																"nativeSrc": "6282:88:6",
																"nodeType": "YulFunctionCall",
																"src": "6282:88:6"
															},
															"nativeSrc": "6282:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "6282:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6386:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6386:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6389:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6389:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6379:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6379:6:6"
																},
																"nativeSrc": "6379:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6379:15:6"
															},
															"nativeSrc": "6379:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6379:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6410:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6410:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6413:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6413:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6403:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6403:6:6"
																},
																"nativeSrc": "6403:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6403:15:6"
															},
															"nativeSrc": "6403:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6403:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "6244:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "6244:180:6"
											},
											{
												"body": {
													"nativeSrc": "6472:143:6",
													"nodeType": "YulBlock",
													"src": "6472:143:6",
													"statements": [
														{
															"nativeSrc": "6482:25:6",
															"nodeType": "YulAssignment",
															"src": "6482:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6505:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6505:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6487:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "6487:17:6"
																},
																"nativeSrc": "6487:20:6",
																"nodeType": "YulFunctionCall",
																"src": "6487:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6482:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "6482:1:6"
																}
															]
														},
														{
															"nativeSrc": "6516:25:6",
															"nodeType": "YulAssignment",
															"src": "6516:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6539:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6539:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6521:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "6521:17:6"
																},
																"nativeSrc": "6521:20:6",
																"nodeType": "YulFunctionCall",
																"src": "6521:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6516:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "6516:1:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6563:22:6",
																"nodeType": "YulBlock",
																"src": "6563:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "6565:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "6565:16:6"
																			},
																			"nativeSrc": "6565:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6565:18:6"
																		},
																		"nativeSrc": "6565:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6565:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6560:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6560:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6553:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6553:6:6"
																},
																"nativeSrc": "6553:9:6",
																"nodeType": "YulFunctionCall",
																"src": "6553:9:6"
															},
															"nativeSrc": "6550:35:6",
															"nodeType": "YulIf",
															"src": "6550:35:6"
														},
														{
															"nativeSrc": "6595:14:6",
															"nodeType": "YulAssignment",
															"src": "6595:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6604:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6604:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6607:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6607:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6600:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6600:3:6"
																},
																"nativeSrc": "6600:9:6",
																"nodeType": "YulFunctionCall",
																"src": "6600:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6595:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "6595:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "6430:185:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6461:1:6",
														"nodeType": "YulTypedName",
														"src": "6461:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6464:1:6",
														"nodeType": "YulTypedName",
														"src": "6464:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "6470:1:6",
														"nodeType": "YulTypedName",
														"src": "6470:1:6",
														"type": ""
													}
												],
												"src": "6430:185:6"
											},
											{
												"body": {
													"nativeSrc": "6653:28:6",
													"nodeType": "YulBlock",
													"src": "6653:28:6",
													"statements": [
														{
															"nativeSrc": "6663:12:6",
															"nodeType": "YulAssignment",
															"src": "6663:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "6670:5:6",
																"nodeType": "YulIdentifier",
																"src": "6670:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6663:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6663:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "6621:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6639:5:6",
														"nodeType": "YulTypedName",
														"src": "6639:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6649:3:6",
														"nodeType": "YulTypedName",
														"src": "6649:3:6",
														"type": ""
													}
												],
												"src": "6621:60:6"
											},
											{
												"body": {
													"nativeSrc": "6747:82:6",
													"nodeType": "YulBlock",
													"src": "6747:82:6",
													"statements": [
														{
															"nativeSrc": "6757:66:6",
															"nodeType": "YulAssignment",
															"src": "6757:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6815:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "6815:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "6797:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "6797:17:6"
																				},
																				"nativeSrc": "6797:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6797:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "6788:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "6788:8:6"
																		},
																		"nativeSrc": "6788:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6788:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "6770:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "6770:17:6"
																},
																"nativeSrc": "6770:53:6",
																"nodeType": "YulFunctionCall",
																"src": "6770:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6757:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "6757:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "6687:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6727:5:6",
														"nodeType": "YulTypedName",
														"src": "6727:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6737:9:6",
														"nodeType": "YulTypedName",
														"src": "6737:9:6",
														"type": ""
													}
												],
												"src": "6687:142:6"
											},
											{
												"body": {
													"nativeSrc": "6895:66:6",
													"nodeType": "YulBlock",
													"src": "6895:66:6",
													"statements": [
														{
															"nativeSrc": "6905:50:6",
															"nodeType": "YulAssignment",
															"src": "6905:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6949:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6949:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "6918:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "6918:30:6"
																},
																"nativeSrc": "6918:37:6",
																"nodeType": "YulFunctionCall",
																"src": "6918:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6905:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "6905:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "6835:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6875:5:6",
														"nodeType": "YulTypedName",
														"src": "6875:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6885:9:6",
														"nodeType": "YulTypedName",
														"src": "6885:9:6",
														"type": ""
													}
												],
												"src": "6835:126:6"
											},
											{
												"body": {
													"nativeSrc": "7035:66:6",
													"nodeType": "YulBlock",
													"src": "7035:66:6",
													"statements": [
														{
															"nativeSrc": "7045:50:6",
															"nodeType": "YulAssignment",
															"src": "7045:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7089:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7089:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "7058:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "7058:30:6"
																},
																"nativeSrc": "7058:37:6",
																"nodeType": "YulFunctionCall",
																"src": "7058:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7045:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "7045:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_address_payable_to_t_address",
												"nativeSrc": "6967:134:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7015:5:6",
														"nodeType": "YulTypedName",
														"src": "7015:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7025:9:6",
														"nodeType": "YulTypedName",
														"src": "7025:9:6",
														"type": ""
													}
												],
												"src": "6967:134:6"
											},
											{
												"body": {
													"nativeSrc": "7180:74:6",
													"nodeType": "YulBlock",
													"src": "7180:74:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7197:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7197:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7241:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "7241:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_address_payable_to_t_address",
																			"nativeSrc": "7202:38:6",
																			"nodeType": "YulIdentifier",
																			"src": "7202:38:6"
																		},
																		"nativeSrc": "7202:45:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7202:45:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7190:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7190:6:6"
																},
																"nativeSrc": "7190:58:6",
																"nodeType": "YulFunctionCall",
																"src": "7190:58:6"
															},
															"nativeSrc": "7190:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "7190:58:6"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_fromStack",
												"nativeSrc": "7107:147:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7168:5:6",
														"nodeType": "YulTypedName",
														"src": "7168:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7175:3:6",
														"nodeType": "YulTypedName",
														"src": "7175:3:6",
														"type": ""
													}
												],
												"src": "7107:147:6"
											},
											{
												"body": {
													"nativeSrc": "7394:214:6",
													"nodeType": "YulBlock",
													"src": "7394:214:6",
													"statements": [
														{
															"nativeSrc": "7404:26:6",
															"nodeType": "YulAssignment",
															"src": "7404:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7416:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7416:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7427:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7427:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7412:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7412:3:6"
																},
																"nativeSrc": "7412:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7412:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7404:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7404:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7492:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7492:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7505:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7505:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7516:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7516:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7501:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7501:3:6"
																		},
																		"nativeSrc": "7501:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7501:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_fromStack",
																	"nativeSrc": "7440:51:6",
																	"nodeType": "YulIdentifier",
																	"src": "7440:51:6"
																},
																"nativeSrc": "7440:79:6",
																"nodeType": "YulFunctionCall",
																"src": "7440:79:6"
															},
															"nativeSrc": "7440:79:6",
															"nodeType": "YulExpressionStatement",
															"src": "7440:79:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7573:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7573:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7586:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7586:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7597:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7597:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7582:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7582:3:6"
																		},
																		"nativeSrc": "7582:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7582:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7529:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7529:43:6"
																},
																"nativeSrc": "7529:72:6",
																"nodeType": "YulFunctionCall",
																"src": "7529:72:6"
															},
															"nativeSrc": "7529:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "7529:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7260:348:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7358:9:6",
														"nodeType": "YulTypedName",
														"src": "7358:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7370:6:6",
														"nodeType": "YulTypedName",
														"src": "7370:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7378:6:6",
														"nodeType": "YulTypedName",
														"src": "7378:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7389:4:6",
														"nodeType": "YulTypedName",
														"src": "7389:4:6",
														"type": ""
													}
												],
												"src": "7260:348:6"
											},
											{
												"body": {
													"nativeSrc": "7656:48:6",
													"nodeType": "YulBlock",
													"src": "7656:48:6",
													"statements": [
														{
															"nativeSrc": "7666:32:6",
															"nodeType": "YulAssignment",
															"src": "7666:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7691:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "7691:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "7684:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7684:6:6"
																		},
																		"nativeSrc": "7684:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7684:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7677:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7677:6:6"
																},
																"nativeSrc": "7677:21:6",
																"nodeType": "YulFunctionCall",
																"src": "7677:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7666:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "7666:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "7614:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7638:5:6",
														"nodeType": "YulTypedName",
														"src": "7638:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7648:7:6",
														"nodeType": "YulTypedName",
														"src": "7648:7:6",
														"type": ""
													}
												],
												"src": "7614:90:6"
											},
											{
												"body": {
													"nativeSrc": "7750:76:6",
													"nodeType": "YulBlock",
													"src": "7750:76:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "7804:16:6",
																"nodeType": "YulBlock",
																"src": "7804:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7813:1:6",
																					"nodeType": "YulLiteral",
																					"src": "7813:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7816:1:6",
																					"nodeType": "YulLiteral",
																					"src": "7816:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7806:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7806:6:6"
																			},
																			"nativeSrc": "7806:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7806:12:6"
																		},
																		"nativeSrc": "7806:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7806:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7773:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "7773:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7795:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "7795:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "7780:14:6",
																					"nodeType": "YulIdentifier",
																					"src": "7780:14:6"
																				},
																				"nativeSrc": "7780:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7780:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7770:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "7770:2:6"
																		},
																		"nativeSrc": "7770:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7770:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7763:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7763:6:6"
																},
																"nativeSrc": "7763:40:6",
																"nodeType": "YulFunctionCall",
																"src": "7763:40:6"
															},
															"nativeSrc": "7760:60:6",
															"nodeType": "YulIf",
															"src": "7760:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "7710:116:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7743:5:6",
														"nodeType": "YulTypedName",
														"src": "7743:5:6",
														"type": ""
													}
												],
												"src": "7710:116:6"
											},
											{
												"body": {
													"nativeSrc": "7892:77:6",
													"nodeType": "YulBlock",
													"src": "7892:77:6",
													"statements": [
														{
															"nativeSrc": "7902:22:6",
															"nodeType": "YulAssignment",
															"src": "7902:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7917:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7917:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7911:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "7911:5:6"
																},
																"nativeSrc": "7911:13:6",
																"nodeType": "YulFunctionCall",
																"src": "7911:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7902:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "7902:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7957:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7957:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "7933:23:6",
																	"nodeType": "YulIdentifier",
																	"src": "7933:23:6"
																},
																"nativeSrc": "7933:30:6",
																"nodeType": "YulFunctionCall",
																"src": "7933:30:6"
															},
															"nativeSrc": "7933:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "7933:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "7832:137:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7870:6:6",
														"nodeType": "YulTypedName",
														"src": "7870:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7878:3:6",
														"nodeType": "YulTypedName",
														"src": "7878:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7886:5:6",
														"nodeType": "YulTypedName",
														"src": "7886:5:6",
														"type": ""
													}
												],
												"src": "7832:137:6"
											},
											{
												"body": {
													"nativeSrc": "8049:271:6",
													"nodeType": "YulBlock",
													"src": "8049:271:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "8095:83:6",
																"nodeType": "YulBlock",
																"src": "8095:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8097:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "8097:77:6"
																			},
																			"nativeSrc": "8097:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8097:79:6"
																		},
																		"nativeSrc": "8097:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8097:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8070:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8070:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8079:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8079:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8066:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8066:3:6"
																		},
																		"nativeSrc": "8066:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8066:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8091:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8091:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8062:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8062:3:6"
																},
																"nativeSrc": "8062:32:6",
																"nodeType": "YulFunctionCall",
																"src": "8062:32:6"
															},
															"nativeSrc": "8059:119:6",
															"nodeType": "YulIf",
															"src": "8059:119:6"
														},
														{
															"nativeSrc": "8188:125:6",
															"nodeType": "YulBlock",
															"src": "8188:125:6",
															"statements": [
																{
																	"nativeSrc": "8203:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8203:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8217:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8217:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8207:6:6",
																			"nodeType": "YulTypedName",
																			"src": "8207:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8232:71:6",
																	"nodeType": "YulAssignment",
																	"src": "8232:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8275:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "8275:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8286:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8286:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8271:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8271:3:6"
																				},
																				"nativeSrc": "8271:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8271:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8295:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8295:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "8242:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "8242:28:6"
																		},
																		"nativeSrc": "8242:61:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8242:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8232:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "8232:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "7975:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8019:9:6",
														"nodeType": "YulTypedName",
														"src": "8019:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8030:7:6",
														"nodeType": "YulTypedName",
														"src": "8030:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8042:6:6",
														"nodeType": "YulTypedName",
														"src": "8042:6:6",
														"type": ""
													}
												],
												"src": "7975:345:6"
											},
											{
												"body": {
													"nativeSrc": "8371:149:6",
													"nodeType": "YulBlock",
													"src": "8371:149:6",
													"statements": [
														{
															"nativeSrc": "8381:25:6",
															"nodeType": "YulAssignment",
															"src": "8381:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8404:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8404:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8386:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8386:17:6"
																},
																"nativeSrc": "8386:20:6",
																"nodeType": "YulFunctionCall",
																"src": "8386:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8381:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8381:1:6"
																}
															]
														},
														{
															"nativeSrc": "8415:25:6",
															"nodeType": "YulAssignment",
															"src": "8415:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8438:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8438:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8420:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8420:17:6"
																},
																"nativeSrc": "8420:20:6",
																"nodeType": "YulFunctionCall",
																"src": "8420:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8415:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8415:1:6"
																}
															]
														},
														{
															"nativeSrc": "8449:17:6",
															"nodeType": "YulAssignment",
															"src": "8449:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8461:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8461:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8464:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8464:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8457:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8457:3:6"
																},
																"nativeSrc": "8457:9:6",
																"nodeType": "YulFunctionCall",
																"src": "8457:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8449:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8449:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8491:22:6",
																"nodeType": "YulBlock",
																"src": "8491:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8493:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "8493:16:6"
																			},
																			"nativeSrc": "8493:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8493:18:6"
																		},
																		"nativeSrc": "8493:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8493:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8482:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8482:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8488:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8488:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8479:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8479:2:6"
																},
																"nativeSrc": "8479:11:6",
																"nodeType": "YulFunctionCall",
																"src": "8479:11:6"
															},
															"nativeSrc": "8476:37:6",
															"nodeType": "YulIf",
															"src": "8476:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "8326:194:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8357:1:6",
														"nodeType": "YulTypedName",
														"src": "8357:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8360:1:6",
														"nodeType": "YulTypedName",
														"src": "8360:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "8366:4:6",
														"nodeType": "YulTypedName",
														"src": "8366:4:6",
														"type": ""
													}
												],
												"src": "8326:194:6"
											},
											{
												"body": {
													"nativeSrc": "8591:53:6",
													"nodeType": "YulBlock",
													"src": "8591:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8608:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8608:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8631:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8631:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8613:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "8613:17:6"
																		},
																		"nativeSrc": "8613:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8613:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8601:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8601:6:6"
																},
																"nativeSrc": "8601:37:6",
																"nodeType": "YulFunctionCall",
																"src": "8601:37:6"
															},
															"nativeSrc": "8601:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "8601:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8526:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8579:5:6",
														"nodeType": "YulTypedName",
														"src": "8579:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8586:3:6",
														"nodeType": "YulTypedName",
														"src": "8586:3:6",
														"type": ""
													}
												],
												"src": "8526:118:6"
											},
											{
												"body": {
													"nativeSrc": "8812:296:6",
													"nodeType": "YulBlock",
													"src": "8812:296:6",
													"statements": [
														{
															"nativeSrc": "8822:26:6",
															"nodeType": "YulAssignment",
															"src": "8822:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8834:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8834:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8845:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8845:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8830:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8830:3:6"
																},
																"nativeSrc": "8830:18:6",
																"nodeType": "YulFunctionCall",
																"src": "8830:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8822:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8822:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8910:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8910:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8923:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8923:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8934:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8934:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8919:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8919:3:6"
																		},
																		"nativeSrc": "8919:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8919:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_fromStack",
																	"nativeSrc": "8858:51:6",
																	"nodeType": "YulIdentifier",
																	"src": "8858:51:6"
																},
																"nativeSrc": "8858:79:6",
																"nodeType": "YulFunctionCall",
																"src": "8858:79:6"
															},
															"nativeSrc": "8858:79:6",
															"nodeType": "YulExpressionStatement",
															"src": "8858:79:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8991:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8991:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9004:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9004:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9015:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9015:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9000:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9000:3:6"
																		},
																		"nativeSrc": "9000:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9000:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8947:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "8947:43:6"
																},
																"nativeSrc": "8947:72:6",
																"nodeType": "YulFunctionCall",
																"src": "8947:72:6"
															},
															"nativeSrc": "8947:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "8947:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9073:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9073:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9086:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9086:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9097:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9097:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9082:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9082:3:6"
																		},
																		"nativeSrc": "9082:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9082:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9029:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "9029:43:6"
																},
																"nativeSrc": "9029:72:6",
																"nodeType": "YulFunctionCall",
																"src": "9029:72:6"
															},
															"nativeSrc": "9029:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "9029:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8650:458:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8768:9:6",
														"nodeType": "YulTypedName",
														"src": "8768:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8780:6:6",
														"nodeType": "YulTypedName",
														"src": "8780:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8788:6:6",
														"nodeType": "YulTypedName",
														"src": "8788:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8796:6:6",
														"nodeType": "YulTypedName",
														"src": "8796:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8807:4:6",
														"nodeType": "YulTypedName",
														"src": "8807:4:6",
														"type": ""
													}
												],
												"src": "8650:458:6"
											},
											{
												"body": {
													"nativeSrc": "9212:124:6",
													"nodeType": "YulBlock",
													"src": "9212:124:6",
													"statements": [
														{
															"nativeSrc": "9222:26:6",
															"nodeType": "YulAssignment",
															"src": "9222:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9234:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9234:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9245:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9245:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9230:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9230:3:6"
																},
																"nativeSrc": "9230:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9230:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9222:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9222:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9302:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9302:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9315:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9315:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9326:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9326:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9311:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9311:3:6"
																		},
																		"nativeSrc": "9311:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9311:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9258:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "9258:43:6"
																},
																"nativeSrc": "9258:71:6",
																"nodeType": "YulFunctionCall",
																"src": "9258:71:6"
															},
															"nativeSrc": "9258:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "9258:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9114:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9184:9:6",
														"nodeType": "YulTypedName",
														"src": "9184:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9196:6:6",
														"nodeType": "YulTypedName",
														"src": "9196:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9207:4:6",
														"nodeType": "YulTypedName",
														"src": "9207:4:6",
														"type": ""
													}
												],
												"src": "9114:222:6"
											},
											{
												"body": {
													"nativeSrc": "9405:80:6",
													"nodeType": "YulBlock",
													"src": "9405:80:6",
													"statements": [
														{
															"nativeSrc": "9415:22:6",
															"nodeType": "YulAssignment",
															"src": "9415:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9430:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9430:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9424:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "9424:5:6"
																},
																"nativeSrc": "9424:13:6",
																"nodeType": "YulFunctionCall",
																"src": "9424:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9415:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "9415:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9473:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9473:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "9446:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "9446:26:6"
																},
																"nativeSrc": "9446:33:6",
																"nodeType": "YulFunctionCall",
																"src": "9446:33:6"
															},
															"nativeSrc": "9446:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "9446:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "9342:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9383:6:6",
														"nodeType": "YulTypedName",
														"src": "9383:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9391:3:6",
														"nodeType": "YulTypedName",
														"src": "9391:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9399:5:6",
														"nodeType": "YulTypedName",
														"src": "9399:5:6",
														"type": ""
													}
												],
												"src": "9342:143:6"
											},
											{
												"body": {
													"nativeSrc": "9568:274:6",
													"nodeType": "YulBlock",
													"src": "9568:274:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "9614:83:6",
																"nodeType": "YulBlock",
																"src": "9614:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9616:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "9616:77:6"
																			},
																			"nativeSrc": "9616:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9616:79:6"
																		},
																		"nativeSrc": "9616:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9616:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9589:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "9589:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9598:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9598:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9585:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9585:3:6"
																		},
																		"nativeSrc": "9585:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9585:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9610:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9610:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9581:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9581:3:6"
																},
																"nativeSrc": "9581:32:6",
																"nodeType": "YulFunctionCall",
																"src": "9581:32:6"
															},
															"nativeSrc": "9578:119:6",
															"nodeType": "YulIf",
															"src": "9578:119:6"
														},
														{
															"nativeSrc": "9707:128:6",
															"nodeType": "YulBlock",
															"src": "9707:128:6",
															"statements": [
																{
																	"nativeSrc": "9722:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9722:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9736:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9736:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9726:6:6",
																			"nodeType": "YulTypedName",
																			"src": "9726:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9751:74:6",
																	"nodeType": "YulAssignment",
																	"src": "9751:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9797:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "9797:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9808:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "9808:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9793:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "9793:3:6"
																				},
																				"nativeSrc": "9793:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "9793:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9817:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "9817:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "9761:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "9761:31:6"
																		},
																		"nativeSrc": "9761:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9761:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9751:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "9751:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "9491:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9538:9:6",
														"nodeType": "YulTypedName",
														"src": "9538:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9549:7:6",
														"nodeType": "YulTypedName",
														"src": "9549:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9561:6:6",
														"nodeType": "YulTypedName",
														"src": "9561:6:6",
														"type": ""
													}
												],
												"src": "9491:351:6"
											},
											{
												"body": {
													"nativeSrc": "9892:147:6",
													"nodeType": "YulBlock",
													"src": "9892:147:6",
													"statements": [
														{
															"nativeSrc": "9902:25:6",
															"nodeType": "YulAssignment",
															"src": "9902:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9925:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9925:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9907:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9907:17:6"
																},
																"nativeSrc": "9907:20:6",
																"nodeType": "YulFunctionCall",
																"src": "9907:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9902:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "9902:1:6"
																}
															]
														},
														{
															"nativeSrc": "9936:25:6",
															"nodeType": "YulAssignment",
															"src": "9936:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9959:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9959:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9941:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9941:17:6"
																},
																"nativeSrc": "9941:20:6",
																"nodeType": "YulFunctionCall",
																"src": "9941:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9936:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "9936:1:6"
																}
															]
														},
														{
															"nativeSrc": "9970:16:6",
															"nodeType": "YulAssignment",
															"src": "9970:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9981:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9981:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9984:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9984:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9977:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9977:3:6"
																},
																"nativeSrc": "9977:9:6",
																"nodeType": "YulFunctionCall",
																"src": "9977:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9970:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9970:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10010:22:6",
																"nodeType": "YulBlock",
																"src": "10010:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10012:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "10012:16:6"
																			},
																			"nativeSrc": "10012:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10012:18:6"
																		},
																		"nativeSrc": "10012:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "10012:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10002:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10002:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10005:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10005:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9999:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "9999:2:6"
																},
																"nativeSrc": "9999:10:6",
																"nodeType": "YulFunctionCall",
																"src": "9999:10:6"
															},
															"nativeSrc": "9996:36:6",
															"nodeType": "YulIf",
															"src": "9996:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9848:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9879:1:6",
														"nodeType": "YulTypedName",
														"src": "9879:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9882:1:6",
														"nodeType": "YulTypedName",
														"src": "9882:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9888:3:6",
														"nodeType": "YulTypedName",
														"src": "9888:3:6",
														"type": ""
													}
												],
												"src": "9848:191:6"
											},
											{
												"body": {
													"nativeSrc": "10151:54:6",
													"nodeType": "YulBlock",
													"src": "10151:54:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10173:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10173:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10181:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10181:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10169:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10169:3:6"
																		},
																		"nativeSrc": "10169:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10169:14:6"
																	},
																	{
																		"hexValue": "736861726573203c2030",
																		"kind": "string",
																		"nativeSrc": "10185:12:6",
																		"nodeType": "YulLiteral",
																		"src": "10185:12:6",
																		"type": "",
																		"value": "shares < 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10162:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10162:6:6"
																},
																"nativeSrc": "10162:36:6",
																"nodeType": "YulFunctionCall",
																"src": "10162:36:6"
															},
															"nativeSrc": "10162:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "10162:36:6"
														}
													]
												},
												"name": "store_literal_in_memory_ed276504624489b2996b0ff7998948c3b56ac6319f900633e32f7dd9aa170503",
												"nativeSrc": "10045:160:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10143:6:6",
														"nodeType": "YulTypedName",
														"src": "10143:6:6",
														"type": ""
													}
												],
												"src": "10045:160:6"
											},
											{
												"body": {
													"nativeSrc": "10357:220:6",
													"nodeType": "YulBlock",
													"src": "10357:220:6",
													"statements": [
														{
															"nativeSrc": "10367:74:6",
															"nodeType": "YulAssignment",
															"src": "10367:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10433:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10433:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10438:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10438:2:6",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10374:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "10374:58:6"
																},
																"nativeSrc": "10374:67:6",
																"nodeType": "YulFunctionCall",
																"src": "10374:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10367:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10367:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10539:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10539:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ed276504624489b2996b0ff7998948c3b56ac6319f900633e32f7dd9aa170503",
																	"nativeSrc": "10450:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "10450:88:6"
																},
																"nativeSrc": "10450:93:6",
																"nodeType": "YulFunctionCall",
																"src": "10450:93:6"
															},
															"nativeSrc": "10450:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "10450:93:6"
														},
														{
															"nativeSrc": "10552:19:6",
															"nodeType": "YulAssignment",
															"src": "10552:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10563:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10563:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10568:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10568:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10559:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10559:3:6"
																},
																"nativeSrc": "10559:12:6",
																"nodeType": "YulFunctionCall",
																"src": "10559:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10552:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10552:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ed276504624489b2996b0ff7998948c3b56ac6319f900633e32f7dd9aa170503_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10211:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10345:3:6",
														"nodeType": "YulTypedName",
														"src": "10345:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10353:3:6",
														"nodeType": "YulTypedName",
														"src": "10353:3:6",
														"type": ""
													}
												],
												"src": "10211:366:6"
											},
											{
												"body": {
													"nativeSrc": "10754:248:6",
													"nodeType": "YulBlock",
													"src": "10754:248:6",
													"statements": [
														{
															"nativeSrc": "10764:26:6",
															"nodeType": "YulAssignment",
															"src": "10764:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10776:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10776:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10787:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10787:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10772:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10772:3:6"
																},
																"nativeSrc": "10772:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10772:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10764:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10764:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10811:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10811:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10822:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10822:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10807:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10807:3:6"
																		},
																		"nativeSrc": "10807:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10807:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10830:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "10830:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10836:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10836:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10826:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10826:3:6"
																		},
																		"nativeSrc": "10826:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10826:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10800:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10800:6:6"
																},
																"nativeSrc": "10800:47:6",
																"nodeType": "YulFunctionCall",
																"src": "10800:47:6"
															},
															"nativeSrc": "10800:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "10800:47:6"
														},
														{
															"nativeSrc": "10856:139:6",
															"nodeType": "YulAssignment",
															"src": "10856:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10990:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "10990:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ed276504624489b2996b0ff7998948c3b56ac6319f900633e32f7dd9aa170503_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10864:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "10864:124:6"
																},
																"nativeSrc": "10864:131:6",
																"nodeType": "YulFunctionCall",
																"src": "10864:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10856:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10856:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ed276504624489b2996b0ff7998948c3b56ac6319f900633e32f7dd9aa170503__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10583:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10734:9:6",
														"nodeType": "YulTypedName",
														"src": "10734:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10749:4:6",
														"nodeType": "YulTypedName",
														"src": "10749:4:6",
														"type": ""
													}
												],
												"src": "10583:419:6"
											},
											{
												"body": {
													"nativeSrc": "11114:57:6",
													"nodeType": "YulBlock",
													"src": "11114:57:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11136:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "11136:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11144:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11144:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11132:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11132:3:6"
																		},
																		"nativeSrc": "11132:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11132:14:6"
																	},
																	{
																		"hexValue": "546f6b656e20696e76616c6964",
																		"kind": "string",
																		"nativeSrc": "11148:15:6",
																		"nodeType": "YulLiteral",
																		"src": "11148:15:6",
																		"type": "",
																		"value": "Token invalid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11125:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11125:6:6"
																},
																"nativeSrc": "11125:39:6",
																"nodeType": "YulFunctionCall",
																"src": "11125:39:6"
															},
															"nativeSrc": "11125:39:6",
															"nodeType": "YulExpressionStatement",
															"src": "11125:39:6"
														}
													]
												},
												"name": "store_literal_in_memory_ec53abdba0c504b1596ec465ad31a403eca74d58284230d63be9ec31b4299353",
												"nativeSrc": "11008:163:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11106:6:6",
														"nodeType": "YulTypedName",
														"src": "11106:6:6",
														"type": ""
													}
												],
												"src": "11008:163:6"
											},
											{
												"body": {
													"nativeSrc": "11323:220:6",
													"nodeType": "YulBlock",
													"src": "11323:220:6",
													"statements": [
														{
															"nativeSrc": "11333:74:6",
															"nodeType": "YulAssignment",
															"src": "11333:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11399:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11399:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11404:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11404:2:6",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11340:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "11340:58:6"
																},
																"nativeSrc": "11340:67:6",
																"nodeType": "YulFunctionCall",
																"src": "11340:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11333:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11333:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11505:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11505:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ec53abdba0c504b1596ec465ad31a403eca74d58284230d63be9ec31b4299353",
																	"nativeSrc": "11416:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "11416:88:6"
																},
																"nativeSrc": "11416:93:6",
																"nodeType": "YulFunctionCall",
																"src": "11416:93:6"
															},
															"nativeSrc": "11416:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "11416:93:6"
														},
														{
															"nativeSrc": "11518:19:6",
															"nodeType": "YulAssignment",
															"src": "11518:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11529:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11529:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11534:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11534:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11525:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11525:3:6"
																},
																"nativeSrc": "11525:12:6",
																"nodeType": "YulFunctionCall",
																"src": "11525:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11518:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11518:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ec53abdba0c504b1596ec465ad31a403eca74d58284230d63be9ec31b4299353_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11177:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11311:3:6",
														"nodeType": "YulTypedName",
														"src": "11311:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11319:3:6",
														"nodeType": "YulTypedName",
														"src": "11319:3:6",
														"type": ""
													}
												],
												"src": "11177:366:6"
											},
											{
												"body": {
													"nativeSrc": "11720:248:6",
													"nodeType": "YulBlock",
													"src": "11720:248:6",
													"statements": [
														{
															"nativeSrc": "11730:26:6",
															"nodeType": "YulAssignment",
															"src": "11730:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11742:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11742:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11753:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11753:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11738:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11738:3:6"
																},
																"nativeSrc": "11738:18:6",
																"nodeType": "YulFunctionCall",
																"src": "11738:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11730:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11730:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11777:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11777:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11788:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11788:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11773:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11773:3:6"
																		},
																		"nativeSrc": "11773:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11773:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11796:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "11796:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11802:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11802:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11792:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11792:3:6"
																		},
																		"nativeSrc": "11792:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11792:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11766:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11766:6:6"
																},
																"nativeSrc": "11766:47:6",
																"nodeType": "YulFunctionCall",
																"src": "11766:47:6"
															},
															"nativeSrc": "11766:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "11766:47:6"
														},
														{
															"nativeSrc": "11822:139:6",
															"nodeType": "YulAssignment",
															"src": "11822:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11956:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11956:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ec53abdba0c504b1596ec465ad31a403eca74d58284230d63be9ec31b4299353_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11830:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "11830:124:6"
																},
																"nativeSrc": "11830:131:6",
																"nodeType": "YulFunctionCall",
																"src": "11830:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11822:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11822:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ec53abdba0c504b1596ec465ad31a403eca74d58284230d63be9ec31b4299353__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11549:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11700:9:6",
														"nodeType": "YulTypedName",
														"src": "11700:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11715:4:6",
														"nodeType": "YulTypedName",
														"src": "11715:4:6",
														"type": ""
													}
												],
												"src": "11549:419:6"
											},
											{
												"body": {
													"nativeSrc": "12027:32:6",
													"nodeType": "YulBlock",
													"src": "12027:32:6",
													"statements": [
														{
															"nativeSrc": "12037:16:6",
															"nodeType": "YulAssignment",
															"src": "12037:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "12048:5:6",
																"nodeType": "YulIdentifier",
																"src": "12048:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "12037:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "12037:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nativeSrc": "11974:85:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12009:5:6",
														"nodeType": "YulTypedName",
														"src": "12009:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "12019:7:6",
														"nodeType": "YulTypedName",
														"src": "12019:7:6",
														"type": ""
													}
												],
												"src": "11974:85:6"
											},
											{
												"body": {
													"nativeSrc": "12133:90:6",
													"nodeType": "YulBlock",
													"src": "12133:90:6",
													"statements": [
														{
															"nativeSrc": "12143:74:6",
															"nodeType": "YulAssignment",
															"src": "12143:74:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12209:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "12209:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nativeSrc": "12183:25:6",
																					"nodeType": "YulIdentifier",
																					"src": "12183:25:6"
																				},
																				"nativeSrc": "12183:32:6",
																				"nodeType": "YulFunctionCall",
																				"src": "12183:32:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "12174:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "12174:8:6"
																		},
																		"nativeSrc": "12174:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12174:42:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12156:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "12156:17:6"
																},
																"nativeSrc": "12156:61:6",
																"nodeType": "YulFunctionCall",
																"src": "12156:61:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "12143:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "12143:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nativeSrc": "12065:158:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12113:5:6",
														"nodeType": "YulTypedName",
														"src": "12113:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "12123:9:6",
														"nodeType": "YulTypedName",
														"src": "12123:9:6",
														"type": ""
													}
												],
												"src": "12065:158:6"
											},
											{
												"body": {
													"nativeSrc": "12302:74:6",
													"nodeType": "YulBlock",
													"src": "12302:74:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12319:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12319:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12363:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "12363:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nativeSrc": "12324:38:6",
																			"nodeType": "YulIdentifier",
																			"src": "12324:38:6"
																		},
																		"nativeSrc": "12324:45:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12324:45:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12312:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12312:6:6"
																},
																"nativeSrc": "12312:58:6",
																"nodeType": "YulFunctionCall",
																"src": "12312:58:6"
															},
															"nativeSrc": "12312:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "12312:58:6"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nativeSrc": "12229:147:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12290:5:6",
														"nodeType": "YulTypedName",
														"src": "12290:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12297:3:6",
														"nodeType": "YulTypedName",
														"src": "12297:3:6",
														"type": ""
													}
												],
												"src": "12229:147:6"
											},
											{
												"body": {
													"nativeSrc": "12580:387:6",
													"nodeType": "YulBlock",
													"src": "12580:387:6",
													"statements": [
														{
															"nativeSrc": "12590:27:6",
															"nodeType": "YulAssignment",
															"src": "12590:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12602:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "12602:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12613:3:6",
																		"nodeType": "YulLiteral",
																		"src": "12613:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12598:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12598:3:6"
																},
																"nativeSrc": "12598:19:6",
																"nodeType": "YulFunctionCall",
																"src": "12598:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12590:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12590:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12671:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12671:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12684:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12684:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12695:1:6",
																				"nodeType": "YulLiteral",
																				"src": "12695:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12680:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12680:3:6"
																		},
																		"nativeSrc": "12680:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12680:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12627:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "12627:43:6"
																},
																"nativeSrc": "12627:71:6",
																"nodeType": "YulFunctionCall",
																"src": "12627:71:6"
															},
															"nativeSrc": "12627:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "12627:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12760:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12760:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12773:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12773:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12784:2:6",
																				"nodeType": "YulLiteral",
																				"src": "12784:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12769:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12769:3:6"
																		},
																		"nativeSrc": "12769:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12769:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "12708:51:6",
																	"nodeType": "YulIdentifier",
																	"src": "12708:51:6"
																},
																"nativeSrc": "12708:80:6",
																"nodeType": "YulFunctionCall",
																"src": "12708:80:6"
															},
															"nativeSrc": "12708:80:6",
															"nodeType": "YulExpressionStatement",
															"src": "12708:80:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12842:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12842:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12855:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12855:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12866:2:6",
																				"nodeType": "YulLiteral",
																				"src": "12866:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12851:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12851:3:6"
																		},
																		"nativeSrc": "12851:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12851:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12798:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "12798:43:6"
																},
																"nativeSrc": "12798:72:6",
																"nodeType": "YulFunctionCall",
																"src": "12798:72:6"
															},
															"nativeSrc": "12798:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "12798:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "12932:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12932:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12945:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12945:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12956:2:6",
																				"nodeType": "YulLiteral",
																				"src": "12956:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12941:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12941:3:6"
																		},
																		"nativeSrc": "12941:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12941:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "12880:51:6",
																	"nodeType": "YulIdentifier",
																	"src": "12880:51:6"
																},
																"nativeSrc": "12880:80:6",
																"nodeType": "YulFunctionCall",
																"src": "12880:80:6"
															},
															"nativeSrc": "12880:80:6",
															"nodeType": "YulExpressionStatement",
															"src": "12880:80:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_rational_0_by_1_t_uint256_t_rational_0_by_1__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12382:585:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12528:9:6",
														"nodeType": "YulTypedName",
														"src": "12528:9:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12540:6:6",
														"nodeType": "YulTypedName",
														"src": "12540:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12548:6:6",
														"nodeType": "YulTypedName",
														"src": "12548:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12556:6:6",
														"nodeType": "YulTypedName",
														"src": "12556:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12564:6:6",
														"nodeType": "YulTypedName",
														"src": "12564:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12575:4:6",
														"nodeType": "YulTypedName",
														"src": "12575:4:6",
														"type": ""
													}
												],
												"src": "12382:585:6"
											},
											{
												"body": {
													"nativeSrc": "13171:387:6",
													"nodeType": "YulBlock",
													"src": "13171:387:6",
													"statements": [
														{
															"nativeSrc": "13181:27:6",
															"nodeType": "YulAssignment",
															"src": "13181:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13193:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "13193:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13204:3:6",
																		"nodeType": "YulLiteral",
																		"src": "13204:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13189:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13189:3:6"
																},
																"nativeSrc": "13189:19:6",
																"nodeType": "YulFunctionCall",
																"src": "13189:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13181:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13181:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13270:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13270:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13283:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13283:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13294:1:6",
																				"nodeType": "YulLiteral",
																				"src": "13294:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13279:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13279:3:6"
																		},
																		"nativeSrc": "13279:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13279:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "13218:51:6",
																	"nodeType": "YulIdentifier",
																	"src": "13218:51:6"
																},
																"nativeSrc": "13218:79:6",
																"nodeType": "YulFunctionCall",
																"src": "13218:79:6"
															},
															"nativeSrc": "13218:79:6",
															"nodeType": "YulExpressionStatement",
															"src": "13218:79:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13351:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13351:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13364:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13364:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13375:2:6",
																				"nodeType": "YulLiteral",
																				"src": "13375:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13360:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13360:3:6"
																		},
																		"nativeSrc": "13360:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13360:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13307:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "13307:43:6"
																},
																"nativeSrc": "13307:72:6",
																"nodeType": "YulFunctionCall",
																"src": "13307:72:6"
															},
															"nativeSrc": "13307:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "13307:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13441:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13441:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13454:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13454:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13465:2:6",
																				"nodeType": "YulLiteral",
																				"src": "13465:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13450:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13450:3:6"
																		},
																		"nativeSrc": "13450:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13450:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "13389:51:6",
																	"nodeType": "YulIdentifier",
																	"src": "13389:51:6"
																},
																"nativeSrc": "13389:80:6",
																"nodeType": "YulFunctionCall",
																"src": "13389:80:6"
															},
															"nativeSrc": "13389:80:6",
															"nodeType": "YulExpressionStatement",
															"src": "13389:80:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "13523:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13523:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13536:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13536:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13547:2:6",
																				"nodeType": "YulLiteral",
																				"src": "13547:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13532:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13532:3:6"
																		},
																		"nativeSrc": "13532:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13532:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13479:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "13479:43:6"
																},
																"nativeSrc": "13479:72:6",
																"nodeType": "YulFunctionCall",
																"src": "13479:72:6"
															},
															"nativeSrc": "13479:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "13479:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_0_by_1_t_uint256_t_rational_0_by_1_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12973:585:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13119:9:6",
														"nodeType": "YulTypedName",
														"src": "13119:9:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "13131:6:6",
														"nodeType": "YulTypedName",
														"src": "13131:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13139:6:6",
														"nodeType": "YulTypedName",
														"src": "13139:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13147:6:6",
														"nodeType": "YulTypedName",
														"src": "13147:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13155:6:6",
														"nodeType": "YulTypedName",
														"src": "13155:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13166:4:6",
														"nodeType": "YulTypedName",
														"src": "13166:4:6",
														"type": ""
													}
												],
												"src": "12973:585:6"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_32c653245c0228225a258bd03165739cf6325d21bf62854131df10f81c47b11c(memPtr) {\n\n        mstore(add(memPtr, 0), \" share should > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_32c653245c0228225a258bd03165739cf6325d21bf62854131df10f81c47b11c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_32c653245c0228225a258bd03165739cf6325d21bf62854131df10f81c47b11c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_32c653245c0228225a258bd03165739cf6325d21bf62854131df10f81c47b11c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_32c653245c0228225a258bd03165739cf6325d21bf62854131df10f81c47b11c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8c9681eec7b9e51c29345bfe73192ffcc986b5075f1cf5eb963a6153498fcbee(memPtr) {\n\n        mstore(add(memPtr, 0), \"not enough shares to remove\")\n\n    }\n\n    function abi_encode_t_stringliteral_8c9681eec7b9e51c29345bfe73192ffcc986b5075f1cf5eb963a6153498fcbee_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_8c9681eec7b9e51c29345bfe73192ffcc986b5075f1cf5eb963a6153498fcbee(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8c9681eec7b9e51c29345bfe73192ffcc986b5075f1cf5eb963a6153498fcbee__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8c9681eec7b9e51c29345bfe73192ffcc986b5075f1cf5eb963a6153498fcbee_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_ed276504624489b2996b0ff7998948c3b56ac6319f900633e32f7dd9aa170503(memPtr) {\n\n        mstore(add(memPtr, 0), \"shares < 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_ed276504624489b2996b0ff7998948c3b56ac6319f900633e32f7dd9aa170503_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 10)\n        store_literal_in_memory_ed276504624489b2996b0ff7998948c3b56ac6319f900633e32f7dd9aa170503(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ed276504624489b2996b0ff7998948c3b56ac6319f900633e32f7dd9aa170503__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ed276504624489b2996b0ff7998948c3b56ac6319f900633e32f7dd9aa170503_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ec53abdba0c504b1596ec465ad31a403eca74d58284230d63be9ec31b4299353(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token invalid\")\n\n    }\n\n    function abi_encode_t_stringliteral_ec53abdba0c504b1596ec465ad31a403eca74d58284230d63be9ec31b4299353_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_ec53abdba0c504b1596ec465ad31a403eca74d58284230d63be9ec31b4299353(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ec53abdba0c504b1596ec465ad31a403eca74d58284230d63be9ec31b4299353__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ec53abdba0c504b1596ec465ad31a403eca74d58284230d63be9ec31b4299353_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1_t_uint256_t_rational_0_by_1__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_rational_0_by_1_t_uint256_t_rational_0_by_1_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"803": [
									{
										"length": 32,
										"start": 759
									},
									{
										"length": 32,
										"start": 1145
									},
									{
										"length": 32,
										"start": 1462
									},
									{
										"length": 32,
										"start": 2025
									},
									{
										"length": 32,
										"start": 2254
									},
									{
										"length": 32,
										"start": 2375
									},
									{
										"length": 32,
										"start": 2413
									}
								],
								"806": [
									{
										"length": 32,
										"start": 924
									},
									{
										"length": 32,
										"start": 1303
									},
									{
										"length": 32,
										"start": 1617
									},
									{
										"length": 32,
										"start": 2110
									},
									{
										"length": 32,
										"start": 2342
									},
									{
										"length": 32,
										"start": 2446
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9C8F9F23 GT PUSH2 0x4D JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0xBA7BDE55 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0xD004F0F7 EQ PUSH2 0x18E JUMPI PUSH2 0x6F JUMP JUMPDEST DUP1 PUSH4 0xD5EB908 EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0x4DA296A9 EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xC7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x87 PUSH2 0x1BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB1 PUSH2 0x1C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBE SWAP2 SWAP1 PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xE08 JUMP JUMPDEST PUSH2 0x1C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x118 SWAP2 SWAP1 PUSH2 0xE5D JUMP JUMPDEST PUSH2 0x1DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP3 SWAP2 SWAP1 PUSH2 0xE88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x149 SWAP2 SWAP1 PUSH2 0xEAF JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B SWAP2 SWAP1 PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x178 PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0xEED JUMP JUMPDEST PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 GT PUSH2 0x222 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x219 SWAP1 PUSH2 0xF85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP6 GT ISZERO PUSH2 0x2AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A1 SWAP1 PUSH2 0xFED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 POP PUSH0 PUSH1 0x1 SLOAD SWAP1 POP PUSH0 PUSH1 0x2 SLOAD DUP9 DUP5 PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x1038 JUMP JUMPDEST PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x10A6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 SLOAD DUP10 DUP5 PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x1038 JUMP JUMPDEST PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x10A6 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 GT ISZERO PUSH2 0x392 JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP8 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x350 SWAP3 SWAP2 SWAP1 PUSH2 0x1131 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x36C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x118D JUMP JUMPDEST POP JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x437 JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP8 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F5 SWAP3 SWAP2 SWAP1 PUSH2 0x1131 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x411 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x118D JUMP JUMPDEST POP JUMPDEST PUSH2 0x457 DUP3 DUP6 PUSH2 0x446 SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST DUP3 DUP6 PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x461 DUP7 DUP11 PUSH2 0xC9B JUMP JUMPDEST DUP2 DUP2 SWAP8 POP SWAP8 POP POP POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 DUP1 CALLER SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP3 ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4F0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x514 SWAP2 SWAP1 PUSH2 0x118D JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP3 ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x572 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x58E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B2 SWAP2 SWAP1 PUSH2 0x118D JUMP JUMPDEST POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x628 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x64C SWAP2 SWAP1 PUSH2 0x125C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A8 SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6C3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E7 SWAP2 SWAP1 PUSH2 0x125C JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 SLOAD DUP4 PUSH2 0x6F7 SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 SLOAD DUP4 PUSH2 0x708 SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 SLOAD SWAP1 POP PUSH0 PUSH1 0x1 SLOAD SWAP1 POP PUSH0 PUSH1 0x2 SLOAD SUB PUSH2 0x731 JUMPI DUP3 DUP5 PUSH2 0x72A SWAP2 SWAP1 PUSH2 0x1287 JUMP JUMPDEST SWAP8 POP PUSH2 0x763 JUMP JUMPDEST DUP1 DUP3 PUSH2 0x73D SWAP2 SWAP1 PUSH2 0x1287 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP5 DUP7 PUSH2 0x74C SWAP2 SWAP1 PUSH2 0x1287 JUMP JUMPDEST PUSH2 0x756 SWAP2 SWAP1 PUSH2 0x1038 JUMP JUMPDEST PUSH2 0x760 SWAP2 SWAP1 PUSH2 0x10A6 JUMP JUMPDEST SWAP8 POP JUMPDEST PUSH0 DUP9 GT PUSH2 0x7A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79C SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7AF DUP8 DUP10 PUSH2 0xD0A JUMP JUMPDEST PUSH2 0x7CF DUP5 DUP4 PUSH2 0x7BE SWAP2 SWAP1 PUSH2 0x1287 JUMP JUMPDEST DUP5 DUP4 PUSH2 0x7CA SWAP2 SWAP1 PUSH2 0x1287 JUMP JUMPDEST PUSH2 0xC8A JUMP JUMPDEST POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 CALLER SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x88C JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x8CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C2 SWAP1 PUSH2 0x136C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH0 DUP1 DUP3 PUSH2 0x96B JUMPI PUSH32 0x0 PUSH32 0x0 PUSH2 0x9AE JUMP JUMPDEST PUSH32 0x0 PUSH32 0x0 JUMPDEST SWAP2 POP SWAP2 POP PUSH0 DUP7 SWAP1 POP PUSH0 DUP5 PUSH2 0x9C4 JUMPI PUSH1 0x1 SLOAD PUSH2 0x9C7 JUMP JUMPDEST PUSH0 SLOAD JUMPDEST SWAP1 POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP9 ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA07 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA23 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA47 SWAP2 SWAP1 PUSH2 0x118D JUMP JUMPDEST POP DUP2 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA82 SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA9D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAC1 SWAP2 SWAP1 PUSH2 0x125C JUMP JUMPDEST PUSH2 0xACB SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x3E8 PUSH2 0x3E5 DUP4 PUSH2 0xADF SWAP2 SWAP1 PUSH2 0x1038 JUMP JUMPDEST PUSH2 0xAE9 SWAP2 SWAP1 PUSH2 0x10A6 JUMP JUMPDEST SWAP1 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP10 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB26 SWAP3 SWAP2 SWAP1 PUSH2 0x1131 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB42 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB66 SWAP2 SWAP1 PUSH2 0x118D JUMP JUMPDEST POP DUP7 ISZERO PUSH2 0xBF5 JUMPI DUP4 PUSH0 DUP1 DUP3 DUP3 SLOAD PUSH2 0xB7D SWAP2 SWAP1 PUSH2 0x1287 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB95 SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x49926BBEBE8474393F434DFA4F78694C0923EFA07D19F2284518BFABD06EB737 DUP6 PUSH0 DUP5 PUSH0 PUSH1 0x40 MLOAD PUSH2 0xBE8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xC79 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP3 DUP3 SLOAD PUSH2 0xC05 SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC1D SWAP2 SWAP1 PUSH2 0x1287 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x49926BBEBE8474393F434DFA4F78694C0923EFA07D19F2284518BFABD06EB737 PUSH0 DUP7 PUSH0 DUP6 PUSH1 0x40 MLOAD PUSH2 0xC70 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1406 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP1 SWAP9 POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 PUSH0 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCAC SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCFF SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD1B SWAP2 SWAP1 PUSH2 0x1287 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD6E SWAP2 SWAP1 PUSH2 0x1287 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD8B DUP2 PUSH2 0xD79 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDA4 PUSH0 DUP4 ADD DUP5 PUSH2 0xD82 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDD7 DUP3 PUSH2 0xDAE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDE7 DUP2 PUSH2 0xDCD JUMP JUMPDEST DUP2 EQ PUSH2 0xDF1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE02 DUP2 PUSH2 0xDDE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE1D JUMPI PUSH2 0xE1C PUSH2 0xDAA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE2A DUP5 DUP3 DUP6 ADD PUSH2 0xDF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE3C DUP2 PUSH2 0xD79 JUMP JUMPDEST DUP2 EQ PUSH2 0xE46 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE57 DUP2 PUSH2 0xE33 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE72 JUMPI PUSH2 0xE71 PUSH2 0xDAA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE7F DUP5 DUP3 DUP6 ADD PUSH2 0xE49 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xE9B PUSH0 DUP4 ADD DUP6 PUSH2 0xD82 JUMP JUMPDEST PUSH2 0xEA8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD82 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEC5 JUMPI PUSH2 0xEC4 PUSH2 0xDAA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xED2 DUP6 DUP3 DUP7 ADD PUSH2 0xE49 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEE3 DUP6 DUP3 DUP7 ADD PUSH2 0xE49 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF03 JUMPI PUSH2 0xF02 PUSH2 0xDAA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF10 DUP6 DUP3 DUP7 ADD PUSH2 0xDF4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF21 DUP6 DUP3 DUP7 ADD PUSH2 0xE49 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2073686172652073686F756C64203E2030000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF6F PUSH1 0x11 DUP4 PUSH2 0xF2B JUMP JUMPDEST SWAP2 POP PUSH2 0xF7A DUP3 PUSH2 0xF3B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF9C DUP2 PUSH2 0xF63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F7420656E6F7567682073686172657320746F2072656D6F76650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFD7 PUSH1 0x1B DUP4 PUSH2 0xF2B JUMP JUMPDEST SWAP2 POP PUSH2 0xFE2 DUP3 PUSH2 0xFA3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1004 DUP2 PUSH2 0xFCB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1042 DUP3 PUSH2 0xD79 JUMP JUMPDEST SWAP2 POP PUSH2 0x104D DUP4 PUSH2 0xD79 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x105B DUP2 PUSH2 0xD79 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1072 JUMPI PUSH2 0x1071 PUSH2 0x100B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x10B0 DUP3 PUSH2 0xD79 JUMP JUMPDEST SWAP2 POP PUSH2 0x10BB DUP4 PUSH2 0xD79 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x10CB JUMPI PUSH2 0x10CA PUSH2 0x1079 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10F9 PUSH2 0x10F4 PUSH2 0x10EF DUP5 PUSH2 0xDAE JUMP JUMPDEST PUSH2 0x10D6 JUMP JUMPDEST PUSH2 0xDAE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x110A DUP3 PUSH2 0x10DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x111B DUP3 PUSH2 0x1100 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x112B DUP2 PUSH2 0x1111 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1144 PUSH0 DUP4 ADD DUP6 PUSH2 0x1122 JUMP JUMPDEST PUSH2 0x1151 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD82 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x116C DUP2 PUSH2 0x1158 JUMP JUMPDEST DUP2 EQ PUSH2 0x1176 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1187 DUP2 PUSH2 0x1163 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11A2 JUMPI PUSH2 0x11A1 PUSH2 0xDAA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11AF DUP5 DUP3 DUP6 ADD PUSH2 0x1179 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11C2 DUP3 PUSH2 0xD79 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CD DUP4 PUSH2 0xD79 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x11E5 JUMPI PUSH2 0x11E4 PUSH2 0x100B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11F4 DUP2 PUSH2 0xDCD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x120D PUSH0 DUP4 ADD DUP7 PUSH2 0x1122 JUMP JUMPDEST PUSH2 0x121A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x11EB JUMP JUMPDEST PUSH2 0x1227 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD82 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1242 PUSH0 DUP4 ADD DUP5 PUSH2 0x11EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1256 DUP2 PUSH2 0xE33 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1271 JUMPI PUSH2 0x1270 PUSH2 0xDAA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x127E DUP5 DUP3 DUP6 ADD PUSH2 0x1248 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1291 DUP3 PUSH2 0xD79 JUMP JUMPDEST SWAP2 POP PUSH2 0x129C DUP4 PUSH2 0xD79 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x12B4 JUMPI PUSH2 0x12B3 PUSH2 0x100B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x736861726573203C203000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12EE PUSH1 0xA DUP4 PUSH2 0xF2B JUMP JUMPDEST SWAP2 POP PUSH2 0x12F9 DUP3 PUSH2 0x12BA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x131B DUP2 PUSH2 0x12E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E20696E76616C696400000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1356 PUSH1 0xD DUP4 PUSH2 0xF2B JUMP JUMPDEST SWAP2 POP PUSH2 0x1361 DUP3 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1383 DUP2 PUSH2 0x134A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13AD PUSH2 0x13A8 PUSH2 0x13A3 DUP5 PUSH2 0x138A JUMP JUMPDEST PUSH2 0x10D6 JUMP JUMPDEST PUSH2 0xD79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13BD DUP2 PUSH2 0x1393 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x13D6 PUSH0 DUP4 ADD DUP8 PUSH2 0xD82 JUMP JUMPDEST PUSH2 0x13E3 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x13B4 JUMP JUMPDEST PUSH2 0x13F0 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xD82 JUMP JUMPDEST PUSH2 0x13FD PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x13B4 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1419 PUSH0 DUP4 ADD DUP8 PUSH2 0x13B4 JUMP JUMPDEST PUSH2 0x1426 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xD82 JUMP JUMPDEST PUSH2 0x1433 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x13B4 JUMP JUMPDEST PUSH2 0x1440 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xD82 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x6AF96A7C0CC24BF8DC59848307EAFDE54E80 0xD4 PUSH5 0xB06577239 0xB2 XOR PUSH23 0x79B9F364736F6C634300081A0033000000000000000000 ",
							"sourceMap": "119:5267:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;434:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;351;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;604:42;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4172:1088;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2843:1321;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;519:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1542:1293;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;434:20;;;;:::o;351:::-;;;;:::o;604:42::-;;;;;;;;;;;;;;;;;:::o;4172:1088::-;4236:4;4242;4275:1;4266:6;:10;4258:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;4351:22;4385:10;4351:45;;4407:8;4418:9;:17;4428:6;4418:17;;;;;;;;;;;;;;;;4407:28;;4465:3;4454:6;:14;;4446:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;4766:9;4778:8;;4766:20;;4797:9;4809:8;;4797:20;;4828:7;4854:17;;4845:6;4838:4;:13;;;;:::i;:::-;:33;;;;:::i;:::-;4828:43;;4882:7;4908:17;;4899:6;4892:4;:13;;;;:::i;:::-;:33;;;;:::i;:::-;4882:43;;4978:1;4973:2;:6;4969:52;;;4994:6;:15;;;5010:6;5018:2;4994:27;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4969:52;5041:1;5036:2;:6;5032:56;;;5061:6;:15;;;5077:6;5085:2;5061:27;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5032:56;5128:38;5152:2;5145:4;:9;;;;:::i;:::-;5163:2;5156:4;:9;;;;:::i;:::-;5128:16;:38::i;:::-;5201:21;5207:6;5215;5201:5;:21::i;:::-;5243:2;5247;5235:15;;;;;;;;;;4172:1088;;;:::o;2843:1321::-;2924:11;2947:23;2982:10;2947:46;;3035:6;:19;;;3055:6;3071:4;3078:10;3035:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3100:6;:19;;;3120:6;3136:4;3143:10;3100:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3167:9;3179:6;:16;;;3204:4;3179:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3167:43;;3221:9;3233:6;:16;;;3258:4;3233:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3221:43;;3277:7;3294:8;;3287:4;:15;;;;:::i;:::-;3277:25;;3313:7;3330:8;;3323:4;:15;;;;:::i;:::-;3313:25;;3658:13;3674:8;;3658:24;;3693:13;3709:8;;3693:24;;3752:1;3731:17;;:22;3728:173;;3783:2;3778;:7;;;;:::i;:::-;3769:16;;3728:173;;;3880:8;3868;:20;;;;:::i;:::-;3848:17;;3842:2;3837;:7;;;;:::i;:::-;3836:29;;;;:::i;:::-;3835:54;;;;:::i;:::-;3826:63;;3728:173;3978:1;3969:6;:10;3961:33;;;;;;;;;;;;:::i;:::-;;;;;;;;;4078:21;4084:6;4092;4078:5;:21::i;:::-;4110:46;4138:2;4127:8;:13;;;;:::i;:::-;4153:2;4142:8;:13;;;;:::i;:::-;4110:16;:46::i;:::-;2936:1228;;;;;;;2843:1321;;;;:::o;519:29::-;;;;:::o;1542:1293::-;1613:4;1629:23;1664:10;1629:46;;1712:6;1694:25;;:6;:25;;;:54;;;;1741:6;1723:25;;:6;:25;;;1694:54;1686:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;1779:13;1814:6;1796:25;;:6;:25;;;1779:43;;1834:14;1850:15;1869:8;:44;;1898:6;1906;1869:44;;;1881:6;1889;1869:44;1833:80;;;;2030:13;2046:9;2030:25;;2066:10;2079:8;:30;;2101:8;;2079:30;;;2090:8;;2079:30;2066:43;;2154:10;2175:7;:20;;;2196:6;2212:4;2219:8;2175:53;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2308:5;2273:7;:17;;;2299:4;2273:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;;;:::i;:::-;2265:48;;2324:14;2355:4;2349:3;2341:5;:11;;;;:::i;:::-;:18;;;;:::i;:::-;2324:35;;2412:8;:17;;;2430:6;2438:9;2412:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2492:8;2488:311;;;2528:8;2516;;:20;;;;;;;:::i;:::-;;;;;;;;2563:9;2551:8;;:21;;;;;;;:::i;:::-;;;;;;;;2597:6;2592:39;;;2605:8;2615:1;2618:9;2629:1;2592:39;;;;;;;;;:::i;:::-;;;;;;;;2488:311;;;2684:9;2672:8;;:21;;;;;;;:::i;:::-;;;;;;;;2720:8;2708;;:20;;;;;;;:::i;:::-;;;;;;;;2753:6;2748:39;;;2761:1;2764:8;2774:1;2777:9;2748:39;;;;;;;;;:::i;:::-;;;;;;;;2488:311;2816:9;2809:16;;;;;;;;;;1542:1293;;;;:::o;1415:121::-;1496:5;1485:8;:16;;;;1523:5;1512:8;:16;;;;1415:121;;:::o;1271:138::-;1356:7;1335:17;;:28;;;;;;;:::i;:::-;;;;;;;;1394:7;1374:9;:16;1384:5;1374:16;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;1271:138;;:::o;1131:134::-;1214:7;1193:17;;:28;;;;;;;:::i;:::-;;;;;;;;1250:7;1232:9;:14;1242:3;1232:14;;;;;;;;;;;;;;;;:25;;;;;;;:::i;:::-;;;;;;;;1131:134;;:::o;7:77:6:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:329::-;1335:6;1384:2;1372:9;1363:7;1359:23;1355:32;1352:119;;;1390:79;;:::i;:::-;1352:119;1510:1;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1481:117;1276:329;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:332::-;2340:4;2378:2;2367:9;2363:18;2355:26;;2391:71;2459:1;2448:9;2444:17;2435:6;2391:71;:::i;:::-;2472:72;2540:2;2529:9;2525:18;2516:6;2472:72;:::i;:::-;2219:332;;;;;:::o;2557:474::-;2625:6;2633;2682:2;2670:9;2661:7;2657:23;2653:32;2650:119;;;2688:79;;:::i;:::-;2650:119;2808:1;2833:53;2878:7;2869:6;2858:9;2854:22;2833:53;:::i;:::-;2823:63;;2779:117;2935:2;2961:53;3006:7;2997:6;2986:9;2982:22;2961:53;:::i;:::-;2951:63;;2906:118;2557:474;;;;;:::o;3037:::-;3105:6;3113;3162:2;3150:9;3141:7;3137:23;3133:32;3130:119;;;3168:79;;:::i;:::-;3130:119;3288:1;3313:53;3358:7;3349:6;3338:9;3334:22;3313:53;:::i;:::-;3303:63;;3259:117;3415:2;3441:53;3486:7;3477:6;3466:9;3462:22;3441:53;:::i;:::-;3431:63;;3386:118;3037:474;;;;;:::o;3517:169::-;3601:11;3635:6;3630:3;3623:19;3675:4;3670:3;3666:14;3651:29;;3517:169;;;;:::o;3692:167::-;3832:19;3828:1;3820:6;3816:14;3809:43;3692:167;:::o;3865:366::-;4007:3;4028:67;4092:2;4087:3;4028:67;:::i;:::-;4021:74;;4104:93;4193:3;4104:93;:::i;:::-;4222:2;4217:3;4213:12;4206:19;;3865:366;;;:::o;4237:419::-;4403:4;4441:2;4430:9;4426:18;4418:26;;4490:9;4484:4;4480:20;4476:1;4465:9;4461:17;4454:47;4518:131;4644:4;4518:131;:::i;:::-;4510:139;;4237:419;;;:::o;4662:177::-;4802:29;4798:1;4790:6;4786:14;4779:53;4662:177;:::o;4845:366::-;4987:3;5008:67;5072:2;5067:3;5008:67;:::i;:::-;5001:74;;5084:93;5173:3;5084:93;:::i;:::-;5202:2;5197:3;5193:12;5186:19;;4845:366;;;:::o;5217:419::-;5383:4;5421:2;5410:9;5406:18;5398:26;;5470:9;5464:4;5460:20;5456:1;5445:9;5441:17;5434:47;5498:131;5624:4;5498:131;:::i;:::-;5490:139;;5217:419;;;:::o;5642:180::-;5690:77;5687:1;5680:88;5787:4;5784:1;5777:15;5811:4;5808:1;5801:15;5828:410;5868:7;5891:20;5909:1;5891:20;:::i;:::-;5886:25;;5925:20;5943:1;5925:20;:::i;:::-;5920:25;;5980:1;5977;5973:9;6002:30;6020:11;6002:30;:::i;:::-;5991:41;;6181:1;6172:7;6168:15;6165:1;6162:22;6142:1;6135:9;6115:83;6092:139;;6211:18;;:::i;:::-;6092:139;5876:362;5828:410;;;;:::o;6244:180::-;6292:77;6289:1;6282:88;6389:4;6386:1;6379:15;6413:4;6410:1;6403:15;6430:185;6470:1;6487:20;6505:1;6487:20;:::i;:::-;6482:25;;6521:20;6539:1;6521:20;:::i;:::-;6516:25;;6560:1;6550:35;;6565:18;;:::i;:::-;6550:35;6607:1;6604;6600:9;6595:14;;6430:185;;;;:::o;6621:60::-;6649:3;6670:5;6663:12;;6621:60;;;:::o;6687:142::-;6737:9;6770:53;6788:34;6797:24;6815:5;6797:24;:::i;:::-;6788:34;:::i;:::-;6770:53;:::i;:::-;6757:66;;6687:142;;;:::o;6835:126::-;6885:9;6918:37;6949:5;6918:37;:::i;:::-;6905:50;;6835:126;;;:::o;6967:134::-;7025:9;7058:37;7089:5;7058:37;:::i;:::-;7045:50;;6967:134;;;:::o;7107:147::-;7202:45;7241:5;7202:45;:::i;:::-;7197:3;7190:58;7107:147;;:::o;7260:348::-;7389:4;7427:2;7416:9;7412:18;7404:26;;7440:79;7516:1;7505:9;7501:17;7492:6;7440:79;:::i;:::-;7529:72;7597:2;7586:9;7582:18;7573:6;7529:72;:::i;:::-;7260:348;;;;;:::o;7614:90::-;7648:7;7691:5;7684:13;7677:21;7666:32;;7614:90;;;:::o;7710:116::-;7780:21;7795:5;7780:21;:::i;:::-;7773:5;7770:32;7760:60;;7816:1;7813;7806:12;7760:60;7710:116;:::o;7832:137::-;7886:5;7917:6;7911:13;7902:22;;7933:30;7957:5;7933:30;:::i;:::-;7832:137;;;;:::o;7975:345::-;8042:6;8091:2;8079:9;8070:7;8066:23;8062:32;8059:119;;;8097:79;;:::i;:::-;8059:119;8217:1;8242:61;8295:7;8286:6;8275:9;8271:22;8242:61;:::i;:::-;8232:71;;8188:125;7975:345;;;;:::o;8326:194::-;8366:4;8386:20;8404:1;8386:20;:::i;:::-;8381:25;;8420:20;8438:1;8420:20;:::i;:::-;8415:25;;8464:1;8461;8457:9;8449:17;;8488:1;8482:4;8479:11;8476:37;;;8493:18;;:::i;:::-;8476:37;8326:194;;;;:::o;8526:118::-;8613:24;8631:5;8613:24;:::i;:::-;8608:3;8601:37;8526:118;;:::o;8650:458::-;8807:4;8845:2;8834:9;8830:18;8822:26;;8858:79;8934:1;8923:9;8919:17;8910:6;8858:79;:::i;:::-;8947:72;9015:2;9004:9;9000:18;8991:6;8947:72;:::i;:::-;9029;9097:2;9086:9;9082:18;9073:6;9029:72;:::i;:::-;8650:458;;;;;;:::o;9114:222::-;9207:4;9245:2;9234:9;9230:18;9222:26;;9258:71;9326:1;9315:9;9311:17;9302:6;9258:71;:::i;:::-;9114:222;;;;:::o;9342:143::-;9399:5;9430:6;9424:13;9415:22;;9446:33;9473:5;9446:33;:::i;:::-;9342:143;;;;:::o;9491:351::-;9561:6;9610:2;9598:9;9589:7;9585:23;9581:32;9578:119;;;9616:79;;:::i;:::-;9578:119;9736:1;9761:64;9817:7;9808:6;9797:9;9793:22;9761:64;:::i;:::-;9751:74;;9707:128;9491:351;;;;:::o;9848:191::-;9888:3;9907:20;9925:1;9907:20;:::i;:::-;9902:25;;9941:20;9959:1;9941:20;:::i;:::-;9936:25;;9984:1;9981;9977:9;9970:16;;10005:3;10002:1;9999:10;9996:36;;;10012:18;;:::i;:::-;9996:36;9848:191;;;;:::o;10045:160::-;10185:12;10181:1;10173:6;10169:14;10162:36;10045:160;:::o;10211:366::-;10353:3;10374:67;10438:2;10433:3;10374:67;:::i;:::-;10367:74;;10450:93;10539:3;10450:93;:::i;:::-;10568:2;10563:3;10559:12;10552:19;;10211:366;;;:::o;10583:419::-;10749:4;10787:2;10776:9;10772:18;10764:26;;10836:9;10830:4;10826:20;10822:1;10811:9;10807:17;10800:47;10864:131;10990:4;10864:131;:::i;:::-;10856:139;;10583:419;;;:::o;11008:163::-;11148:15;11144:1;11136:6;11132:14;11125:39;11008:163;:::o;11177:366::-;11319:3;11340:67;11404:2;11399:3;11340:67;:::i;:::-;11333:74;;11416:93;11505:3;11416:93;:::i;:::-;11534:2;11529:3;11525:12;11518:19;;11177:366;;;:::o;11549:419::-;11715:4;11753:2;11742:9;11738:18;11730:26;;11802:9;11796:4;11792:20;11788:1;11777:9;11773:17;11766:47;11830:131;11956:4;11830:131;:::i;:::-;11822:139;;11549:419;;;:::o;11974:85::-;12019:7;12048:5;12037:16;;11974:85;;;:::o;12065:158::-;12123:9;12156:61;12174:42;12183:32;12209:5;12183:32;:::i;:::-;12174:42;:::i;:::-;12156:61;:::i;:::-;12143:74;;12065:158;;;:::o;12229:147::-;12324:45;12363:5;12324:45;:::i;:::-;12319:3;12312:58;12229:147;;:::o;12382:585::-;12575:4;12613:3;12602:9;12598:19;12590:27;;12627:71;12695:1;12684:9;12680:17;12671:6;12627:71;:::i;:::-;12708:80;12784:2;12773:9;12769:18;12760:6;12708:80;:::i;:::-;12798:72;12866:2;12855:9;12851:18;12842:6;12798:72;:::i;:::-;12880:80;12956:2;12945:9;12941:18;12932:6;12880:80;:::i;:::-;12382:585;;;;;;;:::o;12973:::-;13166:4;13204:3;13193:9;13189:19;13181:27;;13218:79;13294:1;13283:9;13279:17;13270:6;13218:79;:::i;:::-;13307:72;13375:2;13364:9;13360:18;13351:6;13307:72;:::i;:::-;13389:80;13465:2;13454:9;13450:18;13441:6;13389:80;:::i;:::-;13479:72;13547:2;13536:9;13532:18;13523:6;13479:72;:::i;:::-;12973:585;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1049400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addLiquidity(uint256,uint256)": "infinite",
								"balanceOf(address)": "2847",
								"removeLiquidity(uint256)": "infinite",
								"reverse0()": "2447",
								"reverse1()": "2426",
								"swap(address,uint256)": "infinite",
								"totalSupplyShares()": "2469"
							},
							"internal": {
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_updateLiquidity(uint256,uint256)": "44240"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 119,
									"end": 5386,
									"name": "PUSH",
									"source": 5,
									"value": "C0"
								},
								{
									"begin": 119,
									"end": 5386,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 119,
									"end": 5386,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 680,
									"end": 1123,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 680,
									"end": 1123,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 680,
									"end": 1123,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 680,
									"end": 1123,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 680,
									"end": 1123,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 680,
									"end": 1123,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 680,
									"end": 1123,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 680,
									"end": 1123,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 680,
									"end": 1123,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 680,
									"end": 1123,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 680,
									"end": 1123,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 680,
									"end": 1123,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 680,
									"end": 1123,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 680,
									"end": 1123,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 680,
									"end": 1123,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 680,
									"end": 1123,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 680,
									"end": 1123,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 680,
									"end": 1123,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 680,
									"end": 1123,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 680,
									"end": 1123,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 680,
									"end": 1123,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 680,
									"end": 1123,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 680,
									"end": 1123,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 680,
									"end": 1123,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 680,
									"end": 1123,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 680,
									"end": 1123,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 680,
									"end": 1123,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 680,
									"end": 1123,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 680,
									"end": 1123,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 680,
									"end": 1123,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 680,
									"end": 1123,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 680,
									"end": 1123,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 680,
									"end": 1123,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 680,
									"end": 1123,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 680,
									"end": 1123,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 760,
									"end": 771,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 744,
									"end": 772,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 744,
									"end": 772,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 744,
									"end": 772,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 744,
									"end": 772,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 744,
									"end": 772,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 744,
									"end": 772,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 744,
									"end": 772,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 744,
									"end": 772,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 744,
									"end": 772,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 744,
									"end": 772,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 799,
									"end": 810,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 783,
									"end": 811,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 783,
									"end": 811,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 783,
									"end": 811,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 783,
									"end": 811,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 783,
									"end": 811,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 783,
									"end": 811,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 783,
									"end": 811,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 783,
									"end": 811,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 783,
									"end": 811,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 783,
									"end": 811,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 680,
									"end": 1123,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 680,
									"end": 1123,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 119,
									"end": 5386,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 119,
									"end": 5386,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 119,
									"end": 5386,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 119,
									"end": 5386,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 119,
									"end": 5386,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 119,
									"end": 5386,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 119,
									"end": 5386,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 119,
									"end": 5386,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 119,
									"end": 5386,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 119,
									"end": 5386,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 119,
									"end": 5386,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 119,
									"end": 5386,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 119,
									"end": 5386,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 119,
									"end": 5386,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "806"
								},
								{
									"begin": 119,
									"end": 5386,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 119,
									"end": 5386,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "803"
								},
								{
									"begin": 119,
									"end": 5386,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 119,
									"end": 5386,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 119,
									"end": 5386,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220716af96a7c0cc24bf8dc59848307eafde54e80d4640b06577239b2187679b9f364736f6c634300081a0033",
									".code": [
										{
											"begin": 119,
											"end": 5386,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "PUSH",
											"source": 5,
											"value": "9C8F9F23"
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "PUSH",
											"source": 5,
											"value": "9C8F9F23"
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "PUSH",
											"source": 5,
											"value": "9CD441DA"
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "PUSH",
											"source": 5,
											"value": "BA7BDE55"
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "PUSH",
											"source": 5,
											"value": "D004F0F7"
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "PUSH",
											"source": 5,
											"value": "D5EB908"
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "PUSH",
											"source": 5,
											"value": "4DA296A9"
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 5386,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 434,
											"end": 454,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 434,
											"end": 454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 434,
											"end": 454,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 434,
											"end": 454,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 434,
											"end": 454,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 434,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 434,
											"end": 454,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 434,
											"end": 454,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 434,
											"end": 454,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 434,
											"end": 454,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 434,
											"end": 454,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 434,
											"end": 454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 434,
											"end": 454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 434,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 434,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 434,
											"end": 454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 434,
											"end": 454,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 434,
											"end": 454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 434,
											"end": 454,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 434,
											"end": 454,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 434,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 434,
											"end": 454,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 434,
											"end": 454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 434,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 434,
											"end": 454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 434,
											"end": 454,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 434,
											"end": 454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 434,
											"end": 454,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 434,
											"end": 454,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 434,
											"end": 454,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 434,
											"end": 454,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 434,
											"end": 454,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 434,
											"end": 454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 434,
											"end": 454,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 351,
											"end": 371,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 351,
											"end": 371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 371,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 351,
											"end": 371,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 371,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 351,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 351,
											"end": 371,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 371,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 351,
											"end": 371,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 371,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 371,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 351,
											"end": 371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 351,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 351,
											"end": 371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 371,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 351,
											"end": 371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 351,
											"end": 371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 351,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 351,
											"end": 371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 351,
											"end": 371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 351,
											"end": 371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 371,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 351,
											"end": 371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 351,
											"end": 371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 351,
											"end": 371,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 351,
											"end": 371,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 351,
											"end": 371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 371,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 604,
											"end": 646,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 604,
											"end": 646,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 646,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 604,
											"end": 646,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 646,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 604,
											"end": 646,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 604,
											"end": 646,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 604,
											"end": 646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 604,
											"end": 646,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 604,
											"end": 646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 646,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 646,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 604,
											"end": 646,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 604,
											"end": 646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 604,
											"end": 646,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 646,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 4172,
											"end": 5260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 4172,
											"end": 5260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 4172,
											"end": 5260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2843,
											"end": 4164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2843,
											"end": 4164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2843,
											"end": 4164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 519,
											"end": 548,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 519,
											"end": 548,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 519,
											"end": 548,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 519,
											"end": 548,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 519,
											"end": 548,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 519,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 519,
											"end": 548,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 519,
											"end": 548,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 548,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 519,
											"end": 548,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 519,
											"end": 548,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 519,
											"end": 548,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 519,
											"end": 548,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 519,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 519,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 519,
											"end": 548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 519,
											"end": 548,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 519,
											"end": 548,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 519,
											"end": 548,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 519,
											"end": 548,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 519,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 519,
											"end": 548,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 519,
											"end": 548,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 519,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 519,
											"end": 548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 519,
											"end": 548,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 519,
											"end": 548,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 519,
											"end": 548,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 519,
											"end": 548,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 519,
											"end": 548,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 519,
											"end": 548,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 519,
											"end": 548,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 519,
											"end": 548,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 519,
											"end": 548,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1542,
											"end": 2835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1542,
											"end": 2835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1542,
											"end": 2835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 434,
											"end": 454,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 434,
											"end": 454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 434,
											"end": 454,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 434,
											"end": 454,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 434,
											"end": 454,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 434,
											"end": 454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 371,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 351,
											"end": 371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 371,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 351,
											"end": 371,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 351,
											"end": 371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 351,
											"end": 371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 604,
											"end": 646,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 604,
											"end": 646,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 646,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 646,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 646,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 646,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 646,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 604,
											"end": 646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4236,
											"end": 4240,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4246,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4276,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4266,
											"end": 4272,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4266,
											"end": 4276,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 4258,
											"end": 4299,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4299,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4258,
											"end": 4299,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4299,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4258,
											"end": 4299,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4299,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4299,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4258,
											"end": 4299,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4258,
											"end": 4299,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 4258,
											"end": 4299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4299,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4258,
											"end": 4299,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4299,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4258,
											"end": 4299,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4299,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4299,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4299,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4299,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4299,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4299,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 4258,
											"end": 4299,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4373,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4385,
											"end": 4395,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4396,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4396,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4407,
											"end": 4415,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4418,
											"end": 4427,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 4418,
											"end": 4435,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4428,
											"end": 4434,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4418,
											"end": 4435,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4418,
											"end": 4435,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4418,
											"end": 4435,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4418,
											"end": 4435,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4418,
											"end": 4435,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4418,
											"end": 4435,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4418,
											"end": 4435,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4418,
											"end": 4435,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4418,
											"end": 4435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4418,
											"end": 4435,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4418,
											"end": 4435,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4418,
											"end": 4435,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4418,
											"end": 4435,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4418,
											"end": 4435,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4418,
											"end": 4435,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4418,
											"end": 4435,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4407,
											"end": 4435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4407,
											"end": 4435,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4465,
											"end": 4468,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4454,
											"end": 4460,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4454,
											"end": 4468,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4454,
											"end": 4468,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4446,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 4446,
											"end": 4500,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4446,
											"end": 4500,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4446,
											"end": 4500,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4446,
											"end": 4500,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4446,
											"end": 4500,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4446,
											"end": 4500,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4446,
											"end": 4500,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4446,
											"end": 4500,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4446,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 4446,
											"end": 4500,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4446,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 4446,
											"end": 4500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4446,
											"end": 4500,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 4446,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4446,
											"end": 4500,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4446,
											"end": 4500,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4446,
											"end": 4500,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4446,
											"end": 4500,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4446,
											"end": 4500,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4446,
											"end": 4500,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4446,
											"end": 4500,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4446,
											"end": 4500,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 4446,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4766,
											"end": 4775,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4778,
											"end": 4786,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4778,
											"end": 4786,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4766,
											"end": 4786,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4766,
											"end": 4786,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4797,
											"end": 4806,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4809,
											"end": 4817,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4809,
											"end": 4817,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4797,
											"end": 4817,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4797,
											"end": 4817,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4828,
											"end": 4835,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4871,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4854,
											"end": 4871,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4845,
											"end": 4851,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 4842,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 4851,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 4838,
											"end": 4851,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 4851,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 4851,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 4838,
											"end": 4851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 4851,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 4838,
											"end": 4851,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 4838,
											"end": 4871,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 4871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 4838,
											"end": 4871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 4871,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 4838,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4882,
											"end": 4889,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4908,
											"end": 4925,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4908,
											"end": 4925,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4899,
											"end": 4905,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 4892,
											"end": 4896,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4892,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 4892,
											"end": 4905,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4892,
											"end": 4905,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4892,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 4892,
											"end": 4905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4892,
											"end": 4905,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 4892,
											"end": 4905,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4892,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 4892,
											"end": 4925,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4892,
											"end": 4925,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4892,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 4892,
											"end": 4925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4892,
											"end": 4925,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 4892,
											"end": 4925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4882,
											"end": 4925,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4882,
											"end": 4925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4978,
											"end": 4979,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4973,
											"end": 4975,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4973,
											"end": 4979,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4969,
											"end": 5021,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4969,
											"end": 5021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 4969,
											"end": 5021,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5000,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "803"
										},
										{
											"begin": 4994,
											"end": 5009,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4994,
											"end": 5009,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5009,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 5010,
											"end": 5016,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5018,
											"end": 5020,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4994,
											"end": 5021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4994,
											"end": 5021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5021,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4969,
											"end": 5021,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 4969,
											"end": 5021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5041,
											"end": 5042,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5036,
											"end": 5038,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5036,
											"end": 5042,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5032,
											"end": 5088,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5032,
											"end": 5088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 5032,
											"end": 5088,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5067,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "806"
										},
										{
											"begin": 5061,
											"end": 5076,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5061,
											"end": 5076,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5076,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 5077,
											"end": 5083,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5085,
											"end": 5087,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5061,
											"end": 5088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5061,
											"end": 5088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5061,
											"end": 5088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5032,
											"end": 5088,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 5032,
											"end": 5088,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5128,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 5152,
											"end": 5154,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5145,
											"end": 5149,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5145,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 5145,
											"end": 5154,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5145,
											"end": 5154,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5145,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 5145,
											"end": 5154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5145,
											"end": 5154,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 5145,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5165,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5156,
											"end": 5160,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5156,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 5156,
											"end": 5165,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5156,
											"end": 5165,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5156,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 5156,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5156,
											"end": 5165,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 5156,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5128,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 5128,
											"end": 5166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5128,
											"end": 5166,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 5128,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5222,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 5207,
											"end": 5213,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5215,
											"end": 5221,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5206,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 5201,
											"end": 5222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5222,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 5201,
											"end": 5222,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5243,
											"end": 5245,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5247,
											"end": 5249,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5235,
											"end": 5250,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 5235,
											"end": 5250,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5235,
											"end": 5250,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 5235,
											"end": 5250,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5235,
											"end": 5250,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5235,
											"end": 5250,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5235,
											"end": 5250,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5235,
											"end": 5250,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5235,
											"end": 5250,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5235,
											"end": 5250,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 5260,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 5260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2924,
											"end": 2935,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2947,
											"end": 2970,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2982,
											"end": 2992,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2947,
											"end": 2993,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2947,
											"end": 2993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3041,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "803"
										},
										{
											"begin": 3035,
											"end": 3054,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3035,
											"end": 3054,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3054,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 3055,
											"end": 3061,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3071,
											"end": 3075,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3078,
											"end": 3088,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 3035,
											"end": 3089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3035,
											"end": 3089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3089,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3106,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "806"
										},
										{
											"begin": 3100,
											"end": 3119,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3100,
											"end": 3119,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3119,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 3120,
											"end": 3126,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3136,
											"end": 3140,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3153,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 3100,
											"end": 3154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3100,
											"end": 3154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3167,
											"end": 3176,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3179,
											"end": 3185,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "803"
										},
										{
											"begin": 3179,
											"end": 3195,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3179,
											"end": 3195,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3195,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 3204,
											"end": 3208,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3179,
											"end": 3210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3179,
											"end": 3210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3179,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3167,
											"end": 3210,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3167,
											"end": 3210,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3221,
											"end": 3230,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3233,
											"end": 3239,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "806"
										},
										{
											"begin": 3233,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3233,
											"end": 3249,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 3258,
											"end": 3262,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3233,
											"end": 3264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3233,
											"end": 3264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3233,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3221,
											"end": 3264,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3221,
											"end": 3264,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3284,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3294,
											"end": 3302,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3302,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3287,
											"end": 3291,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3287,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 3287,
											"end": 3302,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3287,
											"end": 3302,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3287,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 3287,
											"end": 3302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3287,
											"end": 3302,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 3287,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3302,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3302,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3313,
											"end": 3320,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3330,
											"end": 3338,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3330,
											"end": 3338,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3327,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 3323,
											"end": 3338,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3338,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 3323,
											"end": 3338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3338,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 3323,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3313,
											"end": 3338,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3313,
											"end": 3338,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3658,
											"end": 3671,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3674,
											"end": 3682,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3674,
											"end": 3682,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3658,
											"end": 3682,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3658,
											"end": 3682,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3693,
											"end": 3706,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3709,
											"end": 3717,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3709,
											"end": 3717,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3693,
											"end": 3717,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3693,
											"end": 3717,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3752,
											"end": 3753,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3731,
											"end": 3748,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3731,
											"end": 3748,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3731,
											"end": 3753,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3728,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 3728,
											"end": 3901,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3783,
											"end": 3785,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3778,
											"end": 3780,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3778,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3778,
											"end": 3785,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3778,
											"end": 3785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3778,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 3778,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3778,
											"end": 3785,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3778,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3769,
											"end": 3785,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 3769,
											"end": 3785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3728,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3728,
											"end": 3901,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3728,
											"end": 3901,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 3728,
											"end": 3901,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3880,
											"end": 3888,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3868,
											"end": 3876,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3868,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3868,
											"end": 3888,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3868,
											"end": 3888,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3868,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 3868,
											"end": 3888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3868,
											"end": 3888,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3868,
											"end": 3888,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3848,
											"end": 3865,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3848,
											"end": 3865,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3842,
											"end": 3844,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3837,
											"end": 3839,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3837,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3837,
											"end": 3844,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3837,
											"end": 3844,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3837,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 3837,
											"end": 3844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3837,
											"end": 3844,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3837,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3836,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3836,
											"end": 3865,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3836,
											"end": 3865,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3836,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 3836,
											"end": 3865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3836,
											"end": 3865,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3836,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3835,
											"end": 3889,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 3835,
											"end": 3889,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3835,
											"end": 3889,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3835,
											"end": 3889,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3835,
											"end": 3889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3835,
											"end": 3889,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 3835,
											"end": 3889,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3826,
											"end": 3889,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 3826,
											"end": 3889,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3728,
											"end": 3901,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3728,
											"end": 3901,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3978,
											"end": 3979,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3969,
											"end": 3975,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 3969,
											"end": 3979,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 3961,
											"end": 3994,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3994,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3961,
											"end": 3994,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3994,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3961,
											"end": 3994,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3994,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3994,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3961,
											"end": 3994,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3961,
											"end": 3994,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 3961,
											"end": 3994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3994,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3961,
											"end": 3994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3994,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3961,
											"end": 3994,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3994,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3994,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3994,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3994,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3994,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3994,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 3961,
											"end": 3994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4078,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 4084,
											"end": 4090,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4092,
											"end": 4098,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 4078,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 4078,
											"end": 4099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4078,
											"end": 4099,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 4078,
											"end": 4099,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4110,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 4138,
											"end": 4140,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4127,
											"end": 4135,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4127,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 4127,
											"end": 4140,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4127,
											"end": 4140,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4127,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 4127,
											"end": 4140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4127,
											"end": 4140,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 4127,
											"end": 4140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4153,
											"end": 4155,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4150,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 4142,
											"end": 4155,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4155,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 4142,
											"end": 4155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4155,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 4142,
											"end": 4155,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4110,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 4110,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4110,
											"end": 4156,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 4110,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2936,
											"end": 4164,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2936,
											"end": 4164,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2936,
											"end": 4164,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2936,
											"end": 4164,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2936,
											"end": 4164,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2936,
											"end": 4164,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2936,
											"end": 4164,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 4164,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 4164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 519,
											"end": 548,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 519,
											"end": 548,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 519,
											"end": 548,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 519,
											"end": 548,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 519,
											"end": 548,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 519,
											"end": 548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1613,
											"end": 1617,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1629,
											"end": 1652,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1674,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1675,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1675,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1712,
											"end": 1718,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "803"
										},
										{
											"begin": 1694,
											"end": 1719,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1694,
											"end": 1719,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1694,
											"end": 1700,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1694,
											"end": 1719,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1694,
											"end": 1719,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1694,
											"end": 1719,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1694,
											"end": 1748,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1694,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 1694,
											"end": 1748,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1694,
											"end": 1748,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "806"
										},
										{
											"begin": 1723,
											"end": 1748,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1723,
											"end": 1748,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1729,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1748,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1723,
											"end": 1748,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1748,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1694,
											"end": 1748,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 1694,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 1686,
											"end": 1766,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1766,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1686,
											"end": 1766,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1766,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1686,
											"end": 1766,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1766,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1766,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1686,
											"end": 1766,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 1686,
											"end": 1766,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 1686,
											"end": 1766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1766,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 1686,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1766,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1686,
											"end": 1766,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1766,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1766,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1766,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1766,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1766,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1766,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 1686,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1792,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1820,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "803"
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1821,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1822,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1822,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1834,
											"end": 1848,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1850,
											"end": 1865,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1869,
											"end": 1877,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1869,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1869,
											"end": 1913,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1898,
											"end": 1904,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "806"
										},
										{
											"begin": 1906,
											"end": 1912,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "803"
										},
										{
											"begin": 1869,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 1869,
											"end": 1913,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1869,
											"end": 1913,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1869,
											"end": 1913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1881,
											"end": 1887,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "803"
										},
										{
											"begin": 1889,
											"end": 1895,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "806"
										},
										{
											"begin": 1869,
											"end": 1913,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 1869,
											"end": 1913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1833,
											"end": 1913,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1833,
											"end": 1913,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1833,
											"end": 1913,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1833,
											"end": 1913,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2030,
											"end": 2043,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2046,
											"end": 2055,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2030,
											"end": 2055,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2030,
											"end": 2055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2066,
											"end": 2076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2079,
											"end": 2087,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2079,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2079,
											"end": 2109,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2101,
											"end": 2109,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2101,
											"end": 2109,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2079,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2079,
											"end": 2109,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2079,
											"end": 2109,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2079,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2090,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2090,
											"end": 2098,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2079,
											"end": 2109,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2079,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2066,
											"end": 2109,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2066,
											"end": 2109,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2154,
											"end": 2164,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2182,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2195,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2175,
											"end": 2195,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2195,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 2196,
											"end": 2202,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2212,
											"end": 2216,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2219,
											"end": 2227,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2175,
											"end": 2228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2175,
											"end": 2228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2228,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2308,
											"end": 2313,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2280,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2290,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2273,
											"end": 2290,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2290,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 2299,
											"end": 2303,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2273,
											"end": 2305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 2273,
											"end": 2305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2273,
											"end": 2313,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2313,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2273,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2313,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2273,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2265,
											"end": 2313,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2265,
											"end": 2313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2324,
											"end": 2338,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2355,
											"end": 2359,
											"name": "PUSH",
											"source": 5,
											"value": "3E8"
										},
										{
											"begin": 2349,
											"end": 2352,
											"name": "PUSH",
											"source": 5,
											"value": "3E5"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2341,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2341,
											"end": 2352,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2341,
											"end": 2352,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2341,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2341,
											"end": 2352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2341,
											"end": 2352,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2341,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2341,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2341,
											"end": 2359,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2341,
											"end": 2359,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2341,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2341,
											"end": 2359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2341,
											"end": 2359,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2341,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2324,
											"end": 2359,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2324,
											"end": 2359,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2420,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2429,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2412,
											"end": 2429,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2429,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 2430,
											"end": 2436,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2438,
											"end": 2447,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2412,
											"end": 2448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2412,
											"end": 2448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2500,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2799,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2488,
											"end": 2799,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2528,
											"end": 2536,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2524,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2516,
											"end": 2524,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2536,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2536,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2536,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2536,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2516,
											"end": 2536,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2536,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2536,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2516,
											"end": 2536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2536,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2516,
											"end": 2536,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2536,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2536,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2536,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2536,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2536,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2536,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2536,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2563,
											"end": 2572,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2551,
											"end": 2559,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2551,
											"end": 2559,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2551,
											"end": 2572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2551,
											"end": 2572,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2597,
											"end": 2603,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2631,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2592,
											"end": 2631,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2631,
											"name": "PUSH",
											"source": 5,
											"value": "49926BBEBE8474393F434DFA4F78694C0923EFA07D19F2284518BFABD06EB737"
										},
										{
											"begin": 2605,
											"end": 2613,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2616,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2627,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2629,
											"end": 2630,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2592,
											"end": 2631,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2592,
											"end": 2631,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 2592,
											"end": 2631,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2631,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2631,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2631,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2631,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2592,
											"end": 2631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2631,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 2592,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2631,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2592,
											"end": 2631,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2631,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2631,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2631,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2631,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2631,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2488,
											"end": 2799,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2799,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2488,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2684,
											"end": 2693,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2680,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2680,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2693,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2693,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2693,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2672,
											"end": 2693,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2693,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2672,
											"end": 2693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2693,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2672,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2693,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2693,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2693,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2693,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2728,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2708,
											"end": 2716,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2708,
											"end": 2716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2728,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2708,
											"end": 2728,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2708,
											"end": 2728,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2708,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2708,
											"end": 2728,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2708,
											"end": 2728,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2708,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2708,
											"end": 2728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2708,
											"end": 2728,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2708,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2708,
											"end": 2728,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2708,
											"end": 2728,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2708,
											"end": 2728,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2708,
											"end": 2728,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2708,
											"end": 2728,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2708,
											"end": 2728,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2708,
											"end": 2728,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2753,
											"end": 2759,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2748,
											"end": 2787,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2748,
											"end": 2787,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2748,
											"end": 2787,
											"name": "PUSH",
											"source": 5,
											"value": "49926BBEBE8474393F434DFA4F78694C0923EFA07D19F2284518BFABD06EB737"
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2772,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2775,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2777,
											"end": 2786,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2748,
											"end": 2787,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2748,
											"end": 2787,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2748,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2748,
											"end": 2787,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2748,
											"end": 2787,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2748,
											"end": 2787,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2748,
											"end": 2787,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2748,
											"end": 2787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2748,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 2748,
											"end": 2787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2748,
											"end": 2787,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2748,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2748,
											"end": 2787,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2748,
											"end": 2787,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2748,
											"end": 2787,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2748,
											"end": 2787,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2748,
											"end": 2787,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2748,
											"end": 2787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2748,
											"end": 2787,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2799,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2488,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2816,
											"end": 2825,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "SWAP9",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 2835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 2835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1415,
											"end": 1536,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1415,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1496,
											"end": 1501,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1485,
											"end": 1501,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1501,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1501,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1501,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1523,
											"end": 1528,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1512,
											"end": 1520,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1512,
											"end": 1528,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1512,
											"end": 1528,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1512,
											"end": 1528,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1512,
											"end": 1528,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1415,
											"end": 1536,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1415,
											"end": 1536,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1415,
											"end": 1536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1271,
											"end": 1409,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 1271,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1356,
											"end": 1363,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1335,
											"end": 1352,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1335,
											"end": 1352,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1335,
											"end": 1363,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1335,
											"end": 1363,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1335,
											"end": 1363,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1335,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 1335,
											"end": 1363,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1335,
											"end": 1363,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1335,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1335,
											"end": 1363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1335,
											"end": 1363,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 1335,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1335,
											"end": 1363,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1335,
											"end": 1363,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1335,
											"end": 1363,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1335,
											"end": 1363,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1335,
											"end": 1363,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1335,
											"end": 1363,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1335,
											"end": 1363,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1401,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1383,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1374,
											"end": 1390,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1389,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1390,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1374,
											"end": 1390,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1390,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1374,
											"end": 1390,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1390,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1390,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1390,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1374,
											"end": 1390,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1390,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1390,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1390,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1374,
											"end": 1390,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1390,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1374,
											"end": 1390,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1390,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1374,
											"end": 1401,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1401,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1401,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1374,
											"end": 1401,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1401,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1374,
											"end": 1401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1401,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1374,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1401,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1401,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1401,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1401,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1401,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1401,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1401,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1271,
											"end": 1409,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1271,
											"end": 1409,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1271,
											"end": 1409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1265,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1131,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1214,
											"end": 1221,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1210,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1193,
											"end": 1210,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1193,
											"end": 1221,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1221,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1221,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1193,
											"end": 1221,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1221,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1193,
											"end": 1221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1221,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1193,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1221,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1221,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1221,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1221,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1221,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1221,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1221,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1250,
											"end": 1257,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1241,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1232,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1245,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1232,
											"end": 1246,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1232,
											"end": 1246,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1246,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1246,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1232,
											"end": 1246,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1246,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1246,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1232,
											"end": 1246,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 1246,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1232,
											"end": 1257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1265,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1265,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 769,
											"end": 895,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 769,
											"end": 895,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 806,
											"end": 813,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 888,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 835,
											"end": 889,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 824,
											"end": 889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 769,
											"end": 895,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 769,
											"end": 895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 901,
											"end": 997,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 901,
											"end": 997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 938,
											"end": 945,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 967,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 967,
											"end": 991,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 956,
											"end": 991,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 956,
											"end": 991,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 901,
											"end": 997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 901,
											"end": 997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1076,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1066,
											"end": 1101,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1003,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 1258,
											"end": 1263,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1231,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1386,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1381,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1363,
											"end": 1370,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1390,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1510,
											"end": 1511,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 1580,
											"end": 1587,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1560,
											"end": 1569,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 1535,
											"end": 1588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1276,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 1995,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1998,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2143,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2089,
											"end": 2206,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2551,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2219,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2340,
											"end": 2344,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2380,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2367,
											"end": 2376,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2363,
											"end": 2381,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2381,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2381,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2391,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 2459,
											"end": 2460,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2448,
											"end": 2457,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2444,
											"end": 2461,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2441,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2391,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 2391,
											"end": 2462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2391,
											"end": 2462,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 2391,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 2540,
											"end": 2542,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2529,
											"end": 2538,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2543,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2516,
											"end": 2522,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 2472,
											"end": 2544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2544,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 2472,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2551,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2551,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 3031,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 2557,
											"end": 3031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2625,
											"end": 2631,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2639,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2682,
											"end": 2684,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2670,
											"end": 2679,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2661,
											"end": 2668,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2657,
											"end": 2680,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2653,
											"end": 2685,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2769,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 2650,
											"end": 2769,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2688,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 2688,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 2688,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2688,
											"end": 2767,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 2688,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2769,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 2650,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2808,
											"end": 2809,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2833,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 2878,
											"end": 2885,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2869,
											"end": 2875,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2858,
											"end": 2867,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2833,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2833,
											"end": 2886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2833,
											"end": 2886,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 2833,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2886,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2886,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 2896,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2935,
											"end": 2937,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2961,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 3006,
											"end": 3013,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3003,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2986,
											"end": 2995,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2982,
											"end": 3004,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2961,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2961,
											"end": 3014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2961,
											"end": 3014,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 2961,
											"end": 3014,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 3014,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 3014,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2906,
											"end": 3024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 3031,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 3031,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 3031,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 3031,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 3031,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 3031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3037,
											"end": 3511,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3037,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3111,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3113,
											"end": 3119,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3162,
											"end": 3164,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3150,
											"end": 3159,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3148,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3160,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3133,
											"end": 3165,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3130,
											"end": 3249,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3130,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 3130,
											"end": 3249,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3168,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 3168,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 3168,
											"end": 3247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3168,
											"end": 3247,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 3168,
											"end": 3247,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3130,
											"end": 3249,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 3130,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3288,
											"end": 3289,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3313,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 3358,
											"end": 3365,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3349,
											"end": 3355,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3338,
											"end": 3347,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3334,
											"end": 3356,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3313,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 3313,
											"end": 3366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3313,
											"end": 3366,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 3313,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3303,
											"end": 3366,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3303,
											"end": 3366,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3259,
											"end": 3376,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3415,
											"end": 3417,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3441,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 3486,
											"end": 3493,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3483,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3475,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3484,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 3441,
											"end": 3494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3494,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 3441,
											"end": 3494,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3431,
											"end": 3494,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3431,
											"end": 3494,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3386,
											"end": 3504,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3037,
											"end": 3511,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3037,
											"end": 3511,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3037,
											"end": 3511,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3037,
											"end": 3511,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3037,
											"end": 3511,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3037,
											"end": 3511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3517,
											"end": 3686,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 3517,
											"end": 3686,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3601,
											"end": 3612,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3635,
											"end": 3641,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3633,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3642,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3679,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3670,
											"end": 3673,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3666,
											"end": 3680,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3680,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3517,
											"end": 3686,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3517,
											"end": 3686,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3517,
											"end": 3686,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3517,
											"end": 3686,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3517,
											"end": 3686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3692,
											"end": 3859,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 3692,
											"end": 3859,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3832,
											"end": 3851,
											"name": "PUSH",
											"source": 6,
											"value": "2073686172652073686F756C64203E2030000000000000000000000000000000"
										},
										{
											"begin": 3828,
											"end": 3829,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3820,
											"end": 3826,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3816,
											"end": 3830,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3852,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3692,
											"end": 3859,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3692,
											"end": 3859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 4231,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 3865,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4007,
											"end": 4010,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4028,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 4092,
											"end": 4094,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 4087,
											"end": 4090,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4028,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 4028,
											"end": 4095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4028,
											"end": 4095,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 4028,
											"end": 4095,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4021,
											"end": 4095,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4021,
											"end": 4095,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4197,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 4193,
											"end": 4196,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4197,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 4104,
											"end": 4197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4104,
											"end": 4197,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 4104,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4222,
											"end": 4224,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4217,
											"end": 4220,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4213,
											"end": 4225,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4206,
											"end": 4225,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4206,
											"end": 4225,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 4231,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 4231,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 4231,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 4231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4237,
											"end": 4656,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 4237,
											"end": 4656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4407,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4441,
											"end": 4443,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4430,
											"end": 4439,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4426,
											"end": 4444,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4444,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4444,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4490,
											"end": 4499,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4484,
											"end": 4488,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4480,
											"end": 4500,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4476,
											"end": 4477,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4465,
											"end": 4474,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4461,
											"end": 4478,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4454,
											"end": 4501,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4518,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 4644,
											"end": 4648,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4518,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 4518,
											"end": 4649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4518,
											"end": 4649,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 4518,
											"end": 4649,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4510,
											"end": 4649,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4510,
											"end": 4649,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4237,
											"end": 4656,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4237,
											"end": 4656,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4237,
											"end": 4656,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4237,
											"end": 4656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4662,
											"end": 4839,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 4662,
											"end": 4839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4802,
											"end": 4831,
											"name": "PUSH",
											"source": 6,
											"value": "6E6F7420656E6F7567682073686172657320746F2072656D6F76650000000000"
										},
										{
											"begin": 4798,
											"end": 4799,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4796,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4786,
											"end": 4800,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4832,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4662,
											"end": 4839,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4662,
											"end": 4839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4845,
											"end": 5211,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 4845,
											"end": 5211,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4987,
											"end": 4990,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5008,
											"end": 5075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 5072,
											"end": 5074,
											"name": "PUSH",
											"source": 6,
											"value": "1B"
										},
										{
											"begin": 5067,
											"end": 5070,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5008,
											"end": 5075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 5008,
											"end": 5075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5008,
											"end": 5075,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 5008,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5001,
											"end": 5075,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5001,
											"end": 5075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5084,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 5173,
											"end": 5176,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5084,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 5084,
											"end": 5177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5084,
											"end": 5177,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 5084,
											"end": 5177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5202,
											"end": 5204,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5197,
											"end": 5200,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4845,
											"end": 5211,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4845,
											"end": 5211,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4845,
											"end": 5211,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4845,
											"end": 5211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5217,
											"end": 5636,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 5217,
											"end": 5636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5383,
											"end": 5387,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5421,
											"end": 5423,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5410,
											"end": 5419,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5406,
											"end": 5424,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5398,
											"end": 5424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5398,
											"end": 5424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5479,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5464,
											"end": 5468,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5480,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5456,
											"end": 5457,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5445,
											"end": 5454,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5441,
											"end": 5458,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5434,
											"end": 5481,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 5624,
											"end": 5628,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 5498,
											"end": 5629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5629,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 5498,
											"end": 5629,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5490,
											"end": 5629,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5490,
											"end": 5629,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5217,
											"end": 5636,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5217,
											"end": 5636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5217,
											"end": 5636,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5217,
											"end": 5636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5642,
											"end": 5822,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 5642,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5690,
											"end": 5767,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5687,
											"end": 5688,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5680,
											"end": 5768,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5787,
											"end": 5791,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 5784,
											"end": 5785,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5777,
											"end": 5792,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5811,
											"end": 5815,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5808,
											"end": 5809,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5801,
											"end": 5816,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5828,
											"end": 6238,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 5828,
											"end": 6238,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5868,
											"end": 5875,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5891,
											"end": 5911,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 5909,
											"end": 5910,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5891,
											"end": 5911,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 5891,
											"end": 5911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5891,
											"end": 5911,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 5891,
											"end": 5911,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5911,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5911,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5925,
											"end": 5945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 5943,
											"end": 5944,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5925,
											"end": 5945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 5925,
											"end": 5945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5925,
											"end": 5945,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 5925,
											"end": 5945,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5920,
											"end": 5945,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5920,
											"end": 5945,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5980,
											"end": 5981,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5977,
											"end": 5978,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5973,
											"end": 5982,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6002,
											"end": 6032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 6020,
											"end": 6031,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6002,
											"end": 6032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 6002,
											"end": 6032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6002,
											"end": 6032,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 6002,
											"end": 6032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5991,
											"end": 6032,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5991,
											"end": 6032,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6181,
											"end": 6182,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6172,
											"end": 6179,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6168,
											"end": 6183,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6165,
											"end": 6166,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6162,
											"end": 6184,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6142,
											"end": 6143,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6135,
											"end": 6144,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6115,
											"end": 6198,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6092,
											"end": 6231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 6092,
											"end": 6231,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6211,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 6211,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 6211,
											"end": 6229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6211,
											"end": 6229,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 6211,
											"end": 6229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6092,
											"end": 6231,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 6092,
											"end": 6231,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5876,
											"end": 6238,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5828,
											"end": 6238,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5828,
											"end": 6238,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5828,
											"end": 6238,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5828,
											"end": 6238,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5828,
											"end": 6238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6424,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 6244,
											"end": 6424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6292,
											"end": 6369,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6289,
											"end": 6290,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6282,
											"end": 6370,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6389,
											"end": 6393,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 6386,
											"end": 6387,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6379,
											"end": 6394,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6413,
											"end": 6417,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6410,
											"end": 6411,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6403,
											"end": 6418,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6430,
											"end": 6615,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 6430,
											"end": 6615,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6470,
											"end": 6471,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6487,
											"end": 6507,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 6505,
											"end": 6506,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6507,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 6487,
											"end": 6507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6507,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 6487,
											"end": 6507,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6482,
											"end": 6507,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6482,
											"end": 6507,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 6539,
											"end": 6540,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 6521,
											"end": 6541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6541,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 6521,
											"end": 6541,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6516,
											"end": 6541,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6516,
											"end": 6541,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6560,
											"end": 6561,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6550,
											"end": 6585,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 6550,
											"end": 6585,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 6565,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 6565,
											"end": 6583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6583,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 6565,
											"end": 6583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6550,
											"end": 6585,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 6550,
											"end": 6585,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6607,
											"end": 6608,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6604,
											"end": 6605,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6600,
											"end": 6609,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6595,
											"end": 6609,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6595,
											"end": 6609,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6430,
											"end": 6615,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6430,
											"end": 6615,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6430,
											"end": 6615,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6430,
											"end": 6615,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6430,
											"end": 6615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6621,
											"end": 6681,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 6621,
											"end": 6681,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6649,
											"end": 6652,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6670,
											"end": 6675,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6663,
											"end": 6675,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6663,
											"end": 6675,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6621,
											"end": 6681,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6621,
											"end": 6681,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6621,
											"end": 6681,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6621,
											"end": 6681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6829,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 6687,
											"end": 6829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6737,
											"end": 6746,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6770,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 6788,
											"end": 6822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 6797,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 6815,
											"end": 6820,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 6797,
											"end": 6821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6821,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 6797,
											"end": 6821,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6788,
											"end": 6822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 6788,
											"end": 6822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6788,
											"end": 6822,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 6788,
											"end": 6822,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6770,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 6770,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6770,
											"end": 6823,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 6770,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6757,
											"end": 6823,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6757,
											"end": 6823,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6829,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6829,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6829,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6835,
											"end": 6961,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 6835,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6885,
											"end": 6894,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6918,
											"end": 6955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 6949,
											"end": 6954,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6918,
											"end": 6955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 6918,
											"end": 6955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6918,
											"end": 6955,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 6918,
											"end": 6955,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6905,
											"end": 6955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6905,
											"end": 6955,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6835,
											"end": 6961,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6835,
											"end": 6961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6835,
											"end": 6961,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6835,
											"end": 6961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6967,
											"end": 7101,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 6967,
											"end": 7101,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7025,
											"end": 7034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7058,
											"end": 7095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7058,
											"end": 7095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 7058,
											"end": 7095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7058,
											"end": 7095,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 7058,
											"end": 7095,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7045,
											"end": 7095,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7045,
											"end": 7095,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6967,
											"end": 7101,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6967,
											"end": 7101,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6967,
											"end": 7101,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6967,
											"end": 7101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7107,
											"end": 7254,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 7107,
											"end": 7254,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7202,
											"end": 7247,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 7241,
											"end": 7246,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7202,
											"end": 7247,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 7202,
											"end": 7247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7202,
											"end": 7247,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 7202,
											"end": 7247,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7197,
											"end": 7200,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7190,
											"end": 7248,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7107,
											"end": 7254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7107,
											"end": 7254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7107,
											"end": 7254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7260,
											"end": 7608,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7260,
											"end": 7608,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7389,
											"end": 7393,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7427,
											"end": 7429,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7416,
											"end": 7425,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7412,
											"end": 7430,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7404,
											"end": 7430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7404,
											"end": 7430,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7440,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 7516,
											"end": 7517,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7505,
											"end": 7514,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7501,
											"end": 7518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7492,
											"end": 7498,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7440,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 7440,
											"end": 7519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7440,
											"end": 7519,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 7440,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7529,
											"end": 7601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 7597,
											"end": 7599,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7586,
											"end": 7595,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7582,
											"end": 7600,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7573,
											"end": 7579,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7529,
											"end": 7601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 7529,
											"end": 7601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7529,
											"end": 7601,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 7529,
											"end": 7601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7260,
											"end": 7608,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7260,
											"end": 7608,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7260,
											"end": 7608,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7260,
											"end": 7608,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7260,
											"end": 7608,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7260,
											"end": 7608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7614,
											"end": 7704,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 7614,
											"end": 7704,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7648,
											"end": 7655,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7691,
											"end": 7696,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7684,
											"end": 7697,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7677,
											"end": 7698,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7666,
											"end": 7698,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7666,
											"end": 7698,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7614,
											"end": 7704,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7614,
											"end": 7704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7614,
											"end": 7704,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7614,
											"end": 7704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7710,
											"end": 7826,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 7710,
											"end": 7826,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7780,
											"end": 7801,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 7795,
											"end": 7800,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7780,
											"end": 7801,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 7780,
											"end": 7801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7780,
											"end": 7801,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 7780,
											"end": 7801,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7773,
											"end": 7778,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7770,
											"end": 7802,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7760,
											"end": 7820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 7760,
											"end": 7820,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7816,
											"end": 7817,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7813,
											"end": 7814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7806,
											"end": 7818,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7760,
											"end": 7820,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 7760,
											"end": 7820,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7710,
											"end": 7826,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7710,
											"end": 7826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7969,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 7832,
											"end": 7969,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7886,
											"end": 7891,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7917,
											"end": 7923,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7911,
											"end": 7924,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7902,
											"end": 7924,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7902,
											"end": 7924,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7933,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 7957,
											"end": 7962,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7933,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 7933,
											"end": 7963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7933,
											"end": 7963,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 7933,
											"end": 7963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7969,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7969,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7975,
											"end": 8320,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7975,
											"end": 8320,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8042,
											"end": 8048,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8091,
											"end": 8093,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8079,
											"end": 8088,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8077,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8066,
											"end": 8089,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8062,
											"end": 8094,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 8059,
											"end": 8178,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8059,
											"end": 8178,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 8059,
											"end": 8178,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8097,
											"end": 8176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 8097,
											"end": 8176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 8097,
											"end": 8176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8097,
											"end": 8176,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 8097,
											"end": 8176,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8059,
											"end": 8178,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 8059,
											"end": 8178,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8217,
											"end": 8218,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8242,
											"end": 8303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 8295,
											"end": 8302,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8286,
											"end": 8292,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8275,
											"end": 8284,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8271,
											"end": 8293,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8242,
											"end": 8303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 8242,
											"end": 8303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8242,
											"end": 8303,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 8242,
											"end": 8303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8232,
											"end": 8303,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8232,
											"end": 8303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8188,
											"end": 8313,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7975,
											"end": 8320,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7975,
											"end": 8320,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7975,
											"end": 8320,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7975,
											"end": 8320,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7975,
											"end": 8320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8326,
											"end": 8520,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 8326,
											"end": 8520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8366,
											"end": 8370,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8386,
											"end": 8406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 8404,
											"end": 8405,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8386,
											"end": 8406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 8386,
											"end": 8406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8386,
											"end": 8406,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 8386,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8381,
											"end": 8406,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8381,
											"end": 8406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8420,
											"end": 8440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 8438,
											"end": 8439,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8420,
											"end": 8440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 8420,
											"end": 8440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8420,
											"end": 8440,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 8420,
											"end": 8440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8415,
											"end": 8440,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8415,
											"end": 8440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8464,
											"end": 8465,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8461,
											"end": 8462,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8457,
											"end": 8466,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8449,
											"end": 8466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8449,
											"end": 8466,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8488,
											"end": 8489,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8482,
											"end": 8486,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8479,
											"end": 8490,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8476,
											"end": 8513,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8476,
											"end": 8513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 8476,
											"end": 8513,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8493,
											"end": 8511,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 8493,
											"end": 8511,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 8493,
											"end": 8511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8493,
											"end": 8511,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 8493,
											"end": 8511,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8476,
											"end": 8513,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 8476,
											"end": 8513,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8326,
											"end": 8520,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8326,
											"end": 8520,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8326,
											"end": 8520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8326,
											"end": 8520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8326,
											"end": 8520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8526,
											"end": 8644,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 8526,
											"end": 8644,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8613,
											"end": 8637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 8631,
											"end": 8636,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8613,
											"end": 8637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 8613,
											"end": 8637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8613,
											"end": 8637,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 8613,
											"end": 8637,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8608,
											"end": 8611,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8601,
											"end": 8638,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8526,
											"end": 8644,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8526,
											"end": 8644,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8526,
											"end": 8644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8650,
											"end": 9108,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 8650,
											"end": 9108,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8807,
											"end": 8811,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8845,
											"end": 8847,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 8834,
											"end": 8843,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8830,
											"end": 8848,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8822,
											"end": 8848,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8822,
											"end": 8848,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8858,
											"end": 8937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 8934,
											"end": 8935,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8923,
											"end": 8932,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8919,
											"end": 8936,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8910,
											"end": 8916,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8858,
											"end": 8937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 8858,
											"end": 8937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8858,
											"end": 8937,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 8858,
											"end": 8937,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8947,
											"end": 9019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 9015,
											"end": 9017,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9004,
											"end": 9013,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9000,
											"end": 9018,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8991,
											"end": 8997,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8947,
											"end": 9019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 8947,
											"end": 9019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8947,
											"end": 9019,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 8947,
											"end": 9019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9029,
											"end": 9101,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 9097,
											"end": 9099,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9086,
											"end": 9095,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9082,
											"end": 9100,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9073,
											"end": 9079,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9029,
											"end": 9101,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 9029,
											"end": 9101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9029,
											"end": 9101,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 9029,
											"end": 9101,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8650,
											"end": 9108,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 8650,
											"end": 9108,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8650,
											"end": 9108,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8650,
											"end": 9108,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8650,
											"end": 9108,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8650,
											"end": 9108,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8650,
											"end": 9108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9114,
											"end": 9336,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 9114,
											"end": 9336,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9207,
											"end": 9211,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9245,
											"end": 9247,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9234,
											"end": 9243,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9230,
											"end": 9248,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9222,
											"end": 9248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9222,
											"end": 9248,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9258,
											"end": 9329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 9326,
											"end": 9327,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9315,
											"end": 9324,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9311,
											"end": 9328,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9308,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9258,
											"end": 9329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 9258,
											"end": 9329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9258,
											"end": 9329,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 9258,
											"end": 9329,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9114,
											"end": 9336,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9114,
											"end": 9336,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9114,
											"end": 9336,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9114,
											"end": 9336,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9114,
											"end": 9336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9342,
											"end": 9485,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 9342,
											"end": 9485,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9399,
											"end": 9404,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9430,
											"end": 9436,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9424,
											"end": 9437,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9415,
											"end": 9437,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9415,
											"end": 9437,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9446,
											"end": 9479,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 9473,
											"end": 9478,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9446,
											"end": 9479,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 9446,
											"end": 9479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9446,
											"end": 9479,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 9446,
											"end": 9479,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9342,
											"end": 9485,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9342,
											"end": 9485,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9342,
											"end": 9485,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9342,
											"end": 9485,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9342,
											"end": 9485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9491,
											"end": 9842,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 9491,
											"end": 9842,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9561,
											"end": 9567,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9610,
											"end": 9612,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9598,
											"end": 9607,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9589,
											"end": 9596,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9585,
											"end": 9608,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9581,
											"end": 9613,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 9578,
											"end": 9697,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9578,
											"end": 9697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 9578,
											"end": 9697,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9616,
											"end": 9695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 9616,
											"end": 9695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 9616,
											"end": 9695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9616,
											"end": 9695,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 9616,
											"end": 9695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9578,
											"end": 9697,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 9578,
											"end": 9697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9736,
											"end": 9737,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9761,
											"end": 9825,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 9817,
											"end": 9824,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9808,
											"end": 9814,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9797,
											"end": 9806,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9793,
											"end": 9815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9761,
											"end": 9825,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 9761,
											"end": 9825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9761,
											"end": 9825,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 9761,
											"end": 9825,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9751,
											"end": 9825,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9751,
											"end": 9825,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9707,
											"end": 9835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9491,
											"end": 9842,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9491,
											"end": 9842,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9491,
											"end": 9842,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9491,
											"end": 9842,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9491,
											"end": 9842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9848,
											"end": 10039,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 9848,
											"end": 10039,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 9891,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9907,
											"end": 9927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 9925,
											"end": 9926,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9907,
											"end": 9927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 9907,
											"end": 9927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9907,
											"end": 9927,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 9907,
											"end": 9927,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9902,
											"end": 9927,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9902,
											"end": 9927,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9941,
											"end": 9961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 9959,
											"end": 9960,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9941,
											"end": 9961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 9941,
											"end": 9961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9941,
											"end": 9961,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 9941,
											"end": 9961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9936,
											"end": 9961,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9936,
											"end": 9961,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9984,
											"end": 9985,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9981,
											"end": 9982,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9977,
											"end": 9986,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9970,
											"end": 9986,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9970,
											"end": 9986,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10005,
											"end": 10008,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10002,
											"end": 10003,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9999,
											"end": 10009,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9996,
											"end": 10032,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9996,
											"end": 10032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 9996,
											"end": 10032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10012,
											"end": 10030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 10012,
											"end": 10030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 10012,
											"end": 10030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10012,
											"end": 10030,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 10012,
											"end": 10030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9996,
											"end": 10032,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 9996,
											"end": 10032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9848,
											"end": 10039,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9848,
											"end": 10039,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9848,
											"end": 10039,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9848,
											"end": 10039,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9848,
											"end": 10039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10045,
											"end": 10205,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 10045,
											"end": 10205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10185,
											"end": 10197,
											"name": "PUSH",
											"source": 6,
											"value": "736861726573203C203000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10181,
											"end": 10182,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10173,
											"end": 10179,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10169,
											"end": 10183,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10162,
											"end": 10198,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10045,
											"end": 10205,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10045,
											"end": 10205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10211,
											"end": 10577,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 10211,
											"end": 10577,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10353,
											"end": 10356,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10374,
											"end": 10441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 10438,
											"end": 10440,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 10433,
											"end": 10436,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10374,
											"end": 10441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 10374,
											"end": 10441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10374,
											"end": 10441,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 10374,
											"end": 10441,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10367,
											"end": 10441,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10367,
											"end": 10441,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10450,
											"end": 10543,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 10539,
											"end": 10542,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10450,
											"end": 10543,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 10450,
											"end": 10543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10450,
											"end": 10543,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 10450,
											"end": 10543,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10568,
											"end": 10570,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10563,
											"end": 10566,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10559,
											"end": 10571,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10552,
											"end": 10571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10552,
											"end": 10571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10211,
											"end": 10577,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10211,
											"end": 10577,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10211,
											"end": 10577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10211,
											"end": 10577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10583,
											"end": 11002,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 10583,
											"end": 11002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10749,
											"end": 10753,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10787,
											"end": 10789,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10776,
											"end": 10785,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10772,
											"end": 10790,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10764,
											"end": 10790,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10764,
											"end": 10790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10836,
											"end": 10845,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10830,
											"end": 10834,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10826,
											"end": 10846,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10822,
											"end": 10823,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10811,
											"end": 10820,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10807,
											"end": 10824,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10800,
											"end": 10847,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10864,
											"end": 10995,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 10990,
											"end": 10994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10864,
											"end": 10995,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 10864,
											"end": 10995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10864,
											"end": 10995,
											"name": "tag",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 10864,
											"end": 10995,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10995,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10995,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10583,
											"end": 11002,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10583,
											"end": 11002,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10583,
											"end": 11002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10583,
											"end": 11002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11008,
											"end": 11171,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 11008,
											"end": 11171,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11148,
											"end": 11163,
											"name": "PUSH",
											"source": 6,
											"value": "546F6B656E20696E76616C696400000000000000000000000000000000000000"
										},
										{
											"begin": 11144,
											"end": 11145,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11136,
											"end": 11142,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11132,
											"end": 11146,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11125,
											"end": 11164,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11008,
											"end": 11171,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11008,
											"end": 11171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11177,
											"end": 11543,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 11177,
											"end": 11543,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11319,
											"end": 11322,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11340,
											"end": 11407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 11404,
											"end": 11406,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 11399,
											"end": 11402,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11340,
											"end": 11407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 11340,
											"end": 11407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11340,
											"end": 11407,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 11340,
											"end": 11407,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11333,
											"end": 11407,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11333,
											"end": 11407,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11416,
											"end": 11509,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 11505,
											"end": 11508,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11416,
											"end": 11509,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 11416,
											"end": 11509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11416,
											"end": 11509,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 11416,
											"end": 11509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11534,
											"end": 11536,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11529,
											"end": 11532,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11525,
											"end": 11537,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11518,
											"end": 11537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11518,
											"end": 11537,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11177,
											"end": 11543,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11177,
											"end": 11543,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11177,
											"end": 11543,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11177,
											"end": 11543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11549,
											"end": 11968,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 11549,
											"end": 11968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11715,
											"end": 11719,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11753,
											"end": 11755,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11742,
											"end": 11751,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11738,
											"end": 11756,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11730,
											"end": 11756,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11730,
											"end": 11756,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11802,
											"end": 11811,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11796,
											"end": 11800,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11792,
											"end": 11812,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11788,
											"end": 11789,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11777,
											"end": 11786,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11773,
											"end": 11790,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11766,
											"end": 11813,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11830,
											"end": 11961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 11956,
											"end": 11960,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11830,
											"end": 11961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 11830,
											"end": 11961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11830,
											"end": 11961,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 11830,
											"end": 11961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11822,
											"end": 11961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11822,
											"end": 11961,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11549,
											"end": 11968,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11549,
											"end": 11968,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11549,
											"end": 11968,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11549,
											"end": 11968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11974,
											"end": 12059,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 11974,
											"end": 12059,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12019,
											"end": 12026,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12048,
											"end": 12053,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12037,
											"end": 12053,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12037,
											"end": 12053,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11974,
											"end": 12059,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11974,
											"end": 12059,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11974,
											"end": 12059,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11974,
											"end": 12059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12065,
											"end": 12223,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 12065,
											"end": 12223,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12123,
											"end": 12132,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12156,
											"end": 12217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 12174,
											"end": 12216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 12183,
											"end": 12215,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 12209,
											"end": 12214,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12183,
											"end": 12215,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 12183,
											"end": 12215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12183,
											"end": 12215,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 12183,
											"end": 12215,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12174,
											"end": 12216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 12174,
											"end": 12216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12174,
											"end": 12216,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 12174,
											"end": 12216,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12156,
											"end": 12217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 12156,
											"end": 12217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12156,
											"end": 12217,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 12156,
											"end": 12217,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12143,
											"end": 12217,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12143,
											"end": 12217,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12065,
											"end": 12223,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12065,
											"end": 12223,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12065,
											"end": 12223,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12065,
											"end": 12223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12229,
											"end": 12376,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 12229,
											"end": 12376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12324,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 12363,
											"end": 12368,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12324,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 12324,
											"end": 12369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12324,
											"end": 12369,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 12324,
											"end": 12369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12319,
											"end": 12322,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12312,
											"end": 12370,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12229,
											"end": 12376,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12229,
											"end": 12376,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12229,
											"end": 12376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12382,
											"end": 12967,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 12382,
											"end": 12967,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12575,
											"end": 12579,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12613,
											"end": 12616,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 12602,
											"end": 12611,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12598,
											"end": 12617,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12590,
											"end": 12617,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12590,
											"end": 12617,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12627,
											"end": 12698,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 12695,
											"end": 12696,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12684,
											"end": 12693,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12680,
											"end": 12697,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12671,
											"end": 12677,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 12627,
											"end": 12698,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 12627,
											"end": 12698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12627,
											"end": 12698,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 12627,
											"end": 12698,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12708,
											"end": 12788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 12784,
											"end": 12786,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12773,
											"end": 12782,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12769,
											"end": 12787,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12760,
											"end": 12766,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 12708,
											"end": 12788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 12708,
											"end": 12788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12708,
											"end": 12788,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 12708,
											"end": 12788,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12798,
											"end": 12870,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 12866,
											"end": 12868,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12855,
											"end": 12864,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12851,
											"end": 12869,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12842,
											"end": 12848,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 12798,
											"end": 12870,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 12798,
											"end": 12870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12798,
											"end": 12870,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 12798,
											"end": 12870,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12880,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 12956,
											"end": 12958,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 12945,
											"end": 12954,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12941,
											"end": 12959,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12932,
											"end": 12938,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12880,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 12880,
											"end": 12960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12880,
											"end": 12960,
											"name": "tag",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 12880,
											"end": 12960,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12382,
											"end": 12967,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 12382,
											"end": 12967,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 12382,
											"end": 12967,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12382,
											"end": 12967,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12382,
											"end": 12967,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12382,
											"end": 12967,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12382,
											"end": 12967,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12382,
											"end": 12967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12973,
											"end": 13558,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 12973,
											"end": 13558,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13166,
											"end": 13170,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13204,
											"end": 13207,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 13193,
											"end": 13202,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13189,
											"end": 13208,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13181,
											"end": 13208,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13181,
											"end": 13208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13218,
											"end": 13297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 13294,
											"end": 13295,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13283,
											"end": 13292,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13279,
											"end": 13296,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13270,
											"end": 13276,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 13218,
											"end": 13297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 13218,
											"end": 13297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13218,
											"end": 13297,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 13218,
											"end": 13297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13307,
											"end": 13379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 13375,
											"end": 13377,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13364,
											"end": 13373,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13360,
											"end": 13378,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13351,
											"end": 13357,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 13307,
											"end": 13379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 13307,
											"end": 13379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13307,
											"end": 13379,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 13307,
											"end": 13379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13389,
											"end": 13469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 13465,
											"end": 13467,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13454,
											"end": 13463,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13450,
											"end": 13468,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13441,
											"end": 13447,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 13389,
											"end": 13469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 13389,
											"end": 13469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13389,
											"end": 13469,
											"name": "tag",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 13389,
											"end": 13469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13479,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 13547,
											"end": 13549,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 13536,
											"end": 13545,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13532,
											"end": 13550,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13523,
											"end": 13529,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13479,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 13479,
											"end": 13551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13479,
											"end": 13551,
											"name": "tag",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 13479,
											"end": 13551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12973,
											"end": 13558,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 12973,
											"end": 13558,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 12973,
											"end": 13558,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12973,
											"end": 13558,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12973,
											"end": 13558,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12973,
											"end": 13558,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12973,
											"end": 13558,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12973,
											"end": 13558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"CSAMM.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidity(uint256,uint256)": "9cd441da",
							"balanceOf(address)": "70a08231",
							"removeLiquidity(uint256)": "9c8f9f23",
							"reverse0()": "4da296a9",
							"reverse1()": "0d5eb908",
							"swap(address,uint256)": "d004f0f7",
							"totalSupplyShares()": "ba7bde55"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddr0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenAddr1\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"token0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"token1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"token0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"token1Out\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountIn0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn1\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_share\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_share\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reverse0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reverse1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupplyShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CSAMM.sol\":\"MyCSAMM\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"CSAMM.sol\":{\"keccak256\":\"0x4616a6e7d7998e3212c4ef74b06464a34dbc7649bd9939a56177c557286410bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af21d581cab54520ff85a5a518006520db3d367c37835490696cbd93a267cd86\",\"dweb:/ipfs/QmYBZnznSNv2StAqbgEtGEfsq7yzX5vHLuWPYXzShFVdLV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 808,
								"contract": "CSAMM.sol:MyCSAMM",
								"label": "reverse0",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 810,
								"contract": "CSAMM.sol:MyCSAMM",
								"label": "reverse1",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 812,
								"contract": "CSAMM.sol:MyCSAMM",
								"label": "totalSupplyShares",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 816,
								"contract": "CSAMM.sol:MyCSAMM",
								"label": "balanceOf",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1657:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1667:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1675:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1690:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1700:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1613:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1634:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:1"
									},
									"scope": 651,
									"src": "1601:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1839:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1856:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1849:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1824:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:1"
									},
									"scope": 651,
									"src": "1779:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2043:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2060:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2053:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2028:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:1"
									},
									"scope": 651,
									"src": "1981:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2763:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2773:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2756:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:1"
									},
									"scope": 651,
									"src": "2707:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2910:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2927:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2920:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2901:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:1"
									},
									"scope": 651,
									"src": "2849:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3078:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3095:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3105:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3088:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:1"
									},
									"scope": 651,
									"src": "3004:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3390:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3400:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3416:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3448:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3455:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3459:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3438:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3475:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3333:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3345:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3384:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:1"
									},
									"scope": 651,
									"src": "3315:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3640:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3657:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3669:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3676:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3650:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3570:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3585:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3631:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:1"
									},
									"scope": 651,
									"src": "3551:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4077:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4087:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4103:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4134:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4141:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4150:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4125:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4166:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4015:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4071:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:1"
									},
									"scope": 651,
									"src": "3998:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4869:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4879:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4897:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4935:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4941:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4950:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4919:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4976:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4982:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4986:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4966:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5002:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4798:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4812:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4824:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4863:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:1"
									},
									"scope": 651,
									"src": "4776:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5462:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5476:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5472:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5496:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5517:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5510:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5571:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5567:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5589:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5610:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5603:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5670:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5676:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5680:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5662:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5412:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5426:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5438:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:1"
									},
									"scope": 651,
									"src": "5393:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6083:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6097:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6271:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6285:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6307:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6317:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6340:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6354:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6336:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6361:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6411:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6417:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6430:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6386:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6571:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6581:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6589:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6603:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6093:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6117:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6233:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6249:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6647:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6862:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7021:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7031:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7038:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6643:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6665:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6810:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6826:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7092:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7098:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7102:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7083:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7078:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6025:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6039:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6051:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:1"
									},
									"scope": 651,
									"src": "6008:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7514:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7528:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7524:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7551:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7572:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7565:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7644:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7653:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7624:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7473:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7490:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:1"
									},
									"scope": 651,
									"src": "7458:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8040:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8054:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8050:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8077:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8098:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8091:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8156:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8177:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8148:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7999:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8016:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:1"
									},
									"scope": 651,
									"src": "7984:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8800:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8819:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8826:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8835:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8810:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8744:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8759:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8776:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:1"
									},
									"scope": 651,
									"src": "8726:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9799:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9813:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9809:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9834:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9855:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9848:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9911:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9907:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9934:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9955:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9948:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10006:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10018:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10025:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10036:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10055:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10051:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10066:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10094:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10101:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10110:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10085:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10080:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9719:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9734:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9751:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9766:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:1"
									},
									"scope": 651,
									"src": "9701:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10504:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10514:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10551:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10541:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10580:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10576:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10619:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10637:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10656:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10633:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10663:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10715:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10724:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10742:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10688:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10813:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10820:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10829:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10848:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10804:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10440:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10472:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:1"
									},
									"scope": 651,
									"src": "10415:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9788:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10790:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 729,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 729,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 729,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 729,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 729,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 729,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"CSAMM.sol": {
				"ast": {
					"absolutePath": "CSAMM.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"MyCSAMM": [
							1269
						]
					},
					"id": 1270,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1270,
							"sourceUnit": 652,
							"src": "60:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MyCSAMM",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1269,
							"linearizedBaseContracts": [
								1269
							],
							"name": "MyCSAMM",
							"nameLocation": "128:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "49926bbebe8474393f434dfa4f78694c0923efa07d19f2284518bfabd06eb737",
									"id": 800,
									"name": "Swap",
									"nameLocation": "149:4:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "170:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "154:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "154:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"indexed": false,
												"mutability": "mutable",
												"name": "token0In",
												"nameLocation": "183:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "178:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "178:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"indexed": false,
												"mutability": "mutable",
												"name": "token1In",
												"nameLocation": "198:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "193:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "193:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"indexed": false,
												"mutability": "mutable",
												"name": "token0Out",
												"nameLocation": "213:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "208:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "208:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"indexed": false,
												"mutability": "mutable",
												"name": "token1Out",
												"nameLocation": "229:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "224:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "224:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "153:86:5"
									},
									"src": "143:97:5"
								},
								{
									"constant": false,
									"id": 803,
									"mutability": "immutable",
									"name": "token0",
									"nameLocation": "298:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 1269,
									"src": "273:31:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$729",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 802,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 801,
											"name": "IERC20",
											"nameLocations": [
												"273:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 729,
											"src": "273:6:5"
										},
										"referencedDeclaration": 729,
										"src": "273:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$729",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 806,
									"mutability": "immutable",
									"name": "token1",
									"nameLocation": "336:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 1269,
									"src": "311:31:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$729",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 805,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 804,
											"name": "IERC20",
											"nameLocations": [
												"311:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 729,
											"src": "311:6:5"
										},
										"referencedDeclaration": 729,
										"src": "311:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$729",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "4da296a9",
									"id": 808,
									"mutability": "mutable",
									"name": "reverse0",
									"nameLocation": "363:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1269,
									"src": "351:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 807,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "351:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0d5eb908",
									"id": 810,
									"mutability": "mutable",
									"name": "reverse1",
									"nameLocation": "446:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1269,
									"src": "434:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 809,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "434:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ba7bde55",
									"id": 812,
									"mutability": "mutable",
									"name": "totalSupplyShares",
									"nameLocation": "531:17:5",
									"nodeType": "VariableDeclaration",
									"scope": 1269,
									"src": "519:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 811,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "519:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "70a08231",
									"id": 816,
									"mutability": "mutable",
									"name": "balanceOf",
									"nameLocation": "637:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1269,
									"src": "604:42:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 815,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 813,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "613:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "604:25:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 814,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "624:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "733:390:5",
										"statements": [
											{
												"expression": {
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 823,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "744:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 825,
																"name": "_tokenAddr0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 818,
																"src": "760:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 824,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "753:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 826,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "753:19:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"src": "744:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"id": 828,
												"nodeType": "ExpressionStatement",
												"src": "744:28:5"
											},
											{
												"expression": {
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 829,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "783:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 831,
																"name": "_tokenAddr1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 820,
																"src": "799:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 830,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "792:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "792:19:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"src": "783:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "783:28:5"
											}
										]
									},
									"id": 836,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "_tokenAddr0",
												"nameLocation": "700:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "692:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "692:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "_tokenAddr1",
												"nameLocation": "721:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "713:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "713:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "691:42:5"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "733:0:5"
									},
									"scope": 1269,
									"src": "680:443:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "1182:83:5",
										"statements": [
											{
												"expression": {
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 843,
														"name": "totalSupplyShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "1193:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 844,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "1214:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1193:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 846,
												"nodeType": "ExpressionStatement",
												"src": "1193:28:5"
											},
											{
												"expression": {
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 847,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "1232:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 849,
														"indexExpression": {
															"id": 848,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "1242:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1232:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 850,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "1250:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1232:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 852,
												"nodeType": "ExpressionStatement",
												"src": "1232:25:5"
											}
										]
									},
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "1140:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1154:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1146:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1146:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1164:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1159:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1159:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1145:27:5"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1182:0:5"
									},
									"scope": 1269,
									"src": "1131:134:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 871,
										"nodeType": "Block",
										"src": "1324:85:5",
										"statements": [
											{
												"expression": {
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 861,
														"name": "totalSupplyShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "1335:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 862,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "1356:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1335:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 864,
												"nodeType": "ExpressionStatement",
												"src": "1335:28:5"
											},
											{
												"expression": {
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 865,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "1374:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 867,
														"indexExpression": {
															"id": 866,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "1384:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1374:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 868,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "1394:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1374:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "1374:27:5"
											}
										]
									},
									"id": 872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "1280:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "1294:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "1286:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1286:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1306:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "1301:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1301:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1285:29:5"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1324:0:5"
									},
									"scope": 1269,
									"src": "1271:138:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "1474:62:5",
										"statements": [
											{
												"expression": {
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 879,
														"name": "reverse0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "1485:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 880,
														"name": "_res0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "1496:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1485:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 882,
												"nodeType": "ExpressionStatement",
												"src": "1485:16:5"
											},
											{
												"expression": {
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 883,
														"name": "reverse1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "1512:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 884,
														"name": "_res1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "1523:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1512:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "1512:16:5"
											}
										]
									},
									"id": 888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateLiquidity",
									"nameLocation": "1424:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "_res0",
												"nameLocation": "1446:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "1441:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1441:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "_res1",
												"nameLocation": "1458:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "1453:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1453:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1440:24:5"
									},
									"returnParameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1474:0:5"
									},
									"scope": 1269,
									"src": "1415:121:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1037,
										"nodeType": "Block",
										"src": "1618:1217:5",
										"statements": [
											{
												"assignments": [
													898
												],
												"declarations": [
													{
														"constant": false,
														"id": 898,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "1646:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1037,
														"src": "1629:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 897,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1629:15:5",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 904,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 901,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1664:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1668:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1664:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 900,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1655:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 899,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1655:9:5",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1655:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1629:46:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 906,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 890,
																	"src": "1694:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 909,
																			"name": "token0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 803,
																			"src": "1712:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$729",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$729",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1704:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 907,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1704:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1704:15:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1694:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 912,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 890,
																	"src": "1723:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 915,
																			"name": "token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 806,
																			"src": "1741:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$729",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$729",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 914,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1733:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 913,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1733:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 916,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1733:15:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1723:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1694:54:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20696e76616c6964",
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1750:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ec53abdba0c504b1596ec465ad31a403eca74d58284230d63be9ec31b4299353",
																"typeString": "literal_string \"Token invalid\""
															},
															"value": "Token invalid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ec53abdba0c504b1596ec465ad31a403eca74d58284230d63be9ec31b4299353",
																"typeString": "literal_string \"Token invalid\""
															}
														],
														"id": 905,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1686:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1686:80:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 921,
												"nodeType": "ExpressionStatement",
												"src": "1686:80:5"
											},
											{
												"assignments": [
													923
												],
												"declarations": [
													{
														"constant": false,
														"id": 923,
														"mutability": "mutable",
														"name": "isToken0",
														"nameLocation": "1784:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 1037,
														"src": "1779:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 922,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1779:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 931,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 924,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "1796:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 927,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 803,
																		"src": "1814:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1806:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 925,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1806:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1806:15:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1796:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 930,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1795:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1779:43:5"
											},
											{
												"assignments": [
													934,
													937
												],
												"declarations": [
													{
														"constant": false,
														"id": 934,
														"mutability": "mutable",
														"name": "tokenIn",
														"nameLocation": "1841:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1037,
														"src": "1834:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 933,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 932,
																"name": "IERC20",
																"nameLocations": [
																	"1834:6:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 729,
																"src": "1834:6:5"
															},
															"referencedDeclaration": 729,
															"src": "1834:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 937,
														"mutability": "mutable",
														"name": "tokenOut",
														"nameLocation": "1857:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 1037,
														"src": "1850:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 936,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 935,
																"name": "IERC20",
																"nameLocations": [
																	"1850:6:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 729,
																"src": "1850:6:5"
															},
															"referencedDeclaration": 729,
															"src": "1850:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 946,
												"initialValue": {
													"condition": {
														"id": 938,
														"name": "isToken0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 923,
														"src": "1869:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"components": [
															{
																"id": 942,
																"name": "token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "1898:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 943,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 803,
																"src": "1906:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															}
														],
														"id": 944,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1897:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_contract$_IERC20_$729_$_t_contract$_IERC20_$729_$",
															"typeString": "tuple(contract IERC20,contract IERC20)"
														}
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1869:44:5",
													"trueExpression": {
														"components": [
															{
																"id": 939,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 803,
																"src": "1881:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 940,
																"name": "token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "1889:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															}
														],
														"id": 941,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1880:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_contract$_IERC20_$729_$_t_contract$_IERC20_$729_$",
															"typeString": "tuple(contract IERC20,contract IERC20)"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_contract$_IERC20_$729_$_t_contract$_IERC20_$729_$",
														"typeString": "tuple(contract IERC20,contract IERC20)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1833:80:5"
											},
											{
												"assignments": [
													948
												],
												"declarations": [
													{
														"constant": false,
														"id": 948,
														"mutability": "mutable",
														"name": "amountIn",
														"nameLocation": "2035:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 1037,
														"src": "2030:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 947,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2030:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 950,
												"initialValue": {
													"id": 949,
													"name": "_amountIn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 892,
													"src": "2046:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2030:25:5"
											},
											{
												"assignments": [
													952
												],
												"declarations": [
													{
														"constant": false,
														"id": 952,
														"mutability": "mutable",
														"name": "resIn",
														"nameLocation": "2071:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1037,
														"src": "2066:10:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 951,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2066:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 957,
												"initialValue": {
													"condition": {
														"id": 953,
														"name": "isToken0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 923,
														"src": "2079:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 955,
														"name": "reverse1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "2101:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2079:30:5",
													"trueExpression": {
														"id": 954,
														"name": "reverse0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "2090:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2066:43:5"
											},
											{
												"assignments": [
													959
												],
												"declarations": [
													{
														"constant": false,
														"id": 959,
														"mutability": "mutable",
														"name": "tmpIn",
														"nameLocation": "2159:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1037,
														"src": "2154:10:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 958,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2154:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 960,
												"nodeType": "VariableDeclarationStatement",
												"src": "2154:10:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 964,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "2196:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 967,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2212:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyCSAMM_$1269",
																		"typeString": "contract MyCSAMM"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyCSAMM_$1269",
																		"typeString": "contract MyCSAMM"
																	}
																],
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2204:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 965,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2204:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2204:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 969,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "2219:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 961,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "2175:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 963,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2183:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "2175:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2175:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "2175:53:5"
											},
											{
												"expression": {
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 972,
														"name": "tmpIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "2265:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 981,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 977,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2299:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_MyCSAMM_$1269",
																				"typeString": "contract MyCSAMM"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_MyCSAMM_$1269",
																				"typeString": "contract MyCSAMM"
																			}
																		],
																		"id": 976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2291:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 975,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2291:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2291:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 973,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 934,
																	"src": "2273:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 974,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2281:9:5",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 686,
																"src": "2273:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2273:32:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 980,
															"name": "resIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "2308:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2273:40:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2265:48:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 983,
												"nodeType": "ExpressionStatement",
												"src": "2265:48:5"
											},
											{
												"assignments": [
													985
												],
												"declarations": [
													{
														"constant": false,
														"id": 985,
														"mutability": "mutable",
														"name": "amountOut",
														"nameLocation": "2329:9:5",
														"nodeType": "VariableDeclaration",
														"scope": 1037,
														"src": "2324:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 984,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2324:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 991,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 988,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 986,
															"name": "tmpIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "2341:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "393937",
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2349:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_997_by_1",
																"typeString": "int_const 997"
															},
															"value": "997"
														},
														"src": "2341:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 989,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2355:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "2341:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2324:35:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 995,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "2430:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 996,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "2438:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 992,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "2412:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 994,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2421:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 696,
														"src": "2412:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2412:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 998,
												"nodeType": "ExpressionStatement",
												"src": "2412:36:5"
											},
											{
												"condition": {
													"id": 999,
													"name": "isToken0",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 923,
													"src": "2492:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1033,
													"nodeType": "Block",
													"src": "2657:142:5",
													"statements": [
														{
															"expression": {
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1017,
																	"name": "reverse0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "2672:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1018,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 985,
																	"src": "2684:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2672:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1020,
															"nodeType": "ExpressionStatement",
															"src": "2672:21:5"
														},
														{
															"expression": {
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1021,
																	"name": "reverse1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "2708:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1022,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 948,
																	"src": "2720:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2708:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1024,
															"nodeType": "ExpressionStatement",
															"src": "2708:20:5"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1026,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 898,
																		"src": "2753:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 1027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2761:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"id": 1028,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 948,
																		"src": "2764:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 1029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2774:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"id": 1030,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 985,
																		"src": "2777:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1025,
																	"name": "Swap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 800,
																	"src": "2748:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256,uint256,uint256)"
																	}
																},
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2748:39:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1032,
															"nodeType": "EmitStatement",
															"src": "2743:44:5"
														}
													]
												},
												"id": 1034,
												"nodeType": "IfStatement",
												"src": "2488:311:5",
												"trueBody": {
													"id": 1016,
													"nodeType": "Block",
													"src": "2501:142:5",
													"statements": [
														{
															"expression": {
																"id": 1002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1000,
																	"name": "reverse0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "2516:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1001,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 948,
																	"src": "2528:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2516:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1003,
															"nodeType": "ExpressionStatement",
															"src": "2516:20:5"
														},
														{
															"expression": {
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1004,
																	"name": "reverse1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "2551:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1005,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 985,
																	"src": "2563:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2551:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1007,
															"nodeType": "ExpressionStatement",
															"src": "2551:21:5"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1009,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 898,
																		"src": "2597:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"id": 1010,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 948,
																		"src": "2605:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 1011,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2615:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"id": 1012,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 985,
																		"src": "2618:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 1013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2629:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1008,
																	"name": "Swap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 800,
																	"src": "2592:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256,uint256,uint256)"
																	}
																},
																"id": 1014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2592:39:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1015,
															"nodeType": "EmitStatement",
															"src": "2587:44:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1035,
													"name": "amountOut",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 985,
													"src": "2816:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 896,
												"id": 1036,
												"nodeType": "Return",
												"src": "2809:16:5"
											}
										]
									},
									"functionSelector": "d004f0f7",
									"id": 1038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "1551:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1564:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "1556:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1556:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "_amountIn",
												"nameLocation": "1577:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "1572:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 891,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1572:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1555:32:5"
									},
									"returnParameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "1613:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1613:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:6:5"
									},
									"scope": 1269,
									"src": "1542:1293:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1165,
										"nodeType": "Block",
										"src": "2936:1228:5",
										"statements": [
											{
												"assignments": [
													1048
												],
												"declarations": [
													{
														"constant": false,
														"id": 1048,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "2964:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1165,
														"src": "2947:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 1047,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2947:15:5",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1054,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1051,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2982:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2986:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2982:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1050,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2973:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 1049,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2973:9:5",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2973:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2947:46:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1058,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "3055:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 1061,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3071:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyCSAMM_$1269",
																		"typeString": "contract MyCSAMM"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyCSAMM_$1269",
																		"typeString": "contract MyCSAMM"
																	}
																],
																"id": 1060,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3063:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1059,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3063:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3063:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1063,
															"name": "_amountIn0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "3078:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1055,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "3035:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1057,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3042:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "3035:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3035:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1065,
												"nodeType": "ExpressionStatement",
												"src": "3035:54:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1069,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "3120:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 1072,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3136:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyCSAMM_$1269",
																		"typeString": "contract MyCSAMM"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyCSAMM_$1269",
																		"typeString": "contract MyCSAMM"
																	}
																],
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3128:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1070,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3128:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3128:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1074,
															"name": "_amountIn1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "3143:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1066,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "3100:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3107:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "3100:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3100:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1076,
												"nodeType": "ExpressionStatement",
												"src": "3100:54:5"
											},
											{
												"assignments": [
													1078
												],
												"declarations": [
													{
														"constant": false,
														"id": 1078,
														"mutability": "mutable",
														"name": "bal0",
														"nameLocation": "3172:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1165,
														"src": "3167:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1077,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3167:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1086,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1083,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3204:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyCSAMM_$1269",
																		"typeString": "contract MyCSAMM"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyCSAMM_$1269",
																		"typeString": "contract MyCSAMM"
																	}
																],
																"id": 1082,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3196:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1081,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3196:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3196:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1079,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "3179:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1080,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3186:9:5",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 686,
														"src": "3179:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3179:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3167:43:5"
											},
											{
												"assignments": [
													1088
												],
												"declarations": [
													{
														"constant": false,
														"id": 1088,
														"mutability": "mutable",
														"name": "bal1",
														"nameLocation": "3226:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1165,
														"src": "3221:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1087,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3221:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1096,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1093,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3258:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyCSAMM_$1269",
																		"typeString": "contract MyCSAMM"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyCSAMM_$1269",
																		"typeString": "contract MyCSAMM"
																	}
																],
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3250:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1091,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3250:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3250:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1089,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "3233:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1090,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3240:9:5",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 686,
														"src": "3233:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3233:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3221:43:5"
											},
											{
												"assignments": [
													1098
												],
												"declarations": [
													{
														"constant": false,
														"id": 1098,
														"mutability": "mutable",
														"name": "d0",
														"nameLocation": "3282:2:5",
														"nodeType": "VariableDeclaration",
														"scope": 1165,
														"src": "3277:7:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1097,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3277:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1102,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1099,
														"name": "bal0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "3287:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1100,
														"name": "reverse0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "3294:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3287:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3277:25:5"
											},
											{
												"assignments": [
													1104
												],
												"declarations": [
													{
														"constant": false,
														"id": 1104,
														"mutability": "mutable",
														"name": "d1",
														"nameLocation": "3318:2:5",
														"nodeType": "VariableDeclaration",
														"scope": 1165,
														"src": "3313:7:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1103,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3313:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1108,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1105,
														"name": "bal1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "3323:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1106,
														"name": "reverse1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "3330:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3323:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3313:25:5"
											},
											{
												"assignments": [
													1110
												],
												"declarations": [
													{
														"constant": false,
														"id": 1110,
														"mutability": "mutable",
														"name": "origRes0",
														"nameLocation": "3663:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 1165,
														"src": "3658:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1109,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3658:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1112,
												"initialValue": {
													"id": 1111,
													"name": "reverse0",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 808,
													"src": "3674:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3658:24:5"
											},
											{
												"assignments": [
													1114
												],
												"declarations": [
													{
														"constant": false,
														"id": 1114,
														"mutability": "mutable",
														"name": "origRes1",
														"nameLocation": "3698:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 1165,
														"src": "3693:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1113,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3693:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1116,
												"initialValue": {
													"id": 1115,
													"name": "reverse1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 810,
													"src": "3709:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3693:24:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1117,
														"name": "totalSupplyShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "3731:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1118,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3752:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3731:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1142,
													"nodeType": "Block",
													"src": "3811:90:5",
													"statements": [
														{
															"expression": {
																"id": 1140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1127,
																	"name": "_share",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "3826:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1133,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1130,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1128,
																								"name": "d0",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1098,
																								"src": "3837:2:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"id": 1129,
																								"name": "d1",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1104,
																								"src": "3842:2:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "3837:7:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1131,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "3836:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1132,
																					"name": "totalSupplyShares",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 812,
																					"src": "3848:17:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3836:29:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1134,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3835:31:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1137,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1135,
																					"name": "origRes0",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1110,
																					"src": "3868:8:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 1136,
																					"name": "origRes1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1114,
																					"src": "3880:8:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3868:20:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1138,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3867:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3835:54:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3826:63:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1141,
															"nodeType": "ExpressionStatement",
															"src": "3826:63:5"
														}
													]
												},
												"id": 1143,
												"nodeType": "IfStatement",
												"src": "3728:173:5",
												"trueBody": {
													"id": 1126,
													"nodeType": "Block",
													"src": "3754:43:5",
													"statements": [
														{
															"expression": {
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1120,
																	"name": "_share",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "3769:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1121,
																		"name": "d0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1098,
																		"src": "3778:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1122,
																		"name": "d1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1104,
																		"src": "3783:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3778:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3769:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1125,
															"nodeType": "ExpressionStatement",
															"src": "3769:16:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1145,
																"name": "_share",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1045,
																"src": "3969:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3978:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3969:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "736861726573203c2030",
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3981:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ed276504624489b2996b0ff7998948c3b56ac6319f900633e32f7dd9aa170503",
																"typeString": "literal_string \"shares < 0\""
															},
															"value": "shares < 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ed276504624489b2996b0ff7998948c3b56ac6319f900633e32f7dd9aa170503",
																"typeString": "literal_string \"shares < 0\""
															}
														],
														"id": 1144,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3961:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3961:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1150,
												"nodeType": "ExpressionStatement",
												"src": "3961:33:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1152,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "4084:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1153,
															"name": "_share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "4092:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1151,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "4078:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4078:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "4078:21:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1157,
																"name": "origRes0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1110,
																"src": "4127:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1158,
																"name": "d0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1098,
																"src": "4138:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4127:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1160,
																"name": "origRes1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1114,
																"src": "4142:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1161,
																"name": "d1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "4153:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4142:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1156,
														"name": "_updateLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "4110:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4110:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1164,
												"nodeType": "ExpressionStatement",
												"src": "4110:46:5"
											}
										]
									},
									"functionSelector": "9cd441da",
									"id": 1166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "2852:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "_amountIn0",
												"nameLocation": "2870:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "2865:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2865:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "_amountIn1",
												"nameLocation": "2887:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "2882:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2882:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2864:34:5"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "_share",
												"nameLocation": "2929:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "2924:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2924:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2923:13:5"
									},
									"scope": 1269,
									"src": "2843:1321:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1267,
										"nodeType": "Block",
										"src": "4247:1013:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1176,
																"name": "_share",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1168,
																"src": "4266:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4275:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4266:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "2073686172652073686f756c64203e2030",
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4279:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_32c653245c0228225a258bd03165739cf6325d21bf62854131df10f81c47b11c",
																"typeString": "literal_string \" share should > 0\""
															},
															"value": " share should > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_32c653245c0228225a258bd03165739cf6325d21bf62854131df10f81c47b11c",
																"typeString": "literal_string \" share should > 0\""
															}
														],
														"id": 1175,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4258:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4258:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1181,
												"nodeType": "ExpressionStatement",
												"src": "4258:41:5"
											},
											{
												"assignments": [
													1183
												],
												"declarations": [
													{
														"constant": false,
														"id": 1183,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "4367:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1267,
														"src": "4351:22:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 1182,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4351:15:5",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1189,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1186,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4385:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4389:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4385:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1185,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4376:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 1184,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4376:9:5",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4376:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4351:45:5"
											},
											{
												"assignments": [
													1191
												],
												"declarations": [
													{
														"constant": false,
														"id": 1191,
														"mutability": "mutable",
														"name": "bal",
														"nameLocation": "4412:3:5",
														"nodeType": "VariableDeclaration",
														"scope": 1267,
														"src": "4407:8:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1190,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4407:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1195,
												"initialValue": {
													"baseExpression": {
														"id": 1192,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "4418:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1194,
													"indexExpression": {
														"id": 1193,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "4428:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4418:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4407:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1197,
																"name": "_share",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1168,
																"src": "4454:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1198,
																"name": "bal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1191,
																"src": "4465:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4454:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f7420656e6f7567682073686172657320746f2072656d6f7665",
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4470:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8c9681eec7b9e51c29345bfe73192ffcc986b5075f1cf5eb963a6153498fcbee",
																"typeString": "literal_string \"not enough shares to remove\""
															},
															"value": "not enough shares to remove"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8c9681eec7b9e51c29345bfe73192ffcc986b5075f1cf5eb963a6153498fcbee",
																"typeString": "literal_string \"not enough shares to remove\""
															}
														],
														"id": 1196,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4446:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4446:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1202,
												"nodeType": "ExpressionStatement",
												"src": "4446:54:5"
											},
											{
												"assignments": [
													1204
												],
												"declarations": [
													{
														"constant": false,
														"id": 1204,
														"mutability": "mutable",
														"name": "res0",
														"nameLocation": "4771:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1267,
														"src": "4766:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1203,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4766:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1206,
												"initialValue": {
													"id": 1205,
													"name": "reverse0",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 808,
													"src": "4778:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4766:20:5"
											},
											{
												"assignments": [
													1208
												],
												"declarations": [
													{
														"constant": false,
														"id": 1208,
														"mutability": "mutable",
														"name": "res1",
														"nameLocation": "4802:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1267,
														"src": "4797:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1207,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4797:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1210,
												"initialValue": {
													"id": 1209,
													"name": "reverse1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 810,
													"src": "4809:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4797:20:5"
											},
											{
												"assignments": [
													1212
												],
												"declarations": [
													{
														"constant": false,
														"id": 1212,
														"mutability": "mutable",
														"name": "d0",
														"nameLocation": "4833:2:5",
														"nodeType": "VariableDeclaration",
														"scope": 1267,
														"src": "4828:7:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1211,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4828:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1218,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1213,
															"name": "res0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "4838:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1214,
															"name": "_share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "4845:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4838:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1216,
														"name": "totalSupplyShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "4854:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4838:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4828:43:5"
											},
											{
												"assignments": [
													1220
												],
												"declarations": [
													{
														"constant": false,
														"id": 1220,
														"mutability": "mutable",
														"name": "d1",
														"nameLocation": "4887:2:5",
														"nodeType": "VariableDeclaration",
														"scope": 1267,
														"src": "4882:7:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1219,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4882:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1226,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1221,
															"name": "res1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "4892:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1222,
															"name": "_share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "4899:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4892:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1224,
														"name": "totalSupplyShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "4908:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4892:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4882:43:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1227,
														"name": "d0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "4973:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1228,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4978:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4973:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1237,
												"nodeType": "IfStatement",
												"src": "4969:52:5",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"id": 1233,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "5010:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															{
																"id": 1234,
																"name": "d0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1212,
																"src": "5018:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1230,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 803,
																"src": "4994:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5001:8:5",
															"memberName": "transfer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 696,
															"src": "4994:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														"id": 1235,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4994:27:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1236,
													"nodeType": "ExpressionStatement",
													"src": "4994:27:5"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1238,
														"name": "d1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1220,
														"src": "5036:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1239,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5041:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5036:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1248,
												"nodeType": "IfStatement",
												"src": "5032:56:5",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"id": 1244,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "5077:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															{
																"id": 1245,
																"name": "d1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1220,
																"src": "5085:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1241,
																"name": "token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "5061:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5068:8:5",
															"memberName": "transfer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 696,
															"src": "5061:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														"id": 1246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5061:27:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1247,
													"nodeType": "ExpressionStatement",
													"src": "5061:27:5"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1250,
																"name": "res0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1204,
																"src": "5145:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1251,
																"name": "d0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1212,
																"src": "5152:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1253,
																"name": "res1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1208,
																"src": "5156:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1254,
																"name": "d1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1220,
																"src": "5163:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5156:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1249,
														"name": "_updateLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "5128:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5128:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1257,
												"nodeType": "ExpressionStatement",
												"src": "5128:38:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1259,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "5207:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1260,
															"name": "_share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "5215:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1258,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "5201:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5201:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1262,
												"nodeType": "ExpressionStatement",
												"src": "5201:21:5"
											},
											{
												"expression": {
													"components": [
														{
															"id": 1263,
															"name": "d0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "5243:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1264,
															"name": "d1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "5247:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1265,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5242:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 1174,
												"id": 1266,
												"nodeType": "Return",
												"src": "5235:15:5"
											}
										]
									},
									"functionSelector": "9c8f9f23",
									"id": 1268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "4181:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "_share",
												"nameLocation": "4202:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "4197:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1167,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4197:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4196:13:5"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "4236:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1170,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4236:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "4242:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4242:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4235:12:5"
									},
									"scope": 1269,
									"src": "4172:1088:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1270,
							"src": "119:5267:5",
							"usedErrors": [],
							"usedEvents": [
								800
							]
						}
					],
					"src": "33:5353:5"
				},
				"id": 5
			}
		}
	}
}