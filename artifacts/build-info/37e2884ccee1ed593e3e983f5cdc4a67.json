{
	"id": "37e2884ccee1ed593e3e983f5cdc4a67",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"StakingRewards.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract MyStaking{\r\n    IERC20 public immutable stakingToken;\r\n    IERC20 public immutable rewardsToken;\r\n\r\n    address public immutable owner;         // owner can add/remove rewords tokens\r\n    uint public stakingTokensTotalSupply;   // sum of all the users' staking tokens\r\n\r\n    uint public duration;       // rewords duration\r\n    uint public updateAt;       // contract last update  time, in seconds\r\n    uint public finishAt;       // rewords end time, in seconds    \r\n    uint public rewardsRate;    // global rewards per second, TBD\r\n    uint public rewardsPerTokenStored;      // RPT global rewords per token per  second, = rewardsRate / stakingTokens\r\n                                            // every user has his own RPT, and RTP changes once staking poor changes. TBD\r\n    mapping (address => uint) userRewardsPerTokenPaid;      // every user's RPT\r\n    mapping (address => uint) userRewards;                  // every user's rewards earned.\r\n    mapping (address => uint) userStakingTokens;            // every user's staking tokens.   balance\r\n\r\n    constructor(address _stakingToken, address _rewardsToken){\r\n        owner = msg.sender;\r\n        stakingToken = IERC20(_stakingToken);\r\n        rewardsToken = IERC20(_rewardsToken);\r\n    }\r\n\r\n    modifier OnlyOwner(){\r\n        require(owner == msg.sender, \"Only owner is allowed.\");\r\n        _;\r\n    }\r\n    modifier NotDuringRewarding(){\r\n        require(block.timestamp >= finishAt, \" it can't be set during rewarding\");\r\n        _;\r\n    }\r\n    modifier updateRewards(address _account){\r\n        rewardsPerTokenStored = rewardsPerToken();\r\n        updateAt = _min(block.timestamp, finishAt);\r\n        if(_account != address(0)){\r\n            userRewards[_account] = earned(_account);\r\n            userRewardsPerTokenPaid[_account] = rewardsPerTokenStored;\r\n        }\r\n\r\n        _;\r\n    }\r\n\r\n\r\n    /* owner set the rewards duration */\r\n    /* only when rewards is expired, duration can be set*/\r\n    function setDuration(uint _duration) external OnlyOwner NotDuringRewarding{\r\n        duration = _duration;\r\n    }\r\n\r\n    /* owner set the total rewords tokens, caculater our rewards Rate*/\r\n    /* it can be called, during rewarding or out of rewarding */\r\n    /* duration should be set prior to this call */ \r\n    function setRewards(uint _rewordsAmount) external OnlyOwner updateRewards(address(0)){\r\n        // check duration should have been set != 0\r\n        uint newDuration = duration;\r\n        require(newDuration != 0, \"setRewards: set the duration first.\");\r\n        require(_rewordsAmount > 0, \"setRewards: rewords amount = 0\");\r\n        \r\n        // transfer rewwarding token in, \r\n        rewardsToken.transferFrom(owner, address(this), _rewordsAmount);\r\n        uint balanceOfRewards = rewardsToken.balanceOf(address(this));\r\n\r\n\r\n        // set rewardsRate, and check it > 0\r\n        uint nowtime = block.timestamp;\r\n        uint finishTime = finishAt;\r\n        if (nowtime >= finishTime){\r\n            rewardsRate = _rewordsAmount / newDuration;        \r\n        }else {\r\n            // rewardsRate = balanceOfRewards / (finishTime - nowtime);     // wrong: can't use balanceOf, because balanceOf contains \r\n                                                                            // the rewards which generated but not withdrawed\r\n                                                                            // And, the duration time will be re-calculated and restarted,  \r\n                                                                            // each time this function is called.\r\n            rewardsRate = (rewardsRate * (finishTime - nowtime) +  _rewordsAmount ) / newDuration;      // last rewarding not finished\r\n                                                                                                        // remaining rewards + newAddRewards\r\n        }\r\n        require(rewardsRate > 0, \"setRewards: reword rate = 0\");            // seems these 2 requires are impossible.\r\n        require(rewardsRate * newDuration <= balanceOfRewards, \"setRewards: rewards < balance\");               \r\n\r\n\r\n        // set finish time and start rewarding \r\n        // if (nowtime >= finishAt){\r\n        //     finishTime = nowtime + duration;\r\n        // }else{\r\n        //     // finishTime = finishAt - nowtime + duration;           // wrong: Even if last rewarding not finished\r\n        //                                                              // the finished time will be set for duration \r\n        //                                                              // from now on. \r\n        // }\r\n        finishTime = nowtime + duration;\r\n\r\n        // update reword\r\n        finishAt = finishTime;\r\n        updateAt = nowtime;\r\n        // set global RPT\r\n        // rewardsPerTokenStored = balanceOfRewards / stakingTokensTotalSupply / duration;     // TBD\r\n        \r\n\r\n\r\n    }\r\n\r\n    /* user stake tokens*/\r\n    function stake(uint _amount) external updateRewards(msg.sender){\r\n        // check amount > 0\r\n        // check now < finishAt\r\n        // transfer staking token in\r\n        // update total staking \r\n        // update user staking tokens balance\r\n        // update user rewords \r\n        // update user rewards per token paid\r\n\r\n        // update update At\r\n        // \r\n        require(_amount > 0, \"amount = 0\");\r\n        stakingToken.transferFrom(msg.sender, address(this), _amount);\r\n        userStakingTokens[msg.sender] += _amount;\r\n        stakingTokensTotalSupply += _amount;\r\n    }\r\n\r\n    /* user withdraw staking tokens*/\r\n    function withdraw(uint _amount) external updateRewards(msg.sender) {\r\n        // check amount > 0\r\n        // transfer staking token out\r\n        // update user staking tokens(balance)\r\n        // update staking total supply\r\n\r\n        // update user rewords paid\r\n        // update user rewards per token paid\r\n        // update updateAt\r\n\r\n        require(_amount > 0, \"amount = 0\");\r\n        userStakingTokens[msg.sender] -= _amount;\r\n        stakingTokensTotalSupply -= _amount;\r\n        stakingToken.transfer(msg.sender, _amount);\r\n    }\r\n\r\n    function _min(uint x, uint y) private pure returns(uint z){\r\n        return z = (x <= y) ? x : y;\r\n    }\r\n    function rewardsPerToken() public view returns(uint){\r\n        if(stakingTokensTotalSupply == 0){\r\n            return stakingTokensTotalSupply;\r\n        }\r\n        // userRewardsPerTokenPaid + R/T * (Time_end - Time_lastupdate)\r\n        return rewardsPerTokenStored + (rewardsRate * (_min(finishAt, block.timestamp) - updateAt) / stakingTokensTotalSupply * 1e18);\r\n        \r\n    } \r\n    /* user query his own rewards tokens */\r\n    function earned(address _account) public view returns(uint){\r\n        // endtime Rj= min(now, finished)\r\n        // earned duration  = lastupdate time (R0)- endtime(Rj)\r\n        // earned = userStakingTokenBalance *（RewardsPerToken - RewardsPerTokenPaid[account]）+ userRewards[account]\r\n        return userStakingTokens[_account] * (rewardsPerToken() - userRewardsPerTokenPaid[_account]) / 1e18 + userRewards[_account];\r\n    }\r\n\r\n    /* user withdraw his own rewords tokes */\r\n    function getRewards() external updateRewards(msg.sender){\r\n        uint rewards = userRewards[msg.sender];\r\n        if(rewards > 0){\r\n            rewardsToken.transfer(msg.sender, rewards);\r\n            userRewards[msg.sender] = 0;\r\n        }\r\n\r\n    }\r\n\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"StakingRewards.sol": {
				"MyStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakingToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardsToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "duration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "finishAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsPerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsPerTokenStored",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_duration",
									"type": "uint256"
								}
							],
							"name": "setDuration",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_rewordsAmount",
									"type": "uint256"
								}
							],
							"name": "setRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingTokensTotalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updateAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"StakingRewards.sol\":119:7504  contract MyStaking{... */\n  mstore(0x40, 0xe0)\n    /* \"StakingRewards.sol\":1189:1377  constructor(address _stakingToken, address _rewardsToken){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"StakingRewards.sol\":1265:1275  msg.sender */\n  caller\n    /* \"StakingRewards.sol\":1257:1275  owner = msg.sender */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"StakingRewards.sol\":1308:1321  _stakingToken */\n  dup2\n    /* \"StakingRewards.sol\":1286:1322  stakingToken = IERC20(_stakingToken) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"StakingRewards.sol\":1355:1368  _rewardsToken */\n  dup1\n    /* \"StakingRewards.sol\":1333:1369  rewardsToken = IERC20(_rewardsToken) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"StakingRewards.sol\":1189:1377  constructor(address _stakingToken, address _rewardsToken){... */\n  pop\n  pop\n    /* \"StakingRewards.sol\":119:7504  contract MyStaking{... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":949:1068   */\ntag_27:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_29\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_30\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_13\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"StakingRewards.sol\":119:7504  contract MyStaking{... */\ntag_6:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xa22b5bddbdcd05368321bd50fd5db7d428b6ca478a3c7389901149e4e0253710\")\n  0x00\n  assignImmutable(\"0x03065c56175bab9d6c02682cec557b5c933cd8364ccf2dd44ab76e0c260931e7\")\n  0x00\n  assignImmutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"StakingRewards.sol\":119:7504  contract MyStaking{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70641a36\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xc7a29c6f\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xc7a29c6f\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc964f585\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xd1af0c7d\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf6be71d1\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x70641a36\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x350fd407\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x350fd407\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4334f3ff\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x523bc7d5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x67d3b488\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x8cc262\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0572b0cc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0fb5a6b4\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"StakingRewards.sol\":6763:7193  function earned(address _account) public view returns(uint){... */\n    tag_3:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingRewards.sol\":7248:7499  function getRewards() external updateRewards(msg.sender){... */\n    tag_4:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      stop\n        /* \"StakingRewards.sol\":403:423  uint public duration */\n    tag_5:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingRewards.sol\":5671:6213  function withdraw(uint _amount) external updateRewards(msg.sender) {... */\n    tag_6:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      stop\n        /* \"StakingRewards.sol\":667:700  uint public rewardsPerTokenStored */\n    tag_7:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingRewards.sol\":316:352  uint public stakingTokensTotalSupply */\n    tag_8:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingRewards.sol\":600:623  uint public rewardsRate */\n    tag_9:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingRewards.sol\":531:551  uint public finishAt */\n    tag_10:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingRewards.sol\":6331:6711  function rewardsPerToken() public view returns(uint){... */\n    tag_11:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingRewards.sol\":144:180  IERC20 public immutable stakingToken */\n    tag_12:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingRewards.sol\":232:262  address public immutable owner */\n    tag_13:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingRewards.sol\":5034:5624  function stake(uint _amount) external updateRewards(msg.sender){... */\n    tag_14:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      stop\n        /* \"StakingRewards.sol\":2403:4998  function setRewards(uint _rewordsAmount) external OnlyOwner updateRewards(address(0)){... */\n    tag_15:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      stop\n        /* \"StakingRewards.sol\":456:476  uint public updateAt */\n    tag_16:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingRewards.sol\":187:223  IERC20 public immutable rewardsToken */\n    tag_17:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingRewards.sol\":2089:2202  function setDuration(uint _duration) external OnlyOwner NotDuringRewarding{... */\n    tag_18:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      stop\n        /* \"StakingRewards.sol\":6763:7193  function earned(address _account) public view returns(uint){... */\n    tag_25:\n        /* \"StakingRewards.sol\":6817:6821  uint */\n      0x00\n        /* \"StakingRewards.sol\":7164:7175  userRewards */\n      0x07\n        /* \"StakingRewards.sol\":7164:7185  userRewards[_account] */\n      0x00\n        /* \"StakingRewards.sol\":7176:7184  _account */\n      dup4\n        /* \"StakingRewards.sol\":7164:7185  userRewards[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"StakingRewards.sol\":7157:7161  1e18 */\n      0x0de0b6b3a7640000\n        /* \"StakingRewards.sol\":7120:7143  userRewardsPerTokenPaid */\n      0x06\n        /* \"StakingRewards.sol\":7120:7153  userRewardsPerTokenPaid[_account] */\n      0x00\n        /* \"StakingRewards.sol\":7144:7152  _account */\n      dup6\n        /* \"StakingRewards.sol\":7120:7153  userRewardsPerTokenPaid[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"StakingRewards.sol\":7100:7117  rewardsPerToken() */\n      tag_76\n        /* \"StakingRewards.sol\":7100:7115  rewardsPerToken */\n      tag_50\n        /* \"StakingRewards.sol\":7100:7117  rewardsPerToken() */\n      jump\t// in\n    tag_76:\n        /* \"StakingRewards.sol\":7100:7153  rewardsPerToken() - userRewardsPerTokenPaid[_account] */\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"StakingRewards.sol\":7069:7086  userStakingTokens */\n      0x08\n        /* \"StakingRewards.sol\":7069:7096  userStakingTokens[_account] */\n      0x00\n        /* \"StakingRewards.sol\":7087:7095  _account */\n      dup7\n        /* \"StakingRewards.sol\":7069:7096  userStakingTokens[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"StakingRewards.sol\":7069:7154  userStakingTokens[_account] * (rewardsPerToken() - userRewardsPerTokenPaid[_account]) */\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n        /* \"StakingRewards.sol\":7069:7161  userStakingTokens[_account] * (rewardsPerToken() - userRewardsPerTokenPaid[_account]) / 1e18 */\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"StakingRewards.sol\":7069:7185  userStakingTokens[_account] * (rewardsPerToken() - userRewardsPerTokenPaid[_account]) / 1e18 + userRewards[_account] */\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"StakingRewards.sol\":7062:7185  return userStakingTokens[_account] * (rewardsPerToken() - userRewardsPerTokenPaid[_account]) / 1e18 + userRewards[_account] */\n      swap1\n      pop\n        /* \"StakingRewards.sol\":6763:7193  function earned(address _account) public view returns(uint){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"StakingRewards.sol\":7248:7499  function getRewards() external updateRewards(msg.sender){... */\n    tag_29:\n        /* \"StakingRewards.sol\":7293:7303  msg.sender */\n      caller\n        /* \"StakingRewards.sol\":1710:1727  rewardsPerToken() */\n      tag_86\n        /* \"StakingRewards.sol\":1710:1725  rewardsPerToken */\n      tag_50\n        /* \"StakingRewards.sol\":1710:1727  rewardsPerToken() */\n      jump\t// in\n    tag_86:\n        /* \"StakingRewards.sol\":1686:1707  rewardsPerTokenStored */\n      0x05\n        /* \"StakingRewards.sol\":1686:1727  rewardsPerTokenStored = rewardsPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":1749:1780  _min(block.timestamp, finishAt) */\n      tag_87\n        /* \"StakingRewards.sol\":1754:1769  block.timestamp */\n      timestamp\n        /* \"StakingRewards.sol\":1771:1779  finishAt */\n      sload(0x03)\n        /* \"StakingRewards.sol\":1749:1753  _min */\n      tag_88\n        /* \"StakingRewards.sol\":1749:1780  _min(block.timestamp, finishAt) */\n      jump\t// in\n    tag_87:\n        /* \"StakingRewards.sol\":1738:1746  updateAt */\n      0x02\n        /* \"StakingRewards.sol\":1738:1780  updateAt = _min(block.timestamp, finishAt) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":1814:1815  0 */\n      0x00\n        /* \"StakingRewards.sol\":1794:1816  _account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"StakingRewards.sol\":1794:1802  _account */\n      dup2\n        /* \"StakingRewards.sol\":1794:1816  _account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"StakingRewards.sol\":1791:1956  if(_account != address(0)){... */\n      tag_89\n      jumpi\n        /* \"StakingRewards.sol\":1856:1872  earned(_account) */\n      tag_90\n        /* \"StakingRewards.sol\":1863:1871  _account */\n      dup2\n        /* \"StakingRewards.sol\":1856:1862  earned */\n      tag_25\n        /* \"StakingRewards.sol\":1856:1872  earned(_account) */\n      jump\t// in\n    tag_90:\n        /* \"StakingRewards.sol\":1832:1843  userRewards */\n      0x07\n        /* \"StakingRewards.sol\":1832:1853  userRewards[_account] */\n      0x00\n        /* \"StakingRewards.sol\":1844:1852  _account */\n      dup4\n        /* \"StakingRewards.sol\":1832:1853  userRewards[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"StakingRewards.sol\":1832:1872  userRewards[_account] = earned(_account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":1923:1944  rewardsPerTokenStored */\n      sload(0x05)\n        /* \"StakingRewards.sol\":1887:1910  userRewardsPerTokenPaid */\n      0x06\n        /* \"StakingRewards.sol\":1887:1920  userRewardsPerTokenPaid[_account] */\n      0x00\n        /* \"StakingRewards.sol\":1911:1919  _account */\n      dup4\n        /* \"StakingRewards.sol\":1887:1920  userRewardsPerTokenPaid[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"StakingRewards.sol\":1887:1944  userRewardsPerTokenPaid[_account] = rewardsPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":1791:1956  if(_account != address(0)){... */\n    tag_89:\n        /* \"StakingRewards.sol\":7315:7327  uint rewards */\n      0x00\n        /* \"StakingRewards.sol\":7330:7341  userRewards */\n      0x07\n        /* \"StakingRewards.sol\":7330:7353  userRewards[msg.sender] */\n      0x00\n        /* \"StakingRewards.sol\":7342:7352  msg.sender */\n      caller\n        /* \"StakingRewards.sol\":7330:7353  userRewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"StakingRewards.sol\":7315:7353  uint rewards = userRewards[msg.sender] */\n      swap1\n      pop\n        /* \"StakingRewards.sol\":7377:7378  0 */\n      0x00\n        /* \"StakingRewards.sol\":7367:7374  rewards */\n      dup2\n        /* \"StakingRewards.sol\":7367:7378  rewards > 0 */\n      gt\n        /* \"StakingRewards.sol\":7364:7490  if(rewards > 0){... */\n      iszero\n      tag_92\n      jumpi\n        /* \"StakingRewards.sol\":7394:7406  rewardsToken */\n      immutable(\"0x03065c56175bab9d6c02682cec557b5c933cd8364ccf2dd44ab76e0c260931e7\")\n        /* \"StakingRewards.sol\":7394:7415  rewardsToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"StakingRewards.sol\":7416:7426  msg.sender */\n      caller\n        /* \"StakingRewards.sol\":7428:7435  rewards */\n      dup4\n        /* \"StakingRewards.sol\":7394:7436  rewardsToken.transfer(msg.sender, rewards) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap3\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_96\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      pop\n        /* \"StakingRewards.sol\":7477:7478  0 */\n      0x00\n        /* \"StakingRewards.sol\":7451:7462  userRewards */\n      0x07\n        /* \"StakingRewards.sol\":7451:7474  userRewards[msg.sender] */\n      0x00\n        /* \"StakingRewards.sol\":7463:7473  msg.sender */\n      caller\n        /* \"StakingRewards.sol\":7451:7474  userRewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"StakingRewards.sol\":7451:7478  userRewards[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":7364:7490  if(rewards > 0){... */\n    tag_92:\n        /* \"StakingRewards.sol\":7304:7499  {... */\n      pop\n        /* \"StakingRewards.sol\":7248:7499  function getRewards() external updateRewards(msg.sender){... */\n      pop\n      jump\t// out\n        /* \"StakingRewards.sol\":403:423  uint public duration */\n    tag_31:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"StakingRewards.sol\":5671:6213  function withdraw(uint _amount) external updateRewards(msg.sender) {... */\n    tag_36:\n        /* \"StakingRewards.sol\":5726:5736  msg.sender */\n      caller\n        /* \"StakingRewards.sol\":1710:1727  rewardsPerToken() */\n      tag_100\n        /* \"StakingRewards.sol\":1710:1725  rewardsPerToken */\n      tag_50\n        /* \"StakingRewards.sol\":1710:1727  rewardsPerToken() */\n      jump\t// in\n    tag_100:\n        /* \"StakingRewards.sol\":1686:1707  rewardsPerTokenStored */\n      0x05\n        /* \"StakingRewards.sol\":1686:1727  rewardsPerTokenStored = rewardsPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":1749:1780  _min(block.timestamp, finishAt) */\n      tag_101\n        /* \"StakingRewards.sol\":1754:1769  block.timestamp */\n      timestamp\n        /* \"StakingRewards.sol\":1771:1779  finishAt */\n      sload(0x03)\n        /* \"StakingRewards.sol\":1749:1753  _min */\n      tag_88\n        /* \"StakingRewards.sol\":1749:1780  _min(block.timestamp, finishAt) */\n      jump\t// in\n    tag_101:\n        /* \"StakingRewards.sol\":1738:1746  updateAt */\n      0x02\n        /* \"StakingRewards.sol\":1738:1780  updateAt = _min(block.timestamp, finishAt) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":1814:1815  0 */\n      0x00\n        /* \"StakingRewards.sol\":1794:1816  _account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"StakingRewards.sol\":1794:1802  _account */\n      dup2\n        /* \"StakingRewards.sol\":1794:1816  _account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"StakingRewards.sol\":1791:1956  if(_account != address(0)){... */\n      tag_102\n      jumpi\n        /* \"StakingRewards.sol\":1856:1872  earned(_account) */\n      tag_103\n        /* \"StakingRewards.sol\":1863:1871  _account */\n      dup2\n        /* \"StakingRewards.sol\":1856:1862  earned */\n      tag_25\n        /* \"StakingRewards.sol\":1856:1872  earned(_account) */\n      jump\t// in\n    tag_103:\n        /* \"StakingRewards.sol\":1832:1843  userRewards */\n      0x07\n        /* \"StakingRewards.sol\":1832:1853  userRewards[_account] */\n      0x00\n        /* \"StakingRewards.sol\":1844:1852  _account */\n      dup4\n        /* \"StakingRewards.sol\":1832:1853  userRewards[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"StakingRewards.sol\":1832:1872  userRewards[_account] = earned(_account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":1923:1944  rewardsPerTokenStored */\n      sload(0x05)\n        /* \"StakingRewards.sol\":1887:1910  userRewardsPerTokenPaid */\n      0x06\n        /* \"StakingRewards.sol\":1887:1920  userRewardsPerTokenPaid[_account] */\n      0x00\n        /* \"StakingRewards.sol\":1911:1919  _account */\n      dup4\n        /* \"StakingRewards.sol\":1887:1920  userRewardsPerTokenPaid[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"StakingRewards.sol\":1887:1944  userRewardsPerTokenPaid[_account] = rewardsPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":1791:1956  if(_account != address(0)){... */\n    tag_102:\n        /* \"StakingRewards.sol\":6039:6040  0 */\n      0x00\n        /* \"StakingRewards.sol\":6029:6036  _amount */\n      dup3\n        /* \"StakingRewards.sol\":6029:6040  _amount > 0 */\n      gt\n        /* \"StakingRewards.sol\":6021:6055  require(_amount > 0, \"amount = 0\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"StakingRewards.sol\":6099:6106  _amount */\n      dup2\n        /* \"StakingRewards.sol\":6066:6083  userStakingTokens */\n      0x08\n        /* \"StakingRewards.sol\":6066:6095  userStakingTokens[msg.sender] */\n      0x00\n        /* \"StakingRewards.sol\":6084:6094  msg.sender */\n      caller\n        /* \"StakingRewards.sol\":6066:6095  userStakingTokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"StakingRewards.sol\":6066:6106  userStakingTokens[msg.sender] -= _amount */\n      dup3\n      dup3\n      sload\n      tag_108\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_108:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":6145:6152  _amount */\n      dup2\n        /* \"StakingRewards.sol\":6117:6141  stakingTokensTotalSupply */\n      0x00\n      dup1\n        /* \"StakingRewards.sol\":6117:6152  stakingTokensTotalSupply -= _amount */\n      dup3\n      dup3\n      sload\n      tag_109\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_109:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":6163:6175  stakingToken */\n      immutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n        /* \"StakingRewards.sol\":6163:6184  stakingToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"StakingRewards.sol\":6185:6195  msg.sender */\n      caller\n        /* \"StakingRewards.sol\":6197:6204  _amount */\n      dup5\n        /* \"StakingRewards.sol\":6163:6205  stakingToken.transfer(msg.sender, _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap3\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_110:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_112\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_112:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_113:\n      pop\n        /* \"StakingRewards.sol\":5671:6213  function withdraw(uint _amount) external updateRewards(msg.sender) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"StakingRewards.sol\":667:700  uint public rewardsPerTokenStored */\n    tag_38:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"StakingRewards.sol\":316:352  uint public stakingTokensTotalSupply */\n    tag_41:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"StakingRewards.sol\":600:623  uint public rewardsRate */\n    tag_44:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"StakingRewards.sol\":531:551  uint public finishAt */\n    tag_47:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"StakingRewards.sol\":6331:6711  function rewardsPerToken() public view returns(uint){... */\n    tag_50:\n        /* \"StakingRewards.sol\":6378:6382  uint */\n      0x00\n        /* \"StakingRewards.sol\":6425:6426  0 */\n      dup1\n        /* \"StakingRewards.sol\":6397:6421  stakingTokensTotalSupply */\n      sload(0x00)\n        /* \"StakingRewards.sol\":6397:6426  stakingTokensTotalSupply == 0 */\n      sub\n        /* \"StakingRewards.sol\":6394:6485  if(stakingTokensTotalSupply == 0){... */\n      tag_115\n      jumpi\n        /* \"StakingRewards.sol\":6449:6473  stakingTokensTotalSupply */\n      sload(0x00)\n        /* \"StakingRewards.sol\":6442:6473  return stakingTokensTotalSupply */\n      swap1\n      pop\n      jump(tag_114)\n        /* \"StakingRewards.sol\":6394:6485  if(stakingTokensTotalSupply == 0){... */\n    tag_115:\n        /* \"StakingRewards.sol\":6688:6692  1e18 */\n      0x0de0b6b3a7640000\n        /* \"StakingRewards.sol\":6661:6685  stakingTokensTotalSupply */\n      sload(0x00)\n        /* \"StakingRewards.sol\":6649:6657  updateAt */\n      sload(0x02)\n        /* \"StakingRewards.sol\":6615:6646  _min(finishAt, block.timestamp) */\n      tag_116\n        /* \"StakingRewards.sol\":6620:6628  finishAt */\n      sload(0x03)\n        /* \"StakingRewards.sol\":6630:6645  block.timestamp */\n      timestamp\n        /* \"StakingRewards.sol\":6615:6619  _min */\n      tag_88\n        /* \"StakingRewards.sol\":6615:6646  _min(finishAt, block.timestamp) */\n      jump\t// in\n    tag_116:\n        /* \"StakingRewards.sol\":6615:6657  _min(finishAt, block.timestamp) - updateAt */\n      tag_117\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_117:\n        /* \"StakingRewards.sol\":6600:6611  rewardsRate */\n      sload(0x04)\n        /* \"StakingRewards.sol\":6600:6658  rewardsRate * (_min(finishAt, block.timestamp) - updateAt) */\n      tag_118\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_118:\n        /* \"StakingRewards.sol\":6600:6685  rewardsRate * (_min(finishAt, block.timestamp) - updateAt) / stakingTokensTotalSupply */\n      tag_119\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_119:\n        /* \"StakingRewards.sol\":6600:6692  rewardsRate * (_min(finishAt, block.timestamp) - updateAt) / stakingTokensTotalSupply * 1e18 */\n      tag_120\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_120:\n        /* \"StakingRewards.sol\":6575:6596  rewardsPerTokenStored */\n      sload(0x05)\n        /* \"StakingRewards.sol\":6575:6693  rewardsPerTokenStored + (rewardsRate * (_min(finishAt, block.timestamp) - updateAt) / stakingTokensTotalSupply * 1e18) */\n      tag_121\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_121:\n        /* \"StakingRewards.sol\":6568:6693  return rewardsPerTokenStored + (rewardsRate * (_min(finishAt, block.timestamp) - updateAt) / stakingTokensTotalSupply * 1e18) */\n      swap1\n      pop\n        /* \"StakingRewards.sol\":6331:6711  function rewardsPerToken() public view returns(uint){... */\n    tag_114:\n      swap1\n      jump\t// out\n        /* \"StakingRewards.sol\":144:180  IERC20 public immutable stakingToken */\n    tag_53:\n      immutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n      dup2\n      jump\t// out\n        /* \"StakingRewards.sol\":232:262  address public immutable owner */\n    tag_57:\n      immutable(\"0xa22b5bddbdcd05368321bd50fd5db7d428b6ca478a3c7389901149e4e0253710\")\n      dup2\n      jump\t// out\n        /* \"StakingRewards.sol\":5034:5624  function stake(uint _amount) external updateRewards(msg.sender){... */\n    tag_62:\n        /* \"StakingRewards.sol\":5086:5096  msg.sender */\n      caller\n        /* \"StakingRewards.sol\":1710:1727  rewardsPerToken() */\n      tag_123\n        /* \"StakingRewards.sol\":1710:1725  rewardsPerToken */\n      tag_50\n        /* \"StakingRewards.sol\":1710:1727  rewardsPerToken() */\n      jump\t// in\n    tag_123:\n        /* \"StakingRewards.sol\":1686:1707  rewardsPerTokenStored */\n      0x05\n        /* \"StakingRewards.sol\":1686:1727  rewardsPerTokenStored = rewardsPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":1749:1780  _min(block.timestamp, finishAt) */\n      tag_124\n        /* \"StakingRewards.sol\":1754:1769  block.timestamp */\n      timestamp\n        /* \"StakingRewards.sol\":1771:1779  finishAt */\n      sload(0x03)\n        /* \"StakingRewards.sol\":1749:1753  _min */\n      tag_88\n        /* \"StakingRewards.sol\":1749:1780  _min(block.timestamp, finishAt) */\n      jump\t// in\n    tag_124:\n        /* \"StakingRewards.sol\":1738:1746  updateAt */\n      0x02\n        /* \"StakingRewards.sol\":1738:1780  updateAt = _min(block.timestamp, finishAt) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":1814:1815  0 */\n      0x00\n        /* \"StakingRewards.sol\":1794:1816  _account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"StakingRewards.sol\":1794:1802  _account */\n      dup2\n        /* \"StakingRewards.sol\":1794:1816  _account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"StakingRewards.sol\":1791:1956  if(_account != address(0)){... */\n      tag_125\n      jumpi\n        /* \"StakingRewards.sol\":1856:1872  earned(_account) */\n      tag_126\n        /* \"StakingRewards.sol\":1863:1871  _account */\n      dup2\n        /* \"StakingRewards.sol\":1856:1862  earned */\n      tag_25\n        /* \"StakingRewards.sol\":1856:1872  earned(_account) */\n      jump\t// in\n    tag_126:\n        /* \"StakingRewards.sol\":1832:1843  userRewards */\n      0x07\n        /* \"StakingRewards.sol\":1832:1853  userRewards[_account] */\n      0x00\n        /* \"StakingRewards.sol\":1844:1852  _account */\n      dup4\n        /* \"StakingRewards.sol\":1832:1853  userRewards[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"StakingRewards.sol\":1832:1872  userRewards[_account] = earned(_account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":1923:1944  rewardsPerTokenStored */\n      sload(0x05)\n        /* \"StakingRewards.sol\":1887:1910  userRewardsPerTokenPaid */\n      0x06\n        /* \"StakingRewards.sol\":1887:1920  userRewardsPerTokenPaid[_account] */\n      0x00\n        /* \"StakingRewards.sol\":1911:1919  _account */\n      dup4\n        /* \"StakingRewards.sol\":1887:1920  userRewardsPerTokenPaid[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"StakingRewards.sol\":1887:1944  userRewardsPerTokenPaid[_account] = rewardsPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":1791:1956  if(_account != address(0)){... */\n    tag_125:\n        /* \"StakingRewards.sol\":5431:5432  0 */\n      0x00\n        /* \"StakingRewards.sol\":5421:5428  _amount */\n      dup3\n        /* \"StakingRewards.sol\":5421:5432  _amount > 0 */\n      gt\n        /* \"StakingRewards.sol\":5413:5447  require(_amount > 0, \"amount = 0\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_107\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n        /* \"StakingRewards.sol\":5458:5470  stakingToken */\n      immutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n        /* \"StakingRewards.sol\":5458:5483  stakingToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"StakingRewards.sol\":5484:5494  msg.sender */\n      caller\n        /* \"StakingRewards.sol\":5504:5508  this */\n      address\n        /* \"StakingRewards.sol\":5511:5518  _amount */\n      dup6\n        /* \"StakingRewards.sol\":5458:5519  stakingToken.transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_133\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_133:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_134\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_134:\n      pop\n        /* \"StakingRewards.sol\":5563:5570  _amount */\n      dup2\n        /* \"StakingRewards.sol\":5530:5547  userStakingTokens */\n      0x08\n        /* \"StakingRewards.sol\":5530:5559  userStakingTokens[msg.sender] */\n      0x00\n        /* \"StakingRewards.sol\":5548:5558  msg.sender */\n      caller\n        /* \"StakingRewards.sol\":5530:5559  userStakingTokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"StakingRewards.sol\":5530:5570  userStakingTokens[msg.sender] += _amount */\n      dup3\n      dup3\n      sload\n      tag_135\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_135:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":5609:5616  _amount */\n      dup2\n        /* \"StakingRewards.sol\":5581:5605  stakingTokensTotalSupply */\n      0x00\n      dup1\n        /* \"StakingRewards.sol\":5581:5616  stakingTokensTotalSupply += _amount */\n      dup3\n      dup3\n      sload\n      tag_136\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_136:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":5034:5624  function stake(uint _amount) external updateRewards(msg.sender){... */\n      pop\n      pop\n      jump\t// out\n        /* \"StakingRewards.sol\":2403:4998  function setRewards(uint _rewordsAmount) external OnlyOwner updateRewards(address(0)){... */\n    tag_65:\n        /* \"StakingRewards.sol\":1433:1443  msg.sender */\n      caller\n        /* \"StakingRewards.sol\":1424:1443  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"StakingRewards.sol\":1424:1429  owner */\n      immutable(\"0xa22b5bddbdcd05368321bd50fd5db7d428b6ca478a3c7389901149e4e0253710\")\n        /* \"StakingRewards.sol\":1424:1443  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"StakingRewards.sol\":1416:1470  require(owner == msg.sender, \"Only owner is allowed.\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n        /* \"StakingRewards.sol\":2485:2486  0 */\n      0x00\n        /* \"StakingRewards.sol\":1710:1727  rewardsPerToken() */\n      tag_142\n        /* \"StakingRewards.sol\":1710:1725  rewardsPerToken */\n      tag_50\n        /* \"StakingRewards.sol\":1710:1727  rewardsPerToken() */\n      jump\t// in\n    tag_142:\n        /* \"StakingRewards.sol\":1686:1707  rewardsPerTokenStored */\n      0x05\n        /* \"StakingRewards.sol\":1686:1727  rewardsPerTokenStored = rewardsPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":1749:1780  _min(block.timestamp, finishAt) */\n      tag_143\n        /* \"StakingRewards.sol\":1754:1769  block.timestamp */\n      timestamp\n        /* \"StakingRewards.sol\":1771:1779  finishAt */\n      sload(0x03)\n        /* \"StakingRewards.sol\":1749:1753  _min */\n      tag_88\n        /* \"StakingRewards.sol\":1749:1780  _min(block.timestamp, finishAt) */\n      jump\t// in\n    tag_143:\n        /* \"StakingRewards.sol\":1738:1746  updateAt */\n      0x02\n        /* \"StakingRewards.sol\":1738:1780  updateAt = _min(block.timestamp, finishAt) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":1814:1815  0 */\n      0x00\n        /* \"StakingRewards.sol\":1794:1816  _account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"StakingRewards.sol\":1794:1802  _account */\n      dup2\n        /* \"StakingRewards.sol\":1794:1816  _account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"StakingRewards.sol\":1791:1956  if(_account != address(0)){... */\n      tag_144\n      jumpi\n        /* \"StakingRewards.sol\":1856:1872  earned(_account) */\n      tag_145\n        /* \"StakingRewards.sol\":1863:1871  _account */\n      dup2\n        /* \"StakingRewards.sol\":1856:1862  earned */\n      tag_25\n        /* \"StakingRewards.sol\":1856:1872  earned(_account) */\n      jump\t// in\n    tag_145:\n        /* \"StakingRewards.sol\":1832:1843  userRewards */\n      0x07\n        /* \"StakingRewards.sol\":1832:1853  userRewards[_account] */\n      0x00\n        /* \"StakingRewards.sol\":1844:1852  _account */\n      dup4\n        /* \"StakingRewards.sol\":1832:1853  userRewards[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"StakingRewards.sol\":1832:1872  userRewards[_account] = earned(_account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":1923:1944  rewardsPerTokenStored */\n      sload(0x05)\n        /* \"StakingRewards.sol\":1887:1910  userRewardsPerTokenPaid */\n      0x06\n        /* \"StakingRewards.sol\":1887:1920  userRewardsPerTokenPaid[_account] */\n      0x00\n        /* \"StakingRewards.sol\":1911:1919  _account */\n      dup4\n        /* \"StakingRewards.sol\":1887:1920  userRewardsPerTokenPaid[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"StakingRewards.sol\":1887:1944  userRewardsPerTokenPaid[_account] = rewardsPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":1791:1956  if(_account != address(0)){... */\n    tag_144:\n        /* \"StakingRewards.sol\":2552:2568  uint newDuration */\n      0x00\n        /* \"StakingRewards.sol\":2571:2579  duration */\n      sload(0x01)\n        /* \"StakingRewards.sol\":2552:2579  uint newDuration = duration */\n      swap1\n      pop\n        /* \"StakingRewards.sol\":2613:2614  0 */\n      0x00\n        /* \"StakingRewards.sol\":2598:2609  newDuration */\n      dup2\n        /* \"StakingRewards.sol\":2598:2614  newDuration != 0 */\n      sub\n        /* \"StakingRewards.sol\":2590:2654  require(newDuration != 0, \"setRewards: set the duration first.\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"StakingRewards.sol\":2690:2691  0 */\n      0x00\n        /* \"StakingRewards.sol\":2673:2687  _rewordsAmount */\n      dup4\n        /* \"StakingRewards.sol\":2673:2691  _rewordsAmount > 0 */\n      gt\n        /* \"StakingRewards.sol\":2665:2726  require(_rewordsAmount > 0, \"setRewards: rewords amount = 0\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n        /* \"StakingRewards.sol\":2790:2802  rewardsToken */\n      immutable(\"0x03065c56175bab9d6c02682cec557b5c933cd8364ccf2dd44ab76e0c260931e7\")\n        /* \"StakingRewards.sol\":2790:2815  rewardsToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"StakingRewards.sol\":2816:2821  owner */\n      immutable(\"0xa22b5bddbdcd05368321bd50fd5db7d428b6ca478a3c7389901149e4e0253710\")\n        /* \"StakingRewards.sol\":2831:2835  this */\n      address\n        /* \"StakingRewards.sol\":2838:2852  _rewordsAmount */\n      dup7\n        /* \"StakingRewards.sol\":2790:2853  rewardsToken.transferFrom(owner, address(this), _rewordsAmount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_153:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_155\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_155:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_156\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_156:\n      pop\n        /* \"StakingRewards.sol\":2864:2885  uint balanceOfRewards */\n      0x00\n        /* \"StakingRewards.sol\":2888:2900  rewardsToken */\n      immutable(\"0x03065c56175bab9d6c02682cec557b5c933cd8364ccf2dd44ab76e0c260931e7\")\n        /* \"StakingRewards.sol\":2888:2910  rewardsToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"StakingRewards.sol\":2919:2923  this */\n      address\n        /* \"StakingRewards.sol\":2888:2925  rewardsToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_157:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_159\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_159:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_160\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n        /* \"StakingRewards.sol\":2864:2925  uint balanceOfRewards = rewardsToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"StakingRewards.sol\":2986:2998  uint nowtime */\n      0x00\n        /* \"StakingRewards.sol\":3001:3016  block.timestamp */\n      timestamp\n        /* \"StakingRewards.sol\":2986:3016  uint nowtime = block.timestamp */\n      swap1\n      pop\n        /* \"StakingRewards.sol\":3027:3042  uint finishTime */\n      0x00\n        /* \"StakingRewards.sol\":3045:3053  finishAt */\n      sload(0x03)\n        /* \"StakingRewards.sol\":3027:3053  uint finishTime = finishAt */\n      swap1\n      pop\n        /* \"StakingRewards.sol\":3079:3089  finishTime */\n      dup1\n        /* \"StakingRewards.sol\":3068:3075  nowtime */\n      dup3\n        /* \"StakingRewards.sol\":3068:3089  nowtime >= finishTime */\n      lt\n        /* \"StakingRewards.sol\":3064:3982  if (nowtime >= finishTime){... */\n      tag_162\n      jumpi\n        /* \"StakingRewards.sol\":3136:3147  newDuration */\n      dup4\n        /* \"StakingRewards.sol\":3119:3133  _rewordsAmount */\n      dup7\n        /* \"StakingRewards.sol\":3119:3147  _rewordsAmount / newDuration */\n      tag_163\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_163:\n        /* \"StakingRewards.sol\":3105:3116  rewardsRate */\n      0x04\n        /* \"StakingRewards.sol\":3105:3147  rewardsRate = _rewordsAmount / newDuration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":3064:3982  if (nowtime >= finishTime){... */\n      jump(tag_164)\n    tag_162:\n        /* \"StakingRewards.sol\":3781:3792  newDuration */\n      dup4\n        /* \"StakingRewards.sol\":3762:3776  _rewordsAmount */\n      dup7\n        /* \"StakingRewards.sol\":3750:3757  nowtime */\n      dup4\n        /* \"StakingRewards.sol\":3737:3747  finishTime */\n      dup4\n        /* \"StakingRewards.sol\":3737:3757  finishTime - nowtime */\n      tag_165\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_165:\n        /* \"StakingRewards.sol\":3722:3733  rewardsRate */\n      sload(0x04)\n        /* \"StakingRewards.sol\":3722:3758  rewardsRate * (finishTime - nowtime) */\n      tag_166\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_166:\n        /* \"StakingRewards.sol\":3722:3776  rewardsRate * (finishTime - nowtime) +  _rewordsAmount */\n      tag_167\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_167:\n        /* \"StakingRewards.sol\":3721:3792  (rewardsRate * (finishTime - nowtime) +  _rewordsAmount ) / newDuration */\n      tag_168\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_168:\n        /* \"StakingRewards.sol\":3707:3718  rewardsRate */\n      0x04\n        /* \"StakingRewards.sol\":3707:3792  rewardsRate = (rewardsRate * (finishTime - nowtime) +  _rewordsAmount ) / newDuration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":3064:3982  if (nowtime >= finishTime){... */\n    tag_164:\n        /* \"StakingRewards.sol\":4014:4015  0 */\n      0x00\n        /* \"StakingRewards.sol\":4000:4011  rewardsRate */\n      sload(0x04)\n        /* \"StakingRewards.sol\":4000:4015  rewardsRate > 0 */\n      gt\n        /* \"StakingRewards.sol\":3992:4047  require(rewardsRate > 0, \"setRewards: reword rate = 0\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_169:\n        /* \"StakingRewards.sol\":4148:4164  balanceOfRewards */\n      dup3\n        /* \"StakingRewards.sol\":4133:4144  newDuration */\n      dup5\n        /* \"StakingRewards.sol\":4119:4130  rewardsRate */\n      sload(0x04)\n        /* \"StakingRewards.sol\":4119:4144  rewardsRate * newDuration */\n      tag_172\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_172:\n        /* \"StakingRewards.sol\":4119:4164  rewardsRate * newDuration <= balanceOfRewards */\n      gt\n      iszero\n        /* \"StakingRewards.sol\":4111:4198  require(rewardsRate * newDuration <= balanceOfRewards, \"setRewards: rewards < balance\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_173:\n        /* \"StakingRewards.sol\":4749:4757  duration */\n      sload(0x01)\n        /* \"StakingRewards.sol\":4739:4746  nowtime */\n      dup3\n        /* \"StakingRewards.sol\":4739:4757  nowtime + duration */\n      tag_176\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_176:\n        /* \"StakingRewards.sol\":4726:4757  finishTime = nowtime + duration */\n      swap1\n      pop\n        /* \"StakingRewards.sol\":4807:4817  finishTime */\n      dup1\n        /* \"StakingRewards.sol\":4796:4804  finishAt */\n      0x03\n        /* \"StakingRewards.sol\":4796:4817  finishAt = finishTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":4839:4846  nowtime */\n      dup2\n        /* \"StakingRewards.sol\":4828:4836  updateAt */\n      0x02\n        /* \"StakingRewards.sol\":4828:4846  updateAt = nowtime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":2488:4998  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"StakingRewards.sol\":1481:1482  _ */\n      pop\n        /* \"StakingRewards.sol\":2403:4998  function setRewards(uint _rewordsAmount) external OnlyOwner updateRewards(address(0)){... */\n      pop\n      jump\t// out\n        /* \"StakingRewards.sol\":456:476  uint public updateAt */\n    tag_67:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"StakingRewards.sol\":187:223  IERC20 public immutable rewardsToken */\n    tag_70:\n      immutable(\"0x03065c56175bab9d6c02682cec557b5c933cd8364ccf2dd44ab76e0c260931e7\")\n      dup2\n      jump\t// out\n        /* \"StakingRewards.sol\":2089:2202  function setDuration(uint _duration) external OnlyOwner NotDuringRewarding{... */\n    tag_74:\n        /* \"StakingRewards.sol\":1433:1443  msg.sender */\n      caller\n        /* \"StakingRewards.sol\":1424:1443  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"StakingRewards.sol\":1424:1429  owner */\n      immutable(\"0xa22b5bddbdcd05368321bd50fd5db7d428b6ca478a3c7389901149e4e0253710\")\n        /* \"StakingRewards.sol\":1424:1443  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"StakingRewards.sol\":1416:1470  require(owner == msg.sender, \"Only owner is allowed.\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_140\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"StakingRewards.sol\":1563:1571  finishAt */\n      sload(0x03)\n        /* \"StakingRewards.sol\":1544:1559  block.timestamp */\n      timestamp\n        /* \"StakingRewards.sol\":1544:1571  block.timestamp >= finishAt */\n      lt\n      iszero\n        /* \"StakingRewards.sol\":1536:1609  require(block.timestamp >= finishAt, \" it can't be set during rewarding\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n        /* \"StakingRewards.sol\":2185:2194  _duration */\n      dup1\n        /* \"StakingRewards.sol\":2174:2182  duration */\n      0x01\n        /* \"StakingRewards.sol\":2174:2194  duration = _duration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingRewards.sol\":2089:2202  function setDuration(uint _duration) external OnlyOwner NotDuringRewarding{... */\n      pop\n      jump\t// out\n        /* \"StakingRewards.sol\":6221:6325  function _min(uint x, uint y) private pure returns(uint z){... */\n    tag_88:\n        /* \"StakingRewards.sol\":6272:6278  uint z */\n      0x00\n        /* \"StakingRewards.sol\":6307:6308  y */\n      dup2\n        /* \"StakingRewards.sol\":6302:6303  x */\n      dup4\n        /* \"StakingRewards.sol\":6302:6308  x <= y */\n      gt\n      iszero\n        /* \"StakingRewards.sol\":6301:6317  (x <= y) ? x : y */\n      tag_186\n      jumpi\n        /* \"StakingRewards.sol\":6316:6317  y */\n      dup2\n        /* \"StakingRewards.sol\":6301:6317  (x <= y) ? x : y */\n      jump(tag_187)\n    tag_186:\n        /* \"StakingRewards.sol\":6312:6313  x */\n      dup3\n        /* \"StakingRewards.sol\":6301:6317  (x <= y) ? x : y */\n    tag_187:\n        /* \"StakingRewards.sol\":6297:6317  z = (x <= y) ? x : y */\n      swap1\n      pop\n        /* \"StakingRewards.sol\":6221:6325  function _min(uint x, uint y) private pure returns(uint z){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_189:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_191:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_192:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_232\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_191\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_193:\n        /* \"#utility.yul\":641:665   */\n      tag_234\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_192\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_235\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_235:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_194:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_237\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_193\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_24:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_240\n      tag_189\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":917:1036   */\n    tag_239:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_241\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_194\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_195:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_196:\n        /* \"#utility.yul\":1346:1370   */\n      tag_244\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_195\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_27:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_246\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_196\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_197:\n        /* \"#utility.yul\":1684:1708   */\n      tag_248\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_195\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_249\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_249:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_198:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_251\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_197\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2213   */\n    tag_35:\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":1980:1989   */\n      dup3\n        /* \"#utility.yul\":1971:1978   */\n      dup5\n        /* \"#utility.yul\":1967:1990   */\n      sub\n        /* \"#utility.yul\":1963:1995   */\n      slt\n        /* \"#utility.yul\":1960:2079   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":1998:2077   */\n      tag_254\n      tag_189\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":1960:2079   */\n    tag_253:\n        /* \"#utility.yul\":2118:2119   */\n      0x00\n        /* \"#utility.yul\":2143:2196   */\n      tag_255\n        /* \"#utility.yul\":2188:2195   */\n      dup5\n        /* \"#utility.yul\":2179:2185   */\n      dup3\n        /* \"#utility.yul\":2168:2177   */\n      dup6\n        /* \"#utility.yul\":2164:2186   */\n      add\n        /* \"#utility.yul\":2143:2196   */\n      tag_198\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":2133:2196   */\n      swap2\n      pop\n        /* \"#utility.yul\":2089:2206   */\n      pop\n        /* \"#utility.yul\":1884:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2279   */\n    tag_199:\n        /* \"#utility.yul\":2247:2250   */\n      0x00\n        /* \"#utility.yul\":2268:2273   */\n      dup2\n        /* \"#utility.yul\":2261:2273   */\n      swap1\n      pop\n        /* \"#utility.yul\":2219:2279   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2285:2427   */\n    tag_200:\n        /* \"#utility.yul\":2335:2344   */\n      0x00\n        /* \"#utility.yul\":2368:2421   */\n      tag_258\n        /* \"#utility.yul\":2386:2420   */\n      tag_259\n        /* \"#utility.yul\":2395:2419   */\n      tag_260\n        /* \"#utility.yul\":2413:2418   */\n      dup5\n        /* \"#utility.yul\":2395:2419   */\n      tag_191\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":2386:2420   */\n      tag_199\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":2368:2421   */\n      tag_191\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":2355:2421   */\n      swap1\n      pop\n        /* \"#utility.yul\":2285:2427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2433:2559   */\n    tag_201:\n        /* \"#utility.yul\":2483:2492   */\n      0x00\n        /* \"#utility.yul\":2516:2553   */\n      tag_262\n        /* \"#utility.yul\":2547:2552   */\n      dup3\n        /* \"#utility.yul\":2516:2553   */\n      tag_200\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":2503:2553   */\n      swap1\n      pop\n        /* \"#utility.yul\":2433:2559   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2565:2705   */\n    tag_202:\n        /* \"#utility.yul\":2629:2638   */\n      0x00\n        /* \"#utility.yul\":2662:2699   */\n      tag_264\n        /* \"#utility.yul\":2693:2698   */\n      dup3\n        /* \"#utility.yul\":2662:2699   */\n      tag_201\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":2649:2699   */\n      swap1\n      pop\n        /* \"#utility.yul\":2565:2705   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2711:2870   */\n    tag_203:\n        /* \"#utility.yul\":2812:2863   */\n      tag_266\n        /* \"#utility.yul\":2857:2862   */\n      dup2\n        /* \"#utility.yul\":2812:2863   */\n      tag_202\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":2807:2810   */\n      dup3\n        /* \"#utility.yul\":2800:2864   */\n      mstore\n        /* \"#utility.yul\":2711:2870   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2876:3126   */\n    tag_55:\n        /* \"#utility.yul\":2983:2987   */\n      0x00\n        /* \"#utility.yul\":3021:3023   */\n      0x20\n        /* \"#utility.yul\":3010:3019   */\n      dup3\n        /* \"#utility.yul\":3006:3024   */\n      add\n        /* \"#utility.yul\":2998:3024   */\n      swap1\n      pop\n        /* \"#utility.yul\":3034:3119   */\n      tag_268\n        /* \"#utility.yul\":3116:3117   */\n      0x00\n        /* \"#utility.yul\":3105:3114   */\n      dup4\n        /* \"#utility.yul\":3101:3118   */\n      add\n        /* \"#utility.yul\":3092:3098   */\n      dup5\n        /* \"#utility.yul\":3034:3119   */\n      tag_203\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":2876:3126   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3132:3250   */\n    tag_204:\n        /* \"#utility.yul\":3219:3243   */\n      tag_270\n        /* \"#utility.yul\":3237:3242   */\n      dup2\n        /* \"#utility.yul\":3219:3243   */\n      tag_192\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":3214:3217   */\n      dup3\n        /* \"#utility.yul\":3207:3244   */\n      mstore\n        /* \"#utility.yul\":3132:3250   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3256:3478   */\n    tag_59:\n        /* \"#utility.yul\":3349:3353   */\n      0x00\n        /* \"#utility.yul\":3387:3389   */\n      0x20\n        /* \"#utility.yul\":3376:3385   */\n      dup3\n        /* \"#utility.yul\":3372:3390   */\n      add\n        /* \"#utility.yul\":3364:3390   */\n      swap1\n      pop\n        /* \"#utility.yul\":3400:3471   */\n      tag_272\n        /* \"#utility.yul\":3468:3469   */\n      0x00\n        /* \"#utility.yul\":3457:3466   */\n      dup4\n        /* \"#utility.yul\":3453:3470   */\n      add\n        /* \"#utility.yul\":3444:3450   */\n      dup5\n        /* \"#utility.yul\":3400:3471   */\n      tag_204\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":3256:3478   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3484:3664   */\n    tag_205:\n        /* \"#utility.yul\":3532:3609   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3529:3530   */\n      0x00\n        /* \"#utility.yul\":3522:3610   */\n      mstore\n        /* \"#utility.yul\":3629:3633   */\n      0x11\n        /* \"#utility.yul\":3626:3627   */\n      0x04\n        /* \"#utility.yul\":3619:3634   */\n      mstore\n        /* \"#utility.yul\":3653:3657   */\n      0x24\n        /* \"#utility.yul\":3650:3651   */\n      0x00\n        /* \"#utility.yul\":3643:3658   */\n      revert\n        /* \"#utility.yul\":3670:3864   */\n    tag_78:\n        /* \"#utility.yul\":3710:3714   */\n      0x00\n        /* \"#utility.yul\":3730:3750   */\n      tag_275\n        /* \"#utility.yul\":3748:3749   */\n      dup3\n        /* \"#utility.yul\":3730:3750   */\n      tag_195\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":3725:3750   */\n      swap2\n      pop\n        /* \"#utility.yul\":3764:3784   */\n      tag_276\n        /* \"#utility.yul\":3782:3783   */\n      dup4\n        /* \"#utility.yul\":3764:3784   */\n      tag_195\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":3759:3784   */\n      swap3\n      pop\n        /* \"#utility.yul\":3808:3809   */\n      dup3\n        /* \"#utility.yul\":3805:3806   */\n      dup3\n        /* \"#utility.yul\":3801:3810   */\n      sub\n        /* \"#utility.yul\":3793:3810   */\n      swap1\n      pop\n        /* \"#utility.yul\":3832:3833   */\n      dup2\n        /* \"#utility.yul\":3826:3830   */\n      dup2\n        /* \"#utility.yul\":3823:3834   */\n      gt\n        /* \"#utility.yul\":3820:3857   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":3837:3855   */\n      tag_278\n      tag_205\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":3820:3857   */\n    tag_277:\n        /* \"#utility.yul\":3670:3864   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3870:4280   */\n    tag_80:\n        /* \"#utility.yul\":3910:3917   */\n      0x00\n        /* \"#utility.yul\":3933:3953   */\n      tag_280\n        /* \"#utility.yul\":3951:3952   */\n      dup3\n        /* \"#utility.yul\":3933:3953   */\n      tag_195\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":3928:3953   */\n      swap2\n      pop\n        /* \"#utility.yul\":3967:3987   */\n      tag_281\n        /* \"#utility.yul\":3985:3986   */\n      dup4\n        /* \"#utility.yul\":3967:3987   */\n      tag_195\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":3962:3987   */\n      swap3\n      pop\n        /* \"#utility.yul\":4022:4023   */\n      dup3\n        /* \"#utility.yul\":4019:4020   */\n      dup3\n        /* \"#utility.yul\":4015:4024   */\n      mul\n        /* \"#utility.yul\":4044:4074   */\n      tag_282\n        /* \"#utility.yul\":4062:4073   */\n      dup2\n        /* \"#utility.yul\":4044:4074   */\n      tag_195\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":4033:4074   */\n      swap2\n      pop\n        /* \"#utility.yul\":4223:4224   */\n      dup3\n        /* \"#utility.yul\":4214:4221   */\n      dup3\n        /* \"#utility.yul\":4210:4225   */\n      div\n        /* \"#utility.yul\":4207:4208   */\n      dup5\n        /* \"#utility.yul\":4204:4226   */\n      eq\n        /* \"#utility.yul\":4184:4185   */\n      dup4\n        /* \"#utility.yul\":4177:4186   */\n      iszero\n        /* \"#utility.yul\":4157:4240   */\n      or\n        /* \"#utility.yul\":4134:4273   */\n      tag_283\n      jumpi\n        /* \"#utility.yul\":4253:4271   */\n      tag_284\n      tag_205\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":4134:4273   */\n    tag_283:\n        /* \"#utility.yul\":3918:4280   */\n      pop\n        /* \"#utility.yul\":3870:4280   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4286:4466   */\n    tag_206:\n        /* \"#utility.yul\":4334:4411   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4331:4332   */\n      0x00\n        /* \"#utility.yul\":4324:4412   */\n      mstore\n        /* \"#utility.yul\":4431:4435   */\n      0x12\n        /* \"#utility.yul\":4428:4429   */\n      0x04\n        /* \"#utility.yul\":4421:4436   */\n      mstore\n        /* \"#utility.yul\":4455:4459   */\n      0x24\n        /* \"#utility.yul\":4452:4453   */\n      0x00\n        /* \"#utility.yul\":4445:4460   */\n      revert\n        /* \"#utility.yul\":4472:4657   */\n    tag_82:\n        /* \"#utility.yul\":4512:4513   */\n      0x00\n        /* \"#utility.yul\":4529:4549   */\n      tag_287\n        /* \"#utility.yul\":4547:4548   */\n      dup3\n        /* \"#utility.yul\":4529:4549   */\n      tag_195\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":4524:4549   */\n      swap2\n      pop\n        /* \"#utility.yul\":4563:4583   */\n      tag_288\n        /* \"#utility.yul\":4581:4582   */\n      dup4\n        /* \"#utility.yul\":4563:4583   */\n      tag_195\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":4558:4583   */\n      swap3\n      pop\n        /* \"#utility.yul\":4602:4603   */\n      dup3\n        /* \"#utility.yul\":4592:4627   */\n      tag_289\n      jumpi\n        /* \"#utility.yul\":4607:4625   */\n      tag_290\n      tag_206\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":4592:4627   */\n    tag_289:\n        /* \"#utility.yul\":4649:4650   */\n      dup3\n        /* \"#utility.yul\":4646:4647   */\n      dup3\n        /* \"#utility.yul\":4642:4651   */\n      div\n        /* \"#utility.yul\":4637:4651   */\n      swap1\n      pop\n        /* \"#utility.yul\":4472:4657   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4663:4854   */\n    tag_84:\n        /* \"#utility.yul\":4703:4706   */\n      0x00\n        /* \"#utility.yul\":4722:4742   */\n      tag_292\n        /* \"#utility.yul\":4740:4741   */\n      dup3\n        /* \"#utility.yul\":4722:4742   */\n      tag_195\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":4717:4742   */\n      swap2\n      pop\n        /* \"#utility.yul\":4756:4776   */\n      tag_293\n        /* \"#utility.yul\":4774:4775   */\n      dup4\n        /* \"#utility.yul\":4756:4776   */\n      tag_195\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":4751:4776   */\n      swap3\n      pop\n        /* \"#utility.yul\":4799:4800   */\n      dup3\n        /* \"#utility.yul\":4796:4797   */\n      dup3\n        /* \"#utility.yul\":4792:4801   */\n      add\n        /* \"#utility.yul\":4785:4801   */\n      swap1\n      pop\n        /* \"#utility.yul\":4820:4823   */\n      dup1\n        /* \"#utility.yul\":4817:4818   */\n      dup3\n        /* \"#utility.yul\":4814:4824   */\n      gt\n        /* \"#utility.yul\":4811:4847   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":4827:4845   */\n      tag_295\n      tag_205\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":4811:4847   */\n    tag_294:\n        /* \"#utility.yul\":4663:4854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4860:5192   */\n    tag_94:\n        /* \"#utility.yul\":4981:4985   */\n      0x00\n        /* \"#utility.yul\":5019:5021   */\n      0x40\n        /* \"#utility.yul\":5008:5017   */\n      dup3\n        /* \"#utility.yul\":5004:5022   */\n      add\n        /* \"#utility.yul\":4996:5022   */\n      swap1\n      pop\n        /* \"#utility.yul\":5032:5103   */\n      tag_297\n        /* \"#utility.yul\":5100:5101   */\n      0x00\n        /* \"#utility.yul\":5089:5098   */\n      dup4\n        /* \"#utility.yul\":5085:5102   */\n      add\n        /* \"#utility.yul\":5076:5082   */\n      dup6\n        /* \"#utility.yul\":5032:5103   */\n      tag_204\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":5113:5185   */\n      tag_298\n        /* \"#utility.yul\":5181:5183   */\n      0x20\n        /* \"#utility.yul\":5170:5179   */\n      dup4\n        /* \"#utility.yul\":5166:5184   */\n      add\n        /* \"#utility.yul\":5157:5163   */\n      dup5\n        /* \"#utility.yul\":5113:5185   */\n      tag_196\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":4860:5192   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5198:5288   */\n    tag_207:\n        /* \"#utility.yul\":5232:5239   */\n      0x00\n        /* \"#utility.yul\":5275:5280   */\n      dup2\n        /* \"#utility.yul\":5268:5281   */\n      iszero\n        /* \"#utility.yul\":5261:5282   */\n      iszero\n        /* \"#utility.yul\":5250:5282   */\n      swap1\n      pop\n        /* \"#utility.yul\":5198:5288   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5294:5410   */\n    tag_208:\n        /* \"#utility.yul\":5364:5385   */\n      tag_301\n        /* \"#utility.yul\":5379:5384   */\n      dup2\n        /* \"#utility.yul\":5364:5385   */\n      tag_207\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":5357:5362   */\n      dup2\n        /* \"#utility.yul\":5354:5386   */\n      eq\n        /* \"#utility.yul\":5344:5404   */\n      tag_302\n      jumpi\n        /* \"#utility.yul\":5400:5401   */\n      0x00\n        /* \"#utility.yul\":5397:5398   */\n      dup1\n        /* \"#utility.yul\":5390:5402   */\n      revert\n        /* \"#utility.yul\":5344:5404   */\n    tag_302:\n        /* \"#utility.yul\":5294:5410   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5416:5553   */\n    tag_209:\n        /* \"#utility.yul\":5470:5475   */\n      0x00\n        /* \"#utility.yul\":5501:5507   */\n      dup2\n        /* \"#utility.yul\":5495:5508   */\n      mload\n        /* \"#utility.yul\":5486:5508   */\n      swap1\n      pop\n        /* \"#utility.yul\":5517:5547   */\n      tag_304\n        /* \"#utility.yul\":5541:5546   */\n      dup2\n        /* \"#utility.yul\":5517:5547   */\n      tag_208\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":5416:5553   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5559:5904   */\n    tag_98:\n        /* \"#utility.yul\":5626:5632   */\n      0x00\n        /* \"#utility.yul\":5675:5677   */\n      0x20\n        /* \"#utility.yul\":5663:5672   */\n      dup3\n        /* \"#utility.yul\":5654:5661   */\n      dup5\n        /* \"#utility.yul\":5650:5673   */\n      sub\n        /* \"#utility.yul\":5646:5678   */\n      slt\n        /* \"#utility.yul\":5643:5762   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":5681:5760   */\n      tag_307\n      tag_189\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":5643:5762   */\n    tag_306:\n        /* \"#utility.yul\":5801:5802   */\n      0x00\n        /* \"#utility.yul\":5826:5887   */\n      tag_308\n        /* \"#utility.yul\":5879:5886   */\n      dup5\n        /* \"#utility.yul\":5870:5876   */\n      dup3\n        /* \"#utility.yul\":5859:5868   */\n      dup6\n        /* \"#utility.yul\":5855:5877   */\n      add\n        /* \"#utility.yul\":5826:5887   */\n      tag_209\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":5816:5887   */\n      swap2\n      pop\n        /* \"#utility.yul\":5772:5897   */\n      pop\n        /* \"#utility.yul\":5559:5904   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5910:6079   */\n    tag_210:\n        /* \"#utility.yul\":5994:6005   */\n      0x00\n        /* \"#utility.yul\":6028:6034   */\n      dup3\n        /* \"#utility.yul\":6023:6026   */\n      dup3\n        /* \"#utility.yul\":6016:6035   */\n      mstore\n        /* \"#utility.yul\":6068:6072   */\n      0x20\n        /* \"#utility.yul\":6063:6066   */\n      dup3\n        /* \"#utility.yul\":6059:6073   */\n      add\n        /* \"#utility.yul\":6044:6073   */\n      swap1\n      pop\n        /* \"#utility.yul\":5910:6079   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6085:6245   */\n    tag_211:\n        /* \"#utility.yul\":6225:6237   */\n      0x616d6f756e74203d203000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6221:6222   */\n      0x00\n        /* \"#utility.yul\":6213:6219   */\n      dup3\n        /* \"#utility.yul\":6209:6223   */\n      add\n        /* \"#utility.yul\":6202:6238   */\n      mstore\n        /* \"#utility.yul\":6085:6245   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6251:6617   */\n    tag_212:\n        /* \"#utility.yul\":6393:6396   */\n      0x00\n        /* \"#utility.yul\":6414:6481   */\n      tag_312\n        /* \"#utility.yul\":6478:6480   */\n      0x0a\n        /* \"#utility.yul\":6473:6476   */\n      dup4\n        /* \"#utility.yul\":6414:6481   */\n      tag_210\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":6407:6481   */\n      swap2\n      pop\n        /* \"#utility.yul\":6490:6583   */\n      tag_313\n        /* \"#utility.yul\":6579:6582   */\n      dup3\n        /* \"#utility.yul\":6490:6583   */\n      tag_211\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":6608:6610   */\n      0x20\n        /* \"#utility.yul\":6603:6606   */\n      dup3\n        /* \"#utility.yul\":6599:6611   */\n      add\n        /* \"#utility.yul\":6592:6611   */\n      swap1\n      pop\n        /* \"#utility.yul\":6251:6617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6623:7042   */\n    tag_107:\n        /* \"#utility.yul\":6789:6793   */\n      0x00\n        /* \"#utility.yul\":6827:6829   */\n      0x20\n        /* \"#utility.yul\":6816:6825   */\n      dup3\n        /* \"#utility.yul\":6812:6830   */\n      add\n        /* \"#utility.yul\":6804:6830   */\n      swap1\n      pop\n        /* \"#utility.yul\":6876:6885   */\n      dup2\n        /* \"#utility.yul\":6870:6874   */\n      dup2\n        /* \"#utility.yul\":6866:6886   */\n      sub\n        /* \"#utility.yul\":6862:6863   */\n      0x00\n        /* \"#utility.yul\":6851:6860   */\n      dup4\n        /* \"#utility.yul\":6847:6864   */\n      add\n        /* \"#utility.yul\":6840:6887   */\n      mstore\n        /* \"#utility.yul\":6904:7035   */\n      tag_315\n        /* \"#utility.yul\":7030:7034   */\n      dup2\n        /* \"#utility.yul\":6904:7035   */\n      tag_212\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":6896:7035   */\n      swap1\n      pop\n        /* \"#utility.yul\":6623:7042   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7048:7490   */\n    tag_131:\n        /* \"#utility.yul\":7197:7201   */\n      0x00\n        /* \"#utility.yul\":7235:7237   */\n      0x60\n        /* \"#utility.yul\":7224:7233   */\n      dup3\n        /* \"#utility.yul\":7220:7238   */\n      add\n        /* \"#utility.yul\":7212:7238   */\n      swap1\n      pop\n        /* \"#utility.yul\":7248:7319   */\n      tag_317\n        /* \"#utility.yul\":7316:7317   */\n      0x00\n        /* \"#utility.yul\":7305:7314   */\n      dup4\n        /* \"#utility.yul\":7301:7318   */\n      add\n        /* \"#utility.yul\":7292:7298   */\n      dup7\n        /* \"#utility.yul\":7248:7319   */\n      tag_204\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":7329:7401   */\n      tag_318\n        /* \"#utility.yul\":7397:7399   */\n      0x20\n        /* \"#utility.yul\":7386:7395   */\n      dup4\n        /* \"#utility.yul\":7382:7400   */\n      add\n        /* \"#utility.yul\":7373:7379   */\n      dup6\n        /* \"#utility.yul\":7329:7401   */\n      tag_204\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":7411:7483   */\n      tag_319\n        /* \"#utility.yul\":7479:7481   */\n      0x40\n        /* \"#utility.yul\":7468:7477   */\n      dup4\n        /* \"#utility.yul\":7464:7482   */\n      add\n        /* \"#utility.yul\":7455:7461   */\n      dup5\n        /* \"#utility.yul\":7411:7483   */\n      tag_196\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":7048:7490   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7496:7668   */\n    tag_213:\n        /* \"#utility.yul\":7636:7660   */\n      0x4f6e6c79206f776e657220697320616c6c6f7765642e00000000000000000000\n        /* \"#utility.yul\":7632:7633   */\n      0x00\n        /* \"#utility.yul\":7624:7630   */\n      dup3\n        /* \"#utility.yul\":7620:7634   */\n      add\n        /* \"#utility.yul\":7613:7661   */\n      mstore\n        /* \"#utility.yul\":7496:7668   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7674:8040   */\n    tag_214:\n        /* \"#utility.yul\":7816:7819   */\n      0x00\n        /* \"#utility.yul\":7837:7904   */\n      tag_322\n        /* \"#utility.yul\":7901:7903   */\n      0x16\n        /* \"#utility.yul\":7896:7899   */\n      dup4\n        /* \"#utility.yul\":7837:7904   */\n      tag_210\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":7830:7904   */\n      swap2\n      pop\n        /* \"#utility.yul\":7913:8006   */\n      tag_323\n        /* \"#utility.yul\":8002:8005   */\n      dup3\n        /* \"#utility.yul\":7913:8006   */\n      tag_213\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":8031:8033   */\n      0x20\n        /* \"#utility.yul\":8026:8029   */\n      dup3\n        /* \"#utility.yul\":8022:8034   */\n      add\n        /* \"#utility.yul\":8015:8034   */\n      swap1\n      pop\n        /* \"#utility.yul\":7674:8040   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8046:8465   */\n    tag_140:\n        /* \"#utility.yul\":8212:8216   */\n      0x00\n        /* \"#utility.yul\":8250:8252   */\n      0x20\n        /* \"#utility.yul\":8239:8248   */\n      dup3\n        /* \"#utility.yul\":8235:8253   */\n      add\n        /* \"#utility.yul\":8227:8253   */\n      swap1\n      pop\n        /* \"#utility.yul\":8299:8308   */\n      dup2\n        /* \"#utility.yul\":8293:8297   */\n      dup2\n        /* \"#utility.yul\":8289:8309   */\n      sub\n        /* \"#utility.yul\":8285:8286   */\n      0x00\n        /* \"#utility.yul\":8274:8283   */\n      dup4\n        /* \"#utility.yul\":8270:8287   */\n      add\n        /* \"#utility.yul\":8263:8310   */\n      mstore\n        /* \"#utility.yul\":8327:8458   */\n      tag_325\n        /* \"#utility.yul\":8453:8457   */\n      dup2\n        /* \"#utility.yul\":8327:8458   */\n      tag_214\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":8319:8458   */\n      swap1\n      pop\n        /* \"#utility.yul\":8046:8465   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8471:8693   */\n    tag_215:\n        /* \"#utility.yul\":8611:8645   */\n      0x736574526577617264733a2073657420746865206475726174696f6e20666972\n        /* \"#utility.yul\":8607:8608   */\n      0x00\n        /* \"#utility.yul\":8599:8605   */\n      dup3\n        /* \"#utility.yul\":8595:8609   */\n      add\n        /* \"#utility.yul\":8588:8646   */\n      mstore\n        /* \"#utility.yul\":8680:8685   */\n      0x73742e0000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8675:8677   */\n      0x20\n        /* \"#utility.yul\":8667:8673   */\n      dup3\n        /* \"#utility.yul\":8663:8678   */\n      add\n        /* \"#utility.yul\":8656:8686   */\n      mstore\n        /* \"#utility.yul\":8471:8693   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8699:9065   */\n    tag_216:\n        /* \"#utility.yul\":8841:8844   */\n      0x00\n        /* \"#utility.yul\":8862:8929   */\n      tag_328\n        /* \"#utility.yul\":8926:8928   */\n      0x23\n        /* \"#utility.yul\":8921:8924   */\n      dup4\n        /* \"#utility.yul\":8862:8929   */\n      tag_210\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":8855:8929   */\n      swap2\n      pop\n        /* \"#utility.yul\":8938:9031   */\n      tag_329\n        /* \"#utility.yul\":9027:9030   */\n      dup3\n        /* \"#utility.yul\":8938:9031   */\n      tag_215\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":9056:9058   */\n      0x40\n        /* \"#utility.yul\":9051:9054   */\n      dup3\n        /* \"#utility.yul\":9047:9059   */\n      add\n        /* \"#utility.yul\":9040:9059   */\n      swap1\n      pop\n        /* \"#utility.yul\":8699:9065   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9071:9490   */\n    tag_149:\n        /* \"#utility.yul\":9237:9241   */\n      0x00\n        /* \"#utility.yul\":9275:9277   */\n      0x20\n        /* \"#utility.yul\":9264:9273   */\n      dup3\n        /* \"#utility.yul\":9260:9278   */\n      add\n        /* \"#utility.yul\":9252:9278   */\n      swap1\n      pop\n        /* \"#utility.yul\":9324:9333   */\n      dup2\n        /* \"#utility.yul\":9318:9322   */\n      dup2\n        /* \"#utility.yul\":9314:9334   */\n      sub\n        /* \"#utility.yul\":9310:9311   */\n      0x00\n        /* \"#utility.yul\":9299:9308   */\n      dup4\n        /* \"#utility.yul\":9295:9312   */\n      add\n        /* \"#utility.yul\":9288:9335   */\n      mstore\n        /* \"#utility.yul\":9352:9483   */\n      tag_331\n        /* \"#utility.yul\":9478:9482   */\n      dup2\n        /* \"#utility.yul\":9352:9483   */\n      tag_216\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":9344:9483   */\n      swap1\n      pop\n        /* \"#utility.yul\":9071:9490   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9496:9676   */\n    tag_217:\n        /* \"#utility.yul\":9636:9668   */\n      0x736574526577617264733a207265776f72647320616d6f756e74203d20300000\n        /* \"#utility.yul\":9632:9633   */\n      0x00\n        /* \"#utility.yul\":9624:9630   */\n      dup3\n        /* \"#utility.yul\":9620:9634   */\n      add\n        /* \"#utility.yul\":9613:9669   */\n      mstore\n        /* \"#utility.yul\":9496:9676   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9682:10048   */\n    tag_218:\n        /* \"#utility.yul\":9824:9827   */\n      0x00\n        /* \"#utility.yul\":9845:9912   */\n      tag_334\n        /* \"#utility.yul\":9909:9911   */\n      0x1e\n        /* \"#utility.yul\":9904:9907   */\n      dup4\n        /* \"#utility.yul\":9845:9912   */\n      tag_210\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":9838:9912   */\n      swap2\n      pop\n        /* \"#utility.yul\":9921:10014   */\n      tag_335\n        /* \"#utility.yul\":10010:10013   */\n      dup3\n        /* \"#utility.yul\":9921:10014   */\n      tag_217\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":10039:10041   */\n      0x20\n        /* \"#utility.yul\":10034:10037   */\n      dup3\n        /* \"#utility.yul\":10030:10042   */\n      add\n        /* \"#utility.yul\":10023:10042   */\n      swap1\n      pop\n        /* \"#utility.yul\":9682:10048   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10054:10473   */\n    tag_152:\n        /* \"#utility.yul\":10220:10224   */\n      0x00\n        /* \"#utility.yul\":10258:10260   */\n      0x20\n        /* \"#utility.yul\":10247:10256   */\n      dup3\n        /* \"#utility.yul\":10243:10261   */\n      add\n        /* \"#utility.yul\":10235:10261   */\n      swap1\n      pop\n        /* \"#utility.yul\":10307:10316   */\n      dup2\n        /* \"#utility.yul\":10301:10305   */\n      dup2\n        /* \"#utility.yul\":10297:10317   */\n      sub\n        /* \"#utility.yul\":10293:10294   */\n      0x00\n        /* \"#utility.yul\":10282:10291   */\n      dup4\n        /* \"#utility.yul\":10278:10295   */\n      add\n        /* \"#utility.yul\":10271:10318   */\n      mstore\n        /* \"#utility.yul\":10335:10466   */\n      tag_337\n        /* \"#utility.yul\":10461:10465   */\n      dup2\n        /* \"#utility.yul\":10335:10466   */\n      tag_218\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":10327:10466   */\n      swap1\n      pop\n        /* \"#utility.yul\":10054:10473   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10479:10622   */\n    tag_219:\n        /* \"#utility.yul\":10536:10541   */\n      0x00\n        /* \"#utility.yul\":10567:10573   */\n      dup2\n        /* \"#utility.yul\":10561:10574   */\n      mload\n        /* \"#utility.yul\":10552:10574   */\n      swap1\n      pop\n        /* \"#utility.yul\":10583:10616   */\n      tag_339\n        /* \"#utility.yul\":10610:10615   */\n      dup2\n        /* \"#utility.yul\":10583:10616   */\n      tag_197\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":10479:10622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10628:10979   */\n    tag_161:\n        /* \"#utility.yul\":10698:10704   */\n      0x00\n        /* \"#utility.yul\":10747:10749   */\n      0x20\n        /* \"#utility.yul\":10735:10744   */\n      dup3\n        /* \"#utility.yul\":10726:10733   */\n      dup5\n        /* \"#utility.yul\":10722:10745   */\n      sub\n        /* \"#utility.yul\":10718:10750   */\n      slt\n        /* \"#utility.yul\":10715:10834   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":10753:10832   */\n      tag_342\n      tag_189\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":10715:10834   */\n    tag_341:\n        /* \"#utility.yul\":10873:10874   */\n      0x00\n        /* \"#utility.yul\":10898:10962   */\n      tag_343\n        /* \"#utility.yul\":10954:10961   */\n      dup5\n        /* \"#utility.yul\":10945:10951   */\n      dup3\n        /* \"#utility.yul\":10934:10943   */\n      dup6\n        /* \"#utility.yul\":10930:10952   */\n      add\n        /* \"#utility.yul\":10898:10962   */\n      tag_219\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":10888:10962   */\n      swap2\n      pop\n        /* \"#utility.yul\":10844:10972   */\n      pop\n        /* \"#utility.yul\":10628:10979   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10985:11162   */\n    tag_220:\n        /* \"#utility.yul\":11125:11154   */\n      0x736574526577617264733a207265776f72642072617465203d20300000000000\n        /* \"#utility.yul\":11121:11122   */\n      0x00\n        /* \"#utility.yul\":11113:11119   */\n      dup3\n        /* \"#utility.yul\":11109:11123   */\n      add\n        /* \"#utility.yul\":11102:11155   */\n      mstore\n        /* \"#utility.yul\":10985:11162   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11168:11534   */\n    tag_221:\n        /* \"#utility.yul\":11310:11313   */\n      0x00\n        /* \"#utility.yul\":11331:11398   */\n      tag_346\n        /* \"#utility.yul\":11395:11397   */\n      0x1b\n        /* \"#utility.yul\":11390:11393   */\n      dup4\n        /* \"#utility.yul\":11331:11398   */\n      tag_210\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":11324:11398   */\n      swap2\n      pop\n        /* \"#utility.yul\":11407:11500   */\n      tag_347\n        /* \"#utility.yul\":11496:11499   */\n      dup3\n        /* \"#utility.yul\":11407:11500   */\n      tag_220\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":11525:11527   */\n      0x20\n        /* \"#utility.yul\":11520:11523   */\n      dup3\n        /* \"#utility.yul\":11516:11528   */\n      add\n        /* \"#utility.yul\":11509:11528   */\n      swap1\n      pop\n        /* \"#utility.yul\":11168:11534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11540:11959   */\n    tag_171:\n        /* \"#utility.yul\":11706:11710   */\n      0x00\n        /* \"#utility.yul\":11744:11746   */\n      0x20\n        /* \"#utility.yul\":11733:11742   */\n      dup3\n        /* \"#utility.yul\":11729:11747   */\n      add\n        /* \"#utility.yul\":11721:11747   */\n      swap1\n      pop\n        /* \"#utility.yul\":11793:11802   */\n      dup2\n        /* \"#utility.yul\":11787:11791   */\n      dup2\n        /* \"#utility.yul\":11783:11803   */\n      sub\n        /* \"#utility.yul\":11779:11780   */\n      0x00\n        /* \"#utility.yul\":11768:11777   */\n      dup4\n        /* \"#utility.yul\":11764:11781   */\n      add\n        /* \"#utility.yul\":11757:11804   */\n      mstore\n        /* \"#utility.yul\":11821:11952   */\n      tag_349\n        /* \"#utility.yul\":11947:11951   */\n      dup2\n        /* \"#utility.yul\":11821:11952   */\n      tag_221\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":11813:11952   */\n      swap1\n      pop\n        /* \"#utility.yul\":11540:11959   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11965:12144   */\n    tag_222:\n        /* \"#utility.yul\":12105:12136   */\n      0x736574526577617264733a2072657761726473203c2062616c616e6365000000\n        /* \"#utility.yul\":12101:12102   */\n      0x00\n        /* \"#utility.yul\":12093:12099   */\n      dup3\n        /* \"#utility.yul\":12089:12103   */\n      add\n        /* \"#utility.yul\":12082:12137   */\n      mstore\n        /* \"#utility.yul\":11965:12144   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12150:12516   */\n    tag_223:\n        /* \"#utility.yul\":12292:12295   */\n      0x00\n        /* \"#utility.yul\":12313:12380   */\n      tag_352\n        /* \"#utility.yul\":12377:12379   */\n      0x1d\n        /* \"#utility.yul\":12372:12375   */\n      dup4\n        /* \"#utility.yul\":12313:12380   */\n      tag_210\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":12306:12380   */\n      swap2\n      pop\n        /* \"#utility.yul\":12389:12482   */\n      tag_353\n        /* \"#utility.yul\":12478:12481   */\n      dup3\n        /* \"#utility.yul\":12389:12482   */\n      tag_222\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":12507:12509   */\n      0x20\n        /* \"#utility.yul\":12502:12505   */\n      dup3\n        /* \"#utility.yul\":12498:12510   */\n      add\n        /* \"#utility.yul\":12491:12510   */\n      swap1\n      pop\n        /* \"#utility.yul\":12150:12516   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12522:12941   */\n    tag_175:\n        /* \"#utility.yul\":12688:12692   */\n      0x00\n        /* \"#utility.yul\":12726:12728   */\n      0x20\n        /* \"#utility.yul\":12715:12724   */\n      dup3\n        /* \"#utility.yul\":12711:12729   */\n      add\n        /* \"#utility.yul\":12703:12729   */\n      swap1\n      pop\n        /* \"#utility.yul\":12775:12784   */\n      dup2\n        /* \"#utility.yul\":12769:12773   */\n      dup2\n        /* \"#utility.yul\":12765:12785   */\n      sub\n        /* \"#utility.yul\":12761:12762   */\n      0x00\n        /* \"#utility.yul\":12750:12759   */\n      dup4\n        /* \"#utility.yul\":12746:12763   */\n      add\n        /* \"#utility.yul\":12739:12786   */\n      mstore\n        /* \"#utility.yul\":12803:12934   */\n      tag_355\n        /* \"#utility.yul\":12929:12933   */\n      dup2\n        /* \"#utility.yul\":12803:12934   */\n      tag_223\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":12795:12934   */\n      swap1\n      pop\n        /* \"#utility.yul\":12522:12941   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12947:13167   */\n    tag_224:\n        /* \"#utility.yul\":13087:13121   */\n      0x2069742063616e27742062652073657420647572696e6720726577617264696e\n        /* \"#utility.yul\":13083:13084   */\n      0x00\n        /* \"#utility.yul\":13075:13081   */\n      dup3\n        /* \"#utility.yul\":13071:13085   */\n      add\n        /* \"#utility.yul\":13064:13122   */\n      mstore\n        /* \"#utility.yul\":13156:13159   */\n      0x6700000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13151:13153   */\n      0x20\n        /* \"#utility.yul\":13143:13149   */\n      dup3\n        /* \"#utility.yul\":13139:13154   */\n      add\n        /* \"#utility.yul\":13132:13160   */\n      mstore\n        /* \"#utility.yul\":12947:13167   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13173:13539   */\n    tag_225:\n        /* \"#utility.yul\":13315:13318   */\n      0x00\n        /* \"#utility.yul\":13336:13403   */\n      tag_358\n        /* \"#utility.yul\":13400:13402   */\n      0x21\n        /* \"#utility.yul\":13395:13398   */\n      dup4\n        /* \"#utility.yul\":13336:13403   */\n      tag_210\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":13329:13403   */\n      swap2\n      pop\n        /* \"#utility.yul\":13412:13505   */\n      tag_359\n        /* \"#utility.yul\":13501:13504   */\n      dup3\n        /* \"#utility.yul\":13412:13505   */\n      tag_224\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":13530:13532   */\n      0x40\n        /* \"#utility.yul\":13525:13528   */\n      dup3\n        /* \"#utility.yul\":13521:13533   */\n      add\n        /* \"#utility.yul\":13514:13533   */\n      swap1\n      pop\n        /* \"#utility.yul\":13173:13539   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13545:13964   */\n    tag_183:\n        /* \"#utility.yul\":13711:13715   */\n      0x00\n        /* \"#utility.yul\":13749:13751   */\n      0x20\n        /* \"#utility.yul\":13738:13747   */\n      dup3\n        /* \"#utility.yul\":13734:13752   */\n      add\n        /* \"#utility.yul\":13726:13752   */\n      swap1\n      pop\n        /* \"#utility.yul\":13798:13807   */\n      dup2\n        /* \"#utility.yul\":13792:13796   */\n      dup2\n        /* \"#utility.yul\":13788:13808   */\n      sub\n        /* \"#utility.yul\":13784:13785   */\n      0x00\n        /* \"#utility.yul\":13773:13782   */\n      dup4\n        /* \"#utility.yul\":13769:13786   */\n      add\n        /* \"#utility.yul\":13762:13809   */\n      mstore\n        /* \"#utility.yul\":13826:13957   */\n      tag_361\n        /* \"#utility.yul\":13952:13956   */\n      dup2\n        /* \"#utility.yul\":13826:13957   */\n      tag_225\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":13818:13957   */\n      swap1\n      pop\n        /* \"#utility.yul\":13545:13964   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200819a87068e8c0401b30be9c9a5c42f5253767251ddaf1fd1224a1ffd510610f64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_845": {
									"entryPoint": null,
									"id": 845,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 286,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 212,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1355:6",
										"nodeType": "YulBlock",
										"src": "0:1355:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "759:80:6",
													"nodeType": "YulBlock",
													"src": "759:80:6",
													"statements": [
														{
															"nativeSrc": "769:22:6",
															"nodeType": "YulAssignment",
															"src": "769:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:6"
																},
																"nativeSrc": "778:13:6",
																"nodeType": "YulFunctionCall",
																"src": "778:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:6"
																},
																"nativeSrc": "800:33:6",
																"nodeType": "YulFunctionCall",
																"src": "800:33:6"
															},
															"nativeSrc": "800:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:6",
														"nodeType": "YulTypedName",
														"src": "737:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:6",
														"nodeType": "YulTypedName",
														"src": "745:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:6",
														"nodeType": "YulTypedName",
														"src": "753:5:6",
														"type": ""
													}
												],
												"src": "696:143:6"
											},
											{
												"body": {
													"nativeSrc": "939:413:6",
													"nodeType": "YulBlock",
													"src": "939:413:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:6",
																"nodeType": "YulBlock",
																"src": "985:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:6"
																			},
																			"nativeSrc": "987:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:6"
																		},
																		"nativeSrc": "987:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:6"
																		},
																		"nativeSrc": "956:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:6",
																		"nodeType": "YulLiteral",
																		"src": "981:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:6"
																},
																"nativeSrc": "952:32:6",
																"nodeType": "YulFunctionCall",
																"src": "952:32:6"
															},
															"nativeSrc": "949:119:6",
															"nodeType": "YulIf",
															"src": "949:119:6"
														},
														{
															"nativeSrc": "1078:128:6",
															"nodeType": "YulBlock",
															"src": "1078:128:6",
															"statements": [
																{
																	"nativeSrc": "1093:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:6"
																				},
																				"nativeSrc": "1164:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:6"
																		},
																		"nativeSrc": "1132:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:6",
															"nodeType": "YulBlock",
															"src": "1216:129:6",
															"statements": [
																{
																	"nativeSrc": "1231:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:6"
																				},
																				"nativeSrc": "1303:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:6"
																		},
																		"nativeSrc": "1271:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:6",
														"nodeType": "YulTypedName",
														"src": "901:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:6",
														"nodeType": "YulTypedName",
														"src": "912:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:6",
														"nodeType": "YulTypedName",
														"src": "924:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:6",
														"nodeType": "YulTypedName",
														"src": "932:6:6",
														"type": ""
													}
												],
												"src": "845:507:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60e060405234801561000f575f80fd5b506040516119af3803806119af83398181016040528101906100319190610132565b3373ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250505050610170565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610101826100d8565b9050919050565b610111816100f7565b811461011b575f80fd5b50565b5f8151905061012c81610108565b92915050565b5f8060408385031215610148576101476100d4565b5b5f6101558582860161011e565b92505060206101668582860161011e565b9150509250929050565b60805160a05160c0516117dd6101d25f395f81816108bd01528181610b2901528181610d490152610fbf01525f818161050001528181610d0d01528181610dcc0152610f8401525f8181610778015281816108990152610a0601526117dd5ff3fe608060405234801561000f575f80fd5b50600436106100fd575f3560e01c806370641a3611610095578063c7a29c6f11610064578063c7a29c6f14610263578063c964f5851461027f578063d1af0c7d1461029d578063f6be71d1146102bb576100fd565b806370641a36146101ed57806372f702f31461020b5780638da5cb5b14610229578063a694fc3a14610247576100fd565b8063350fd407116100d1578063350fd407146101755780634334f3ff14610193578063523bc7d5146101b157806367d3b488146101cf576100fd565b80628cc262146101015780630572b0cc146101315780630fb5a6b41461013b5780632e1a7d4d14610159575b5f80fd5b61011b600480360381019061011691906110fa565b6102d7565b604051610128919061113d565b60405180910390f35b6101396103d2565b005b6101436105e1565b604051610150919061113d565b60405180910390f35b610173600480360381019061016e9190611180565b6105e7565b005b61017d610816565b60405161018a919061113d565b60405180910390f35b61019b61081c565b6040516101a8919061113d565b60405180910390f35b6101b9610821565b6040516101c6919061113d565b60405180910390f35b6101d7610827565b6040516101e4919061113d565b60405180910390f35b6101f561082d565b604051610202919061113d565b60405180910390f35b610213610897565b6040516102209190611206565b60405180910390f35b6102316108bb565b60405161023e919061122e565b60405180910390f35b610261600480360381019061025c9190611180565b6108df565b005b61027d60048036038101906102789190611180565b610b10565b005b610287610f7c565b604051610294919061113d565b60405180910390f35b6102a5610f82565b6040516102b29190611206565b60405180910390f35b6102d560048036038101906102d09190611180565b610fa6565b005b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054670de0b6b3a764000060065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461036561082d565b61036f9190611274565b60085f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546103b791906112a7565b6103c19190611315565b6103cb9190611345565b9050919050565b336103db61082d565b6005819055506103ed42600354611083565b6002819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146104b55761042f816102d7565b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060055460065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111156105dd577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610559929190611378565b6020604051808303815f875af1158015610575573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061059991906113d4565b505f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5050565b60015481565b336105f061082d565b60058190555061060242600354611083565b6002819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106ca57610644816102d7565b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060055460065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5f821161070c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070390611459565b60405180910390fd5b8160085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107589190611274565b92505081905550815f8082825461076f9190611274565b925050819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016107d1929190611378565b6020604051808303815f875af11580156107ed573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061081191906113d4565b505050565b60055481565b5f5481565b60045481565b60035481565b5f805f540361083f575f549050610894565b670de0b6b3a76400005f5460025461085960035442611083565b6108639190611274565b60045461087091906112a7565b61087a9190611315565b61088491906112a7565b6005546108919190611345565b90505b90565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b336108e861082d565b6005819055506108fa42600354611083565b6002819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146109c25761093c816102d7565b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060055460065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5f8211610a04576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fb90611459565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610a6193929190611477565b6020604051808303815f875af1158015610a7d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610aa191906113d4565b508160085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610aee9190611345565b92505081905550815f80828254610b059190611345565b925050819055505050565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610b9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b95906114f6565b60405180910390fd5b5f610ba761082d565b600581905550610bb942600354611083565b6002819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c8157610bfb816102d7565b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060055460065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5f60015490505f8103610cc9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc090611584565b60405180910390fd5b5f8311610d0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d02906115ec565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd7f000000000000000000000000000000000000000000000000000000000000000030866040518463ffffffff1660e01b8152600401610d8893929190611477565b6020604051808303815f875af1158015610da4573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610dc891906113d4565b505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610e23919061122e565b602060405180830381865afa158015610e3e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e62919061161e565b90505f4290505f6003549050808210610e8c578386610e819190611315565b600481905550610ec2565b83868383610e9a9190611274565b600454610ea791906112a7565b610eb19190611345565b610ebb9190611315565b6004819055505b5f60045411610f06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efd90611693565b60405180910390fd5b8284600454610f1591906112a7565b1115610f56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4d906116fb565b60405180910390fd5b60015482610f649190611345565b90508060038190555081600281905550505050505050565b60025481565b7f000000000000000000000000000000000000000000000000000000000000000081565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614611034576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102b906114f6565b60405180910390fd5b600354421015611079576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107090611789565b60405180910390fd5b8060018190555050565b5f818311156110925781611094565b825b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6110c9826110a0565b9050919050565b6110d9816110bf565b81146110e3575f80fd5b50565b5f813590506110f4816110d0565b92915050565b5f6020828403121561110f5761110e61109c565b5b5f61111c848285016110e6565b91505092915050565b5f819050919050565b61113781611125565b82525050565b5f6020820190506111505f83018461112e565b92915050565b61115f81611125565b8114611169575f80fd5b50565b5f8135905061117a81611156565b92915050565b5f602082840312156111955761119461109c565b5b5f6111a28482850161116c565b91505092915050565b5f819050919050565b5f6111ce6111c96111c4846110a0565b6111ab565b6110a0565b9050919050565b5f6111df826111b4565b9050919050565b5f6111f0826111d5565b9050919050565b611200816111e6565b82525050565b5f6020820190506112195f8301846111f7565b92915050565b611228816110bf565b82525050565b5f6020820190506112415f83018461121f565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61127e82611125565b915061128983611125565b92508282039050818111156112a1576112a0611247565b5b92915050565b5f6112b182611125565b91506112bc83611125565b92508282026112ca81611125565b915082820484148315176112e1576112e0611247565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61131f82611125565b915061132a83611125565b92508261133a576113396112e8565b5b828204905092915050565b5f61134f82611125565b915061135a83611125565b925082820190508082111561137257611371611247565b5b92915050565b5f60408201905061138b5f83018561121f565b611398602083018461112e565b9392505050565b5f8115159050919050565b6113b38161139f565b81146113bd575f80fd5b50565b5f815190506113ce816113aa565b92915050565b5f602082840312156113e9576113e861109c565b5b5f6113f6848285016113c0565b91505092915050565b5f82825260208201905092915050565b7f616d6f756e74203d2030000000000000000000000000000000000000000000005f82015250565b5f611443600a836113ff565b915061144e8261140f565b602082019050919050565b5f6020820190508181035f83015261147081611437565b9050919050565b5f60608201905061148a5f83018661121f565b611497602083018561121f565b6114a4604083018461112e565b949350505050565b7f4f6e6c79206f776e657220697320616c6c6f7765642e000000000000000000005f82015250565b5f6114e06016836113ff565b91506114eb826114ac565b602082019050919050565b5f6020820190508181035f83015261150d816114d4565b9050919050565b7f736574526577617264733a2073657420746865206475726174696f6e206669725f8201527f73742e0000000000000000000000000000000000000000000000000000000000602082015250565b5f61156e6023836113ff565b915061157982611514565b604082019050919050565b5f6020820190508181035f83015261159b81611562565b9050919050565b7f736574526577617264733a207265776f72647320616d6f756e74203d203000005f82015250565b5f6115d6601e836113ff565b91506115e1826115a2565b602082019050919050565b5f6020820190508181035f830152611603816115ca565b9050919050565b5f8151905061161881611156565b92915050565b5f602082840312156116335761163261109c565b5b5f6116408482850161160a565b91505092915050565b7f736574526577617264733a207265776f72642072617465203d203000000000005f82015250565b5f61167d601b836113ff565b915061168882611649565b602082019050919050565b5f6020820190508181035f8301526116aa81611671565b9050919050565b7f736574526577617264733a2072657761726473203c2062616c616e63650000005f82015250565b5f6116e5601d836113ff565b91506116f0826116b1565b602082019050919050565b5f6020820190508181035f830152611712816116d9565b9050919050565b7f2069742063616e27742062652073657420647572696e6720726577617264696e5f8201527f6700000000000000000000000000000000000000000000000000000000000000602082015250565b5f6117736021836113ff565b915061177e82611719565b604082019050919050565b5f6020820190508181035f8301526117a081611767565b905091905056fea26469706673582212200819a87068e8c0401b30be9c9a5c42f5253767251ddaf1fd1224a1ffd510610f64736f6c634300081a0033",
							"opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x19AF CODESIZE SUB DUP1 PUSH2 0x19AF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x132 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH2 0x170 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x101 DUP3 PUSH2 0xD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x111 DUP2 PUSH2 0xF7 JUMP JUMPDEST DUP2 EQ PUSH2 0x11B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x12C DUP2 PUSH2 0x108 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x148 JUMPI PUSH2 0x147 PUSH2 0xD4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x155 DUP6 DUP3 DUP7 ADD PUSH2 0x11E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x166 DUP6 DUP3 DUP7 ADD PUSH2 0x11E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x17DD PUSH2 0x1D2 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x8BD ADD MSTORE DUP2 DUP2 PUSH2 0xB29 ADD MSTORE DUP2 DUP2 PUSH2 0xD49 ADD MSTORE PUSH2 0xFBF ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x500 ADD MSTORE DUP2 DUP2 PUSH2 0xD0D ADD MSTORE DUP2 DUP2 PUSH2 0xDCC ADD MSTORE PUSH2 0xF84 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x778 ADD MSTORE DUP2 DUP2 PUSH2 0x899 ADD MSTORE PUSH2 0xA06 ADD MSTORE PUSH2 0x17DD PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70641A36 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xC7A29C6F GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC7A29C6F EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xC964F585 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0xF6BE71D1 EQ PUSH2 0x2BB JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x70641A36 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x247 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x350FD407 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x350FD407 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x4334F3FF EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x523BC7D5 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x67D3B488 EQ PUSH2 0x1CF JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x572B0CC EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x159 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x10FA JUMP JUMPDEST PUSH2 0x2D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x113D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x3D2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x143 PUSH2 0x5E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x113D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x1180 JUMP JUMPDEST PUSH2 0x5E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17D PUSH2 0x816 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x113D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH2 0x81C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x113D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH2 0x821 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x113D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D7 PUSH2 0x827 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x113D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F5 PUSH2 0x82D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x113D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x213 PUSH2 0x897 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x1206 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH2 0x8BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x261 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x1180 JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x1180 JUMP JUMPDEST PUSH2 0xB10 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x287 PUSH2 0xF7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x113D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A5 PUSH2 0xF82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1206 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x1180 JUMP JUMPDEST PUSH2 0xFA6 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x365 PUSH2 0x82D JUMP JUMPDEST PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x1274 JUMP JUMPDEST PUSH1 0x8 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x12A7 JUMP JUMPDEST PUSH2 0x3C1 SWAP2 SWAP1 PUSH2 0x1315 JUMP JUMPDEST PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x1345 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH2 0x3DB PUSH2 0x82D JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x3ED TIMESTAMP PUSH1 0x3 SLOAD PUSH2 0x1083 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4B5 JUMPI PUSH2 0x42F DUP2 PUSH2 0x2D7 JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x5 SLOAD PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x5DD JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x559 SWAP3 SWAP2 SWAP1 PUSH2 0x1378 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x575 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x599 SWAP2 SWAP1 PUSH2 0x13D4 JUMP JUMPDEST POP PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH2 0x5F0 PUSH2 0x82D JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x602 TIMESTAMP PUSH1 0x3 SLOAD PUSH2 0x1083 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6CA JUMPI PUSH2 0x644 DUP2 PUSH2 0x2D7 JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x5 SLOAD PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 DUP3 GT PUSH2 0x70C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x703 SWAP1 PUSH2 0x1459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x758 SWAP2 SWAP1 PUSH2 0x1274 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x76F SWAP2 SWAP1 PUSH2 0x1274 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D1 SWAP3 SWAP2 SWAP1 PUSH2 0x1378 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7ED JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x811 SWAP2 SWAP1 PUSH2 0x13D4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SLOAD SUB PUSH2 0x83F JUMPI PUSH0 SLOAD SWAP1 POP PUSH2 0x894 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH0 SLOAD PUSH1 0x2 SLOAD PUSH2 0x859 PUSH1 0x3 SLOAD TIMESTAMP PUSH2 0x1083 JUMP JUMPDEST PUSH2 0x863 SWAP2 SWAP1 PUSH2 0x1274 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x870 SWAP2 SWAP1 PUSH2 0x12A7 JUMP JUMPDEST PUSH2 0x87A SWAP2 SWAP1 PUSH2 0x1315 JUMP JUMPDEST PUSH2 0x884 SWAP2 SWAP1 PUSH2 0x12A7 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x891 SWAP2 SWAP1 PUSH2 0x1345 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST CALLER PUSH2 0x8E8 PUSH2 0x82D JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x8FA TIMESTAMP PUSH1 0x3 SLOAD PUSH2 0x1083 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9C2 JUMPI PUSH2 0x93C DUP2 PUSH2 0x2D7 JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x5 SLOAD PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 DUP3 GT PUSH2 0xA04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FB SWAP1 PUSH2 0x1459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA61 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1477 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA7D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAA1 SWAP2 SWAP1 PUSH2 0x13D4 JUMP JUMPDEST POP DUP2 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xAEE SWAP2 SWAP1 PUSH2 0x1345 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH0 DUP1 DUP3 DUP3 SLOAD PUSH2 0xB05 SWAP2 SWAP1 PUSH2 0x1345 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB95 SWAP1 PUSH2 0x14F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xBA7 PUSH2 0x82D JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0xBB9 TIMESTAMP PUSH1 0x3 SLOAD PUSH2 0x1083 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC81 JUMPI PUSH2 0xBFB DUP2 PUSH2 0x2D7 JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x5 SLOAD PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH1 0x1 SLOAD SWAP1 POP PUSH0 DUP2 SUB PUSH2 0xCC9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x1584 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT PUSH2 0xD0B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD02 SWAP1 PUSH2 0x15EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH32 0x0 ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD88 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1477 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDA4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDC8 SWAP2 SWAP1 PUSH2 0x13D4 JUMP JUMPDEST POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE23 SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE3E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE62 SWAP2 SWAP1 PUSH2 0x161E JUMP JUMPDEST SWAP1 POP PUSH0 TIMESTAMP SWAP1 POP PUSH0 PUSH1 0x3 SLOAD SWAP1 POP DUP1 DUP3 LT PUSH2 0xE8C JUMPI DUP4 DUP7 PUSH2 0xE81 SWAP2 SWAP1 PUSH2 0x1315 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0xEC2 JUMP JUMPDEST DUP4 DUP7 DUP4 DUP4 PUSH2 0xE9A SWAP2 SWAP1 PUSH2 0x1274 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xEA7 SWAP2 SWAP1 PUSH2 0x12A7 JUMP JUMPDEST PUSH2 0xEB1 SWAP2 SWAP1 PUSH2 0x1345 JUMP JUMPDEST PUSH2 0xEBB SWAP2 SWAP1 PUSH2 0x1315 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH1 0x4 SLOAD GT PUSH2 0xF06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFD SWAP1 PUSH2 0x1693 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP5 PUSH1 0x4 SLOAD PUSH2 0xF15 SWAP2 SWAP1 PUSH2 0x12A7 JUMP JUMPDEST GT ISZERO PUSH2 0xF56 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4D SWAP1 PUSH2 0x16FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP3 PUSH2 0xF64 SWAP2 SWAP1 PUSH2 0x1345 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1034 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102B SWAP1 PUSH2 0x14F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP LT ISZERO PUSH2 0x1079 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1070 SWAP1 PUSH2 0x1789 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 GT ISZERO PUSH2 0x1092 JUMPI DUP2 PUSH2 0x1094 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10C9 DUP3 PUSH2 0x10A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10D9 DUP2 PUSH2 0x10BF JUMP JUMPDEST DUP2 EQ PUSH2 0x10E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10F4 DUP2 PUSH2 0x10D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x110F JUMPI PUSH2 0x110E PUSH2 0x109C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x111C DUP5 DUP3 DUP6 ADD PUSH2 0x10E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1137 DUP2 PUSH2 0x1125 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1150 PUSH0 DUP4 ADD DUP5 PUSH2 0x112E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x115F DUP2 PUSH2 0x1125 JUMP JUMPDEST DUP2 EQ PUSH2 0x1169 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x117A DUP2 PUSH2 0x1156 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1195 JUMPI PUSH2 0x1194 PUSH2 0x109C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11A2 DUP5 DUP3 DUP6 ADD PUSH2 0x116C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11CE PUSH2 0x11C9 PUSH2 0x11C4 DUP5 PUSH2 0x10A0 JUMP JUMPDEST PUSH2 0x11AB JUMP JUMPDEST PUSH2 0x10A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11DF DUP3 PUSH2 0x11B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11F0 DUP3 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1200 DUP2 PUSH2 0x11E6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1219 PUSH0 DUP4 ADD DUP5 PUSH2 0x11F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1228 DUP2 PUSH2 0x10BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1241 PUSH0 DUP4 ADD DUP5 PUSH2 0x121F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x127E DUP3 PUSH2 0x1125 JUMP JUMPDEST SWAP2 POP PUSH2 0x1289 DUP4 PUSH2 0x1125 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x12A1 JUMPI PUSH2 0x12A0 PUSH2 0x1247 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12B1 DUP3 PUSH2 0x1125 JUMP JUMPDEST SWAP2 POP PUSH2 0x12BC DUP4 PUSH2 0x1125 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x12CA DUP2 PUSH2 0x1125 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x12E1 JUMPI PUSH2 0x12E0 PUSH2 0x1247 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x131F DUP3 PUSH2 0x1125 JUMP JUMPDEST SWAP2 POP PUSH2 0x132A DUP4 PUSH2 0x1125 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x133A JUMPI PUSH2 0x1339 PUSH2 0x12E8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x134F DUP3 PUSH2 0x1125 JUMP JUMPDEST SWAP2 POP PUSH2 0x135A DUP4 PUSH2 0x1125 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1372 JUMPI PUSH2 0x1371 PUSH2 0x1247 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x138B PUSH0 DUP4 ADD DUP6 PUSH2 0x121F JUMP JUMPDEST PUSH2 0x1398 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x112E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13B3 DUP2 PUSH2 0x139F JUMP JUMPDEST DUP2 EQ PUSH2 0x13BD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x13CE DUP2 PUSH2 0x13AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13E9 JUMPI PUSH2 0x13E8 PUSH2 0x109C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13F6 DUP5 DUP3 DUP6 ADD PUSH2 0x13C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x616D6F756E74203D203000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1443 PUSH1 0xA DUP4 PUSH2 0x13FF JUMP JUMPDEST SWAP2 POP PUSH2 0x144E DUP3 PUSH2 0x140F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1470 DUP2 PUSH2 0x1437 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x148A PUSH0 DUP4 ADD DUP7 PUSH2 0x121F JUMP JUMPDEST PUSH2 0x1497 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x121F JUMP JUMPDEST PUSH2 0x14A4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x112E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E657220697320616C6C6F7765642E00000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14E0 PUSH1 0x16 DUP4 PUSH2 0x13FF JUMP JUMPDEST SWAP2 POP PUSH2 0x14EB DUP3 PUSH2 0x14AC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x150D DUP2 PUSH2 0x14D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x736574526577617264733A2073657420746865206475726174696F6E20666972 PUSH0 DUP3 ADD MSTORE PUSH32 0x73742E0000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x156E PUSH1 0x23 DUP4 PUSH2 0x13FF JUMP JUMPDEST SWAP2 POP PUSH2 0x1579 DUP3 PUSH2 0x1514 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x159B DUP2 PUSH2 0x1562 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x736574526577617264733A207265776F72647320616D6F756E74203D20300000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15D6 PUSH1 0x1E DUP4 PUSH2 0x13FF JUMP JUMPDEST SWAP2 POP PUSH2 0x15E1 DUP3 PUSH2 0x15A2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1603 DUP2 PUSH2 0x15CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1618 DUP2 PUSH2 0x1156 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1633 JUMPI PUSH2 0x1632 PUSH2 0x109C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1640 DUP5 DUP3 DUP6 ADD PUSH2 0x160A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x736574526577617264733A207265776F72642072617465203D20300000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x167D PUSH1 0x1B DUP4 PUSH2 0x13FF JUMP JUMPDEST SWAP2 POP PUSH2 0x1688 DUP3 PUSH2 0x1649 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16AA DUP2 PUSH2 0x1671 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x736574526577617264733A2072657761726473203C2062616C616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x16E5 PUSH1 0x1D DUP4 PUSH2 0x13FF JUMP JUMPDEST SWAP2 POP PUSH2 0x16F0 DUP3 PUSH2 0x16B1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1712 DUP2 PUSH2 0x16D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2069742063616E27742062652073657420647572696E6720726577617264696E PUSH0 DUP3 ADD MSTORE PUSH32 0x6700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1773 PUSH1 0x21 DUP4 PUSH2 0x13FF JUMP JUMPDEST SWAP2 POP PUSH2 0x177E DUP3 PUSH2 0x1719 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17A0 DUP2 PUSH2 0x1767 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD NOT 0xA8 PUSH17 0x68E8C0401B30BE9C9A5C42F5253767251D 0xDA CALL REVERT SLT 0x24 LOG1 SELFDESTRUCT 0xD5 LT PUSH2 0xF64 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "119:7385:5:-:0;;;1189:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1265:10;1257:18;;;;;;;;;;1308:13;1286:36;;;;;;;;;;1355:13;1333:36;;;;;;;;;;1189:188;;119:7385;;88:117:6;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;119:7385:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_min_1138": {
									"entryPoint": 4227,
									"id": 1138,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@duration_800": {
									"entryPoint": 1505,
									"id": 800,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@earned_1195": {
									"entryPoint": 727,
									"id": 1195,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@finishAt_804": {
									"entryPoint": 2087,
									"id": 804,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getRewards_1230": {
									"entryPoint": 978,
									"id": 1230,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_796": {
									"entryPoint": 2235,
									"id": 796,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardsPerTokenStored_808": {
									"entryPoint": 2070,
									"id": 808,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardsPerToken_1169": {
									"entryPoint": 2093,
									"id": 1169,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@rewardsRate_806": {
									"entryPoint": 2081,
									"id": 806,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardsToken_794": {
									"entryPoint": 3970,
									"id": 794,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setDuration_924": {
									"entryPoint": 4006,
									"id": 924,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRewards_1042": {
									"entryPoint": 2832,
									"id": 1042,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_1082": {
									"entryPoint": 2271,
									"id": 1082,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakingToken_791": {
									"entryPoint": 2199,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingTokensTotalSupply_798": {
									"entryPoint": 2076,
									"id": 798,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateAt_802": {
									"entryPoint": 3964,
									"id": 802,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_1118": {
									"entryPoint": 1511,
									"id": 1118,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 5056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 5642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5076,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack": {
									"entryPoint": 4599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_1092970c8e9ac56f5cdc3563e775f45e6ec14c0adcb274a0315b4f99dd293331_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_45e27ece88b57c14620e031a846cfb3adfd0a2babf5ff90170f42ce8f22132f5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5991,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_52f98974f5795dc4fbc4cb1c8cc3e86f9c0b44655886b99eaaf2198dfc23b8a4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9fe26c31df7ea9f31f127d886ab982fede6ecc7a20c6b24ff4c2789531aa65b1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c2370529a6f1a6a816c19114b0cc9d00969efb8f345ea23417ccbd250923201f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f259ffb3ec6756755f24a88d5ebe34e47809c81913eac2caa6345442399cee17_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5849,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_faeda1cde2954fb20c452e57322e586e176b69582241d304d446f54080fcd258_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5239,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4984,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed": {
									"entryPoint": 4614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1092970c8e9ac56f5cdc3563e775f45e6ec14c0adcb274a0315b4f99dd293331__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45e27ece88b57c14620e031a846cfb3adfd0a2babf5ff90170f42ce8f22132f5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6025,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_52f98974f5795dc4fbc4cb1c8cc3e86f9c0b44655886b99eaaf2198dfc23b8a4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9fe26c31df7ea9f31f127d886ab982fede6ecc7a20c6b24ff4c2789531aa65b1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c2370529a6f1a6a816c19114b0cc9d00969efb8f345ea23417ccbd250923201f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f259ffb3ec6756755f24a88d5ebe34e47809c81913eac2caa6345442399cee17__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5883,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_faeda1cde2954fb20c452e57322e586e176b69582241d304d446f54080fcd258__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5209,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$729_to_t_address": {
									"entryPoint": 4582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 4523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4679,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4840,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4252,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_1092970c8e9ac56f5cdc3563e775f45e6ec14c0adcb274a0315b4f99dd293331": {
									"entryPoint": 5292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_45e27ece88b57c14620e031a846cfb3adfd0a2babf5ff90170f42ce8f22132f5": {
									"entryPoint": 5913,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_52f98974f5795dc4fbc4cb1c8cc3e86f9c0b44655886b99eaaf2198dfc23b8a4": {
									"entryPoint": 5538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9fe26c31df7ea9f31f127d886ab982fede6ecc7a20c6b24ff4c2789531aa65b1": {
									"entryPoint": 5705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c2370529a6f1a6a816c19114b0cc9d00969efb8f345ea23417ccbd250923201f": {
									"entryPoint": 5396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f259ffb3ec6756755f24a88d5ebe34e47809c81913eac2caa6345442399cee17": {
									"entryPoint": 5809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_faeda1cde2954fb20c452e57322e586e176b69582241d304d446f54080fcd258": {
									"entryPoint": 5135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4304,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13967:6",
										"nodeType": "YulBlock",
										"src": "0:13967:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "748:87:6",
													"nodeType": "YulBlock",
													"src": "748:87:6",
													"statements": [
														{
															"nativeSrc": "758:29:6",
															"nodeType": "YulAssignment",
															"src": "758:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:6"
																},
																"nativeSrc": "767:20:6",
																"nodeType": "YulFunctionCall",
																"src": "767:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:6"
																},
																"nativeSrc": "796:33:6",
																"nodeType": "YulFunctionCall",
																"src": "796:33:6"
															},
															"nativeSrc": "796:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:6",
														"nodeType": "YulTypedName",
														"src": "726:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:6",
														"nodeType": "YulTypedName",
														"src": "734:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:6",
														"nodeType": "YulTypedName",
														"src": "742:5:6",
														"type": ""
													}
												],
												"src": "696:139:6"
											},
											{
												"body": {
													"nativeSrc": "907:263:6",
													"nodeType": "YulBlock",
													"src": "907:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:6",
																"nodeType": "YulBlock",
																"src": "953:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:6"
																			},
																			"nativeSrc": "955:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:6"
																		},
																		"nativeSrc": "955:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:6"
																		},
																		"nativeSrc": "924:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:6",
																		"nodeType": "YulLiteral",
																		"src": "949:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:6"
																},
																"nativeSrc": "920:32:6",
																"nodeType": "YulFunctionCall",
																"src": "920:32:6"
															},
															"nativeSrc": "917:119:6",
															"nodeType": "YulIf",
															"src": "917:119:6"
														},
														{
															"nativeSrc": "1046:117:6",
															"nodeType": "YulBlock",
															"src": "1046:117:6",
															"statements": [
																{
																	"nativeSrc": "1061:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:6"
																				},
																				"nativeSrc": "1121:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:6"
																		},
																		"nativeSrc": "1100:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:6",
														"nodeType": "YulTypedName",
														"src": "877:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:6",
														"nodeType": "YulTypedName",
														"src": "888:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:6",
														"nodeType": "YulTypedName",
														"src": "900:6:6",
														"type": ""
													}
												],
												"src": "841:329:6"
											},
											{
												"body": {
													"nativeSrc": "1221:32:6",
													"nodeType": "YulBlock",
													"src": "1221:32:6",
													"statements": [
														{
															"nativeSrc": "1231:16:6",
															"nodeType": "YulAssignment",
															"src": "1231:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:6",
																"nodeType": "YulIdentifier",
																"src": "1242:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:6",
														"nodeType": "YulTypedName",
														"src": "1203:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:6",
														"nodeType": "YulTypedName",
														"src": "1213:7:6",
														"type": ""
													}
												],
												"src": "1176:77:6"
											},
											{
												"body": {
													"nativeSrc": "1324:53:6",
													"nodeType": "YulBlock",
													"src": "1324:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:6"
																		},
																		"nativeSrc": "1346:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:6"
																},
																"nativeSrc": "1334:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:6"
															},
															"nativeSrc": "1334:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:6",
														"nodeType": "YulTypedName",
														"src": "1312:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:6",
														"nodeType": "YulTypedName",
														"src": "1319:3:6",
														"type": ""
													}
												],
												"src": "1259:118:6"
											},
											{
												"body": {
													"nativeSrc": "1481:124:6",
													"nodeType": "YulBlock",
													"src": "1481:124:6",
													"statements": [
														{
															"nativeSrc": "1491:26:6",
															"nodeType": "YulAssignment",
															"src": "1491:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:6"
																},
																"nativeSrc": "1499:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:6"
																		},
																		"nativeSrc": "1580:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1527:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:6"
																},
																"nativeSrc": "1527:71:6",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:6"
															},
															"nativeSrc": "1527:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:6",
														"nodeType": "YulTypedName",
														"src": "1453:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:6",
														"nodeType": "YulTypedName",
														"src": "1465:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:6",
														"nodeType": "YulTypedName",
														"src": "1476:4:6",
														"type": ""
													}
												],
												"src": "1383:222:6"
											},
											{
												"body": {
													"nativeSrc": "1654:79:6",
													"nodeType": "YulBlock",
													"src": "1654:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1711:16:6",
																"nodeType": "YulBlock",
																"src": "1711:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1720:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1723:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1713:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:6"
																			},
																			"nativeSrc": "1713:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:6"
																		},
																		"nativeSrc": "1713:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1677:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1702:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1684:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:6"
																				},
																				"nativeSrc": "1684:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1674:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:6"
																		},
																		"nativeSrc": "1674:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1667:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:6"
																},
																"nativeSrc": "1667:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1667:43:6"
															},
															"nativeSrc": "1664:63:6",
															"nodeType": "YulIf",
															"src": "1664:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1611:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1647:5:6",
														"nodeType": "YulTypedName",
														"src": "1647:5:6",
														"type": ""
													}
												],
												"src": "1611:122:6"
											},
											{
												"body": {
													"nativeSrc": "1791:87:6",
													"nodeType": "YulBlock",
													"src": "1791:87:6",
													"statements": [
														{
															"nativeSrc": "1801:29:6",
															"nodeType": "YulAssignment",
															"src": "1801:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1823:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1810:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:6"
																},
																"nativeSrc": "1810:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1810:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1801:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1866:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1839:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:6"
																},
																"nativeSrc": "1839:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1839:33:6"
															},
															"nativeSrc": "1839:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1739:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1769:6:6",
														"nodeType": "YulTypedName",
														"src": "1769:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1777:3:6",
														"nodeType": "YulTypedName",
														"src": "1777:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1785:5:6",
														"nodeType": "YulTypedName",
														"src": "1785:5:6",
														"type": ""
													}
												],
												"src": "1739:139:6"
											},
											{
												"body": {
													"nativeSrc": "1950:263:6",
													"nodeType": "YulBlock",
													"src": "1950:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1996:83:6",
																"nodeType": "YulBlock",
																"src": "1996:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1998:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1998:77:6"
																			},
																			"nativeSrc": "1998:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1998:79:6"
																		},
																		"nativeSrc": "1998:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1971:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1980:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1980:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1967:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:6"
																		},
																		"nativeSrc": "1967:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1967:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1992:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1963:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:6"
																},
																"nativeSrc": "1963:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1963:32:6"
															},
															"nativeSrc": "1960:119:6",
															"nodeType": "YulIf",
															"src": "1960:119:6"
														},
														{
															"nativeSrc": "2089:117:6",
															"nodeType": "YulBlock",
															"src": "2089:117:6",
															"statements": [
																{
																	"nativeSrc": "2104:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2104:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2118:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2118:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2108:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2108:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2133:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2133:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2168:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2168:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2179:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2179:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2164:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:6"
																				},
																				"nativeSrc": "2164:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2164:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2188:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2188:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2143:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2143:20:6"
																		},
																		"nativeSrc": "2143:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2143:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2133:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2133:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1884:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1920:9:6",
														"nodeType": "YulTypedName",
														"src": "1920:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1931:7:6",
														"nodeType": "YulTypedName",
														"src": "1931:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1943:6:6",
														"nodeType": "YulTypedName",
														"src": "1943:6:6",
														"type": ""
													}
												],
												"src": "1884:329:6"
											},
											{
												"body": {
													"nativeSrc": "2251:28:6",
													"nodeType": "YulBlock",
													"src": "2251:28:6",
													"statements": [
														{
															"nativeSrc": "2261:12:6",
															"nodeType": "YulAssignment",
															"src": "2261:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "2268:5:6",
																"nodeType": "YulIdentifier",
																"src": "2268:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2261:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2261:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2219:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2237:5:6",
														"nodeType": "YulTypedName",
														"src": "2237:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2247:3:6",
														"nodeType": "YulTypedName",
														"src": "2247:3:6",
														"type": ""
													}
												],
												"src": "2219:60:6"
											},
											{
												"body": {
													"nativeSrc": "2345:82:6",
													"nodeType": "YulBlock",
													"src": "2345:82:6",
													"statements": [
														{
															"nativeSrc": "2355:66:6",
															"nodeType": "YulAssignment",
															"src": "2355:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2413:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2413:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2395:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2395:17:6"
																				},
																				"nativeSrc": "2395:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2395:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2386:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "2386:8:6"
																		},
																		"nativeSrc": "2386:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2386:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2368:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "2368:17:6"
																},
																"nativeSrc": "2368:53:6",
																"nodeType": "YulFunctionCall",
																"src": "2368:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2355:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "2355:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2285:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2325:5:6",
														"nodeType": "YulTypedName",
														"src": "2325:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2335:9:6",
														"nodeType": "YulTypedName",
														"src": "2335:9:6",
														"type": ""
													}
												],
												"src": "2285:142:6"
											},
											{
												"body": {
													"nativeSrc": "2493:66:6",
													"nodeType": "YulBlock",
													"src": "2493:66:6",
													"statements": [
														{
															"nativeSrc": "2503:50:6",
															"nodeType": "YulAssignment",
															"src": "2503:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2547:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2547:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2516:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "2516:30:6"
																},
																"nativeSrc": "2516:37:6",
																"nodeType": "YulFunctionCall",
																"src": "2516:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2503:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "2503:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2433:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2473:5:6",
														"nodeType": "YulTypedName",
														"src": "2473:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2483:9:6",
														"nodeType": "YulTypedName",
														"src": "2483:9:6",
														"type": ""
													}
												],
												"src": "2433:126:6"
											},
											{
												"body": {
													"nativeSrc": "2639:66:6",
													"nodeType": "YulBlock",
													"src": "2639:66:6",
													"statements": [
														{
															"nativeSrc": "2649:50:6",
															"nodeType": "YulAssignment",
															"src": "2649:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2693:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2693:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2662:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "2662:30:6"
																},
																"nativeSrc": "2662:37:6",
																"nodeType": "YulFunctionCall",
																"src": "2662:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2649:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "2649:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$729_to_t_address",
												"nativeSrc": "2565:140:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2619:5:6",
														"nodeType": "YulTypedName",
														"src": "2619:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2629:9:6",
														"nodeType": "YulTypedName",
														"src": "2629:9:6",
														"type": ""
													}
												],
												"src": "2565:140:6"
											},
											{
												"body": {
													"nativeSrc": "2790:80:6",
													"nodeType": "YulBlock",
													"src": "2790:80:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2807:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2807:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2857:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2857:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$729_to_t_address",
																			"nativeSrc": "2812:44:6",
																			"nodeType": "YulIdentifier",
																			"src": "2812:44:6"
																		},
																		"nativeSrc": "2812:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2812:51:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2800:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2800:6:6"
																},
																"nativeSrc": "2800:64:6",
																"nodeType": "YulFunctionCall",
																"src": "2800:64:6"
															},
															"nativeSrc": "2800:64:6",
															"nodeType": "YulExpressionStatement",
															"src": "2800:64:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack",
												"nativeSrc": "2711:159:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2778:5:6",
														"nodeType": "YulTypedName",
														"src": "2778:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2785:3:6",
														"nodeType": "YulTypedName",
														"src": "2785:3:6",
														"type": ""
													}
												],
												"src": "2711:159:6"
											},
											{
												"body": {
													"nativeSrc": "2988:138:6",
													"nodeType": "YulBlock",
													"src": "2988:138:6",
													"statements": [
														{
															"nativeSrc": "2998:26:6",
															"nodeType": "YulAssignment",
															"src": "2998:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3010:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3010:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3021:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3021:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3006:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3006:3:6"
																},
																"nativeSrc": "3006:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3006:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2998:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2998:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3092:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3092:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3105:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3105:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3116:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3116:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3101:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3101:3:6"
																		},
																		"nativeSrc": "3101:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3101:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack",
																	"nativeSrc": "3034:57:6",
																	"nodeType": "YulIdentifier",
																	"src": "3034:57:6"
																},
																"nativeSrc": "3034:85:6",
																"nodeType": "YulFunctionCall",
																"src": "3034:85:6"
															},
															"nativeSrc": "3034:85:6",
															"nodeType": "YulExpressionStatement",
															"src": "3034:85:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed",
												"nativeSrc": "2876:250:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2960:9:6",
														"nodeType": "YulTypedName",
														"src": "2960:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2972:6:6",
														"nodeType": "YulTypedName",
														"src": "2972:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2983:4:6",
														"nodeType": "YulTypedName",
														"src": "2983:4:6",
														"type": ""
													}
												],
												"src": "2876:250:6"
											},
											{
												"body": {
													"nativeSrc": "3197:53:6",
													"nodeType": "YulBlock",
													"src": "3197:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3214:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3214:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3237:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3237:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3219:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "3219:17:6"
																		},
																		"nativeSrc": "3219:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3219:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3207:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3207:6:6"
																},
																"nativeSrc": "3207:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3207:37:6"
															},
															"nativeSrc": "3207:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "3207:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3132:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3185:5:6",
														"nodeType": "YulTypedName",
														"src": "3185:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3192:3:6",
														"nodeType": "YulTypedName",
														"src": "3192:3:6",
														"type": ""
													}
												],
												"src": "3132:118:6"
											},
											{
												"body": {
													"nativeSrc": "3354:124:6",
													"nodeType": "YulBlock",
													"src": "3354:124:6",
													"statements": [
														{
															"nativeSrc": "3364:26:6",
															"nodeType": "YulAssignment",
															"src": "3364:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3376:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3376:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3387:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3387:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3372:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3372:3:6"
																},
																"nativeSrc": "3372:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3372:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3364:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3364:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3444:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3444:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3457:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3457:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3468:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3468:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3453:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3453:3:6"
																		},
																		"nativeSrc": "3453:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3453:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3400:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3400:43:6"
																},
																"nativeSrc": "3400:71:6",
																"nodeType": "YulFunctionCall",
																"src": "3400:71:6"
															},
															"nativeSrc": "3400:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "3400:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3256:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3326:9:6",
														"nodeType": "YulTypedName",
														"src": "3326:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3338:6:6",
														"nodeType": "YulTypedName",
														"src": "3338:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3349:4:6",
														"nodeType": "YulTypedName",
														"src": "3349:4:6",
														"type": ""
													}
												],
												"src": "3256:222:6"
											},
											{
												"body": {
													"nativeSrc": "3512:152:6",
													"nodeType": "YulBlock",
													"src": "3512:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3529:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3529:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3532:77:6",
																		"nodeType": "YulLiteral",
																		"src": "3532:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3522:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3522:6:6"
																},
																"nativeSrc": "3522:88:6",
																"nodeType": "YulFunctionCall",
																"src": "3522:88:6"
															},
															"nativeSrc": "3522:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "3522:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3626:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3626:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3629:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3629:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3619:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3619:6:6"
																},
																"nativeSrc": "3619:15:6",
																"nodeType": "YulFunctionCall",
																"src": "3619:15:6"
															},
															"nativeSrc": "3619:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "3619:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3650:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3650:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3653:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3653:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3643:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3643:6:6"
																},
																"nativeSrc": "3643:15:6",
																"nodeType": "YulFunctionCall",
																"src": "3643:15:6"
															},
															"nativeSrc": "3643:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "3643:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3484:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "3484:180:6"
											},
											{
												"body": {
													"nativeSrc": "3715:149:6",
													"nodeType": "YulBlock",
													"src": "3715:149:6",
													"statements": [
														{
															"nativeSrc": "3725:25:6",
															"nodeType": "YulAssignment",
															"src": "3725:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3748:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3748:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3730:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3730:17:6"
																},
																"nativeSrc": "3730:20:6",
																"nodeType": "YulFunctionCall",
																"src": "3730:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3725:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "3725:1:6"
																}
															]
														},
														{
															"nativeSrc": "3759:25:6",
															"nodeType": "YulAssignment",
															"src": "3759:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3782:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3782:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3764:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3764:17:6"
																},
																"nativeSrc": "3764:20:6",
																"nodeType": "YulFunctionCall",
																"src": "3764:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3759:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "3759:1:6"
																}
															]
														},
														{
															"nativeSrc": "3793:17:6",
															"nodeType": "YulAssignment",
															"src": "3793:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3805:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3805:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3808:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3808:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3801:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3801:3:6"
																},
																"nativeSrc": "3801:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3801:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "3793:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3835:22:6",
																"nodeType": "YulBlock",
																"src": "3835:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3837:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "3837:16:6"
																			},
																			"nativeSrc": "3837:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3837:18:6"
																		},
																		"nativeSrc": "3837:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3837:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "3826:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3826:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "3832:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3832:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3823:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3823:2:6"
																},
																"nativeSrc": "3823:11:6",
																"nodeType": "YulFunctionCall",
																"src": "3823:11:6"
															},
															"nativeSrc": "3820:37:6",
															"nodeType": "YulIf",
															"src": "3820:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "3670:194:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3701:1:6",
														"nodeType": "YulTypedName",
														"src": "3701:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3704:1:6",
														"nodeType": "YulTypedName",
														"src": "3704:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "3710:4:6",
														"nodeType": "YulTypedName",
														"src": "3710:4:6",
														"type": ""
													}
												],
												"src": "3670:194:6"
											},
											{
												"body": {
													"nativeSrc": "3918:362:6",
													"nodeType": "YulBlock",
													"src": "3918:362:6",
													"statements": [
														{
															"nativeSrc": "3928:25:6",
															"nodeType": "YulAssignment",
															"src": "3928:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3951:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3951:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3933:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3933:17:6"
																},
																"nativeSrc": "3933:20:6",
																"nodeType": "YulFunctionCall",
																"src": "3933:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3928:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "3928:1:6"
																}
															]
														},
														{
															"nativeSrc": "3962:25:6",
															"nodeType": "YulAssignment",
															"src": "3962:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3985:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3985:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3967:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3967:17:6"
																},
																"nativeSrc": "3967:20:6",
																"nodeType": "YulFunctionCall",
																"src": "3967:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3962:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "3962:1:6"
																}
															]
														},
														{
															"nativeSrc": "3996:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3996:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4019:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4019:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4022:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4022:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4015:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4015:3:6"
																},
																"nativeSrc": "4015:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4015:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "4000:11:6",
																	"nodeType": "YulTypedName",
																	"src": "4000:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4033:41:6",
															"nodeType": "YulAssignment",
															"src": "4033:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "4062:11:6",
																		"nodeType": "YulIdentifier",
																		"src": "4062:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4044:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4044:17:6"
																},
																"nativeSrc": "4044:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4044:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4033:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "4033:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4251:22:6",
																"nodeType": "YulBlock",
																"src": "4251:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4253:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4253:16:6"
																			},
																			"nativeSrc": "4253:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4253:18:6"
																		},
																		"nativeSrc": "4253:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4253:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4184:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "4184:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4177:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "4177:6:6"
																				},
																				"nativeSrc": "4177:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4177:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4207:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "4207:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4214:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "4214:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4223:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "4223:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4210:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "4210:3:6"
																						},
																						"nativeSrc": "4210:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "4210:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4204:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "4204:2:6"
																				},
																				"nativeSrc": "4204:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4204:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4157:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4157:2:6"
																		},
																		"nativeSrc": "4157:83:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4157:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4137:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4137:6:6"
																},
																"nativeSrc": "4137:113:6",
																"nodeType": "YulFunctionCall",
																"src": "4137:113:6"
															},
															"nativeSrc": "4134:139:6",
															"nodeType": "YulIf",
															"src": "4134:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "3870:410:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3901:1:6",
														"nodeType": "YulTypedName",
														"src": "3901:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3904:1:6",
														"nodeType": "YulTypedName",
														"src": "3904:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "3910:7:6",
														"nodeType": "YulTypedName",
														"src": "3910:7:6",
														"type": ""
													}
												],
												"src": "3870:410:6"
											},
											{
												"body": {
													"nativeSrc": "4314:152:6",
													"nodeType": "YulBlock",
													"src": "4314:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4331:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4331:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4334:77:6",
																		"nodeType": "YulLiteral",
																		"src": "4334:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4324:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4324:6:6"
																},
																"nativeSrc": "4324:88:6",
																"nodeType": "YulFunctionCall",
																"src": "4324:88:6"
															},
															"nativeSrc": "4324:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "4324:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4428:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4428:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4431:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4431:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4421:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4421:6:6"
																},
																"nativeSrc": "4421:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4421:15:6"
															},
															"nativeSrc": "4421:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4421:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4452:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4452:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4455:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4455:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4445:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4445:6:6"
																},
																"nativeSrc": "4445:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4445:15:6"
															},
															"nativeSrc": "4445:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4445:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "4286:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "4286:180:6"
											},
											{
												"body": {
													"nativeSrc": "4514:143:6",
													"nodeType": "YulBlock",
													"src": "4514:143:6",
													"statements": [
														{
															"nativeSrc": "4524:25:6",
															"nodeType": "YulAssignment",
															"src": "4524:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4547:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4547:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4529:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4529:17:6"
																},
																"nativeSrc": "4529:20:6",
																"nodeType": "YulFunctionCall",
																"src": "4529:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4524:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4524:1:6"
																}
															]
														},
														{
															"nativeSrc": "4558:25:6",
															"nodeType": "YulAssignment",
															"src": "4558:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4581:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4581:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4563:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4563:17:6"
																},
																"nativeSrc": "4563:20:6",
																"nodeType": "YulFunctionCall",
																"src": "4563:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4558:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4558:1:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4605:22:6",
																"nodeType": "YulBlock",
																"src": "4605:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "4607:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4607:16:6"
																			},
																			"nativeSrc": "4607:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4607:18:6"
																		},
																		"nativeSrc": "4607:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4607:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4602:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4602:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4595:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4595:6:6"
																},
																"nativeSrc": "4595:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4595:9:6"
															},
															"nativeSrc": "4592:35:6",
															"nodeType": "YulIf",
															"src": "4592:35:6"
														},
														{
															"nativeSrc": "4637:14:6",
															"nodeType": "YulAssignment",
															"src": "4637:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4646:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4646:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4649:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4649:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4642:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4642:3:6"
																},
																"nativeSrc": "4642:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4642:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "4637:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4637:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "4472:185:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4503:1:6",
														"nodeType": "YulTypedName",
														"src": "4503:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4506:1:6",
														"nodeType": "YulTypedName",
														"src": "4506:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "4512:1:6",
														"nodeType": "YulTypedName",
														"src": "4512:1:6",
														"type": ""
													}
												],
												"src": "4472:185:6"
											},
											{
												"body": {
													"nativeSrc": "4707:147:6",
													"nodeType": "YulBlock",
													"src": "4707:147:6",
													"statements": [
														{
															"nativeSrc": "4717:25:6",
															"nodeType": "YulAssignment",
															"src": "4717:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4740:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4740:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4722:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4722:17:6"
																},
																"nativeSrc": "4722:20:6",
																"nodeType": "YulFunctionCall",
																"src": "4722:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4717:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4717:1:6"
																}
															]
														},
														{
															"nativeSrc": "4751:25:6",
															"nodeType": "YulAssignment",
															"src": "4751:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4774:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4774:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4756:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4756:17:6"
																},
																"nativeSrc": "4756:20:6",
																"nodeType": "YulFunctionCall",
																"src": "4756:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4751:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4751:1:6"
																}
															]
														},
														{
															"nativeSrc": "4785:16:6",
															"nodeType": "YulAssignment",
															"src": "4785:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4796:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4796:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4799:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4799:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4792:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4792:3:6"
																},
																"nativeSrc": "4792:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4792:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4785:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4785:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4825:22:6",
																"nodeType": "YulBlock",
																"src": "4825:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4827:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4827:16:6"
																			},
																			"nativeSrc": "4827:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4827:18:6"
																		},
																		"nativeSrc": "4827:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4827:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4817:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4817:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4820:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4820:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4814:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4814:2:6"
																},
																"nativeSrc": "4814:10:6",
																"nodeType": "YulFunctionCall",
																"src": "4814:10:6"
															},
															"nativeSrc": "4811:36:6",
															"nodeType": "YulIf",
															"src": "4811:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4663:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4694:1:6",
														"nodeType": "YulTypedName",
														"src": "4694:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4697:1:6",
														"nodeType": "YulTypedName",
														"src": "4697:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4703:3:6",
														"nodeType": "YulTypedName",
														"src": "4703:3:6",
														"type": ""
													}
												],
												"src": "4663:191:6"
											},
											{
												"body": {
													"nativeSrc": "4986:206:6",
													"nodeType": "YulBlock",
													"src": "4986:206:6",
													"statements": [
														{
															"nativeSrc": "4996:26:6",
															"nodeType": "YulAssignment",
															"src": "4996:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5008:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5008:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5019:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5019:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5004:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5004:3:6"
																},
																"nativeSrc": "5004:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5004:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4996:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4996:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5076:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5076:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5089:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5089:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5100:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5100:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5085:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5085:3:6"
																		},
																		"nativeSrc": "5085:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5085:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5032:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "5032:43:6"
																},
																"nativeSrc": "5032:71:6",
																"nodeType": "YulFunctionCall",
																"src": "5032:71:6"
															},
															"nativeSrc": "5032:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "5032:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5157:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5157:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5170:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5170:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5181:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5181:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5166:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5166:3:6"
																		},
																		"nativeSrc": "5166:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5166:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5113:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "5113:43:6"
																},
																"nativeSrc": "5113:72:6",
																"nodeType": "YulFunctionCall",
																"src": "5113:72:6"
															},
															"nativeSrc": "5113:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "5113:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4860:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4950:9:6",
														"nodeType": "YulTypedName",
														"src": "4950:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4962:6:6",
														"nodeType": "YulTypedName",
														"src": "4962:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4970:6:6",
														"nodeType": "YulTypedName",
														"src": "4970:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4981:4:6",
														"nodeType": "YulTypedName",
														"src": "4981:4:6",
														"type": ""
													}
												],
												"src": "4860:332:6"
											},
											{
												"body": {
													"nativeSrc": "5240:48:6",
													"nodeType": "YulBlock",
													"src": "5240:48:6",
													"statements": [
														{
															"nativeSrc": "5250:32:6",
															"nodeType": "YulAssignment",
															"src": "5250:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5275:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5275:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5268:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5268:6:6"
																		},
																		"nativeSrc": "5268:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5268:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5261:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5261:6:6"
																},
																"nativeSrc": "5261:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5261:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5250:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "5250:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "5198:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5222:5:6",
														"nodeType": "YulTypedName",
														"src": "5222:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5232:7:6",
														"nodeType": "YulTypedName",
														"src": "5232:7:6",
														"type": ""
													}
												],
												"src": "5198:90:6"
											},
											{
												"body": {
													"nativeSrc": "5334:76:6",
													"nodeType": "YulBlock",
													"src": "5334:76:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5388:16:6",
																"nodeType": "YulBlock",
																"src": "5388:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5397:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5397:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5400:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5400:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5390:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5390:6:6"
																			},
																			"nativeSrc": "5390:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5390:12:6"
																		},
																		"nativeSrc": "5390:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5390:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5357:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5357:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5379:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5379:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "5364:14:6",
																					"nodeType": "YulIdentifier",
																					"src": "5364:14:6"
																				},
																				"nativeSrc": "5364:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5364:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5354:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "5354:2:6"
																		},
																		"nativeSrc": "5354:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5354:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5347:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5347:6:6"
																},
																"nativeSrc": "5347:40:6",
																"nodeType": "YulFunctionCall",
																"src": "5347:40:6"
															},
															"nativeSrc": "5344:60:6",
															"nodeType": "YulIf",
															"src": "5344:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "5294:116:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5327:5:6",
														"nodeType": "YulTypedName",
														"src": "5327:5:6",
														"type": ""
													}
												],
												"src": "5294:116:6"
											},
											{
												"body": {
													"nativeSrc": "5476:77:6",
													"nodeType": "YulBlock",
													"src": "5476:77:6",
													"statements": [
														{
															"nativeSrc": "5486:22:6",
															"nodeType": "YulAssignment",
															"src": "5486:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5501:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5501:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5495:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "5495:5:6"
																},
																"nativeSrc": "5495:13:6",
																"nodeType": "YulFunctionCall",
																"src": "5495:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5486:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "5486:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5541:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5541:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "5517:23:6",
																	"nodeType": "YulIdentifier",
																	"src": "5517:23:6"
																},
																"nativeSrc": "5517:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5517:30:6"
															},
															"nativeSrc": "5517:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "5517:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "5416:137:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5454:6:6",
														"nodeType": "YulTypedName",
														"src": "5454:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5462:3:6",
														"nodeType": "YulTypedName",
														"src": "5462:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5470:5:6",
														"nodeType": "YulTypedName",
														"src": "5470:5:6",
														"type": ""
													}
												],
												"src": "5416:137:6"
											},
											{
												"body": {
													"nativeSrc": "5633:271:6",
													"nodeType": "YulBlock",
													"src": "5633:271:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5679:83:6",
																"nodeType": "YulBlock",
																"src": "5679:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5681:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5681:77:6"
																			},
																			"nativeSrc": "5681:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5681:79:6"
																		},
																		"nativeSrc": "5681:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5681:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5654:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5654:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5663:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5663:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5650:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5650:3:6"
																		},
																		"nativeSrc": "5650:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5650:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5675:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5675:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5646:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5646:3:6"
																},
																"nativeSrc": "5646:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5646:32:6"
															},
															"nativeSrc": "5643:119:6",
															"nodeType": "YulIf",
															"src": "5643:119:6"
														},
														{
															"nativeSrc": "5772:125:6",
															"nodeType": "YulBlock",
															"src": "5772:125:6",
															"statements": [
																{
																	"nativeSrc": "5787:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5787:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5801:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5801:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5791:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5791:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5816:71:6",
																	"nodeType": "YulAssignment",
																	"src": "5816:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5859:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5859:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5870:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5870:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5855:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5855:3:6"
																				},
																				"nativeSrc": "5855:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5855:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5879:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5879:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "5826:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "5826:28:6"
																		},
																		"nativeSrc": "5826:61:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5826:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5816:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5816:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "5559:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5603:9:6",
														"nodeType": "YulTypedName",
														"src": "5603:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5614:7:6",
														"nodeType": "YulTypedName",
														"src": "5614:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5626:6:6",
														"nodeType": "YulTypedName",
														"src": "5626:6:6",
														"type": ""
													}
												],
												"src": "5559:345:6"
											},
											{
												"body": {
													"nativeSrc": "6006:73:6",
													"nodeType": "YulBlock",
													"src": "6006:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6023:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6023:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6028:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6028:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6016:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6016:6:6"
																},
																"nativeSrc": "6016:19:6",
																"nodeType": "YulFunctionCall",
																"src": "6016:19:6"
															},
															"nativeSrc": "6016:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "6016:19:6"
														},
														{
															"nativeSrc": "6044:29:6",
															"nodeType": "YulAssignment",
															"src": "6044:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6063:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6063:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6068:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6068:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6059:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6059:3:6"
																},
																"nativeSrc": "6059:14:6",
																"nodeType": "YulFunctionCall",
																"src": "6059:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6044:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "6044:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "5910:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5978:3:6",
														"nodeType": "YulTypedName",
														"src": "5978:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5983:6:6",
														"nodeType": "YulTypedName",
														"src": "5983:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5994:11:6",
														"nodeType": "YulTypedName",
														"src": "5994:11:6",
														"type": ""
													}
												],
												"src": "5910:169:6"
											},
											{
												"body": {
													"nativeSrc": "6191:54:6",
													"nodeType": "YulBlock",
													"src": "6191:54:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6213:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6213:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6221:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6221:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6209:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6209:3:6"
																		},
																		"nativeSrc": "6209:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6209:14:6"
																	},
																	{
																		"hexValue": "616d6f756e74203d2030",
																		"kind": "string",
																		"nativeSrc": "6225:12:6",
																		"nodeType": "YulLiteral",
																		"src": "6225:12:6",
																		"type": "",
																		"value": "amount = 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6202:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6202:6:6"
																},
																"nativeSrc": "6202:36:6",
																"nodeType": "YulFunctionCall",
																"src": "6202:36:6"
															},
															"nativeSrc": "6202:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "6202:36:6"
														}
													]
												},
												"name": "store_literal_in_memory_faeda1cde2954fb20c452e57322e586e176b69582241d304d446f54080fcd258",
												"nativeSrc": "6085:160:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6183:6:6",
														"nodeType": "YulTypedName",
														"src": "6183:6:6",
														"type": ""
													}
												],
												"src": "6085:160:6"
											},
											{
												"body": {
													"nativeSrc": "6397:220:6",
													"nodeType": "YulBlock",
													"src": "6397:220:6",
													"statements": [
														{
															"nativeSrc": "6407:74:6",
															"nodeType": "YulAssignment",
															"src": "6407:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6473:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6473:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6478:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6478:2:6",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6414:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "6414:58:6"
																},
																"nativeSrc": "6414:67:6",
																"nodeType": "YulFunctionCall",
																"src": "6414:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6407:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6407:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6579:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6579:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_faeda1cde2954fb20c452e57322e586e176b69582241d304d446f54080fcd258",
																	"nativeSrc": "6490:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "6490:88:6"
																},
																"nativeSrc": "6490:93:6",
																"nodeType": "YulFunctionCall",
																"src": "6490:93:6"
															},
															"nativeSrc": "6490:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "6490:93:6"
														},
														{
															"nativeSrc": "6592:19:6",
															"nodeType": "YulAssignment",
															"src": "6592:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6603:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6603:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6608:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6608:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6599:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6599:3:6"
																},
																"nativeSrc": "6599:12:6",
																"nodeType": "YulFunctionCall",
																"src": "6599:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6592:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6592:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_faeda1cde2954fb20c452e57322e586e176b69582241d304d446f54080fcd258_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6251:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6385:3:6",
														"nodeType": "YulTypedName",
														"src": "6385:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6393:3:6",
														"nodeType": "YulTypedName",
														"src": "6393:3:6",
														"type": ""
													}
												],
												"src": "6251:366:6"
											},
											{
												"body": {
													"nativeSrc": "6794:248:6",
													"nodeType": "YulBlock",
													"src": "6794:248:6",
													"statements": [
														{
															"nativeSrc": "6804:26:6",
															"nodeType": "YulAssignment",
															"src": "6804:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6816:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6816:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6827:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6827:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6812:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6812:3:6"
																},
																"nativeSrc": "6812:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6812:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6804:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6804:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6851:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6851:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6862:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6862:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6847:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6847:3:6"
																		},
																		"nativeSrc": "6847:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6847:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6870:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "6870:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6876:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6876:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6866:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6866:3:6"
																		},
																		"nativeSrc": "6866:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6866:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6840:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6840:6:6"
																},
																"nativeSrc": "6840:47:6",
																"nodeType": "YulFunctionCall",
																"src": "6840:47:6"
															},
															"nativeSrc": "6840:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "6840:47:6"
														},
														{
															"nativeSrc": "6896:139:6",
															"nodeType": "YulAssignment",
															"src": "6896:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7030:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7030:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_faeda1cde2954fb20c452e57322e586e176b69582241d304d446f54080fcd258_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6904:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "6904:124:6"
																},
																"nativeSrc": "6904:131:6",
																"nodeType": "YulFunctionCall",
																"src": "6904:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6896:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6896:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_faeda1cde2954fb20c452e57322e586e176b69582241d304d446f54080fcd258__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6623:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6774:9:6",
														"nodeType": "YulTypedName",
														"src": "6774:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6789:4:6",
														"nodeType": "YulTypedName",
														"src": "6789:4:6",
														"type": ""
													}
												],
												"src": "6623:419:6"
											},
											{
												"body": {
													"nativeSrc": "7202:288:6",
													"nodeType": "YulBlock",
													"src": "7202:288:6",
													"statements": [
														{
															"nativeSrc": "7212:26:6",
															"nodeType": "YulAssignment",
															"src": "7212:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7224:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7224:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7235:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7235:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7220:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7220:3:6"
																},
																"nativeSrc": "7220:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7220:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7212:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7212:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7292:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7292:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7305:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7305:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7316:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7316:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7301:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7301:3:6"
																		},
																		"nativeSrc": "7301:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7301:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7248:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7248:43:6"
																},
																"nativeSrc": "7248:71:6",
																"nodeType": "YulFunctionCall",
																"src": "7248:71:6"
															},
															"nativeSrc": "7248:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "7248:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7373:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7373:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7386:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7386:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7397:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7397:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7382:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7382:3:6"
																		},
																		"nativeSrc": "7382:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7382:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7329:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7329:43:6"
																},
																"nativeSrc": "7329:72:6",
																"nodeType": "YulFunctionCall",
																"src": "7329:72:6"
															},
															"nativeSrc": "7329:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "7329:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7455:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7455:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7468:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7468:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7479:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7479:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7464:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7464:3:6"
																		},
																		"nativeSrc": "7464:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7464:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7411:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7411:43:6"
																},
																"nativeSrc": "7411:72:6",
																"nodeType": "YulFunctionCall",
																"src": "7411:72:6"
															},
															"nativeSrc": "7411:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "7411:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7048:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7158:9:6",
														"nodeType": "YulTypedName",
														"src": "7158:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7170:6:6",
														"nodeType": "YulTypedName",
														"src": "7170:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7178:6:6",
														"nodeType": "YulTypedName",
														"src": "7178:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7186:6:6",
														"nodeType": "YulTypedName",
														"src": "7186:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7197:4:6",
														"nodeType": "YulTypedName",
														"src": "7197:4:6",
														"type": ""
													}
												],
												"src": "7048:442:6"
											},
											{
												"body": {
													"nativeSrc": "7602:66:6",
													"nodeType": "YulBlock",
													"src": "7602:66:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7624:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7624:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7632:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7632:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7620:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7620:3:6"
																		},
																		"nativeSrc": "7620:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7620:14:6"
																	},
																	{
																		"hexValue": "4f6e6c79206f776e657220697320616c6c6f7765642e",
																		"kind": "string",
																		"nativeSrc": "7636:24:6",
																		"nodeType": "YulLiteral",
																		"src": "7636:24:6",
																		"type": "",
																		"value": "Only owner is allowed."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7613:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7613:6:6"
																},
																"nativeSrc": "7613:48:6",
																"nodeType": "YulFunctionCall",
																"src": "7613:48:6"
															},
															"nativeSrc": "7613:48:6",
															"nodeType": "YulExpressionStatement",
															"src": "7613:48:6"
														}
													]
												},
												"name": "store_literal_in_memory_1092970c8e9ac56f5cdc3563e775f45e6ec14c0adcb274a0315b4f99dd293331",
												"nativeSrc": "7496:172:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7594:6:6",
														"nodeType": "YulTypedName",
														"src": "7594:6:6",
														"type": ""
													}
												],
												"src": "7496:172:6"
											},
											{
												"body": {
													"nativeSrc": "7820:220:6",
													"nodeType": "YulBlock",
													"src": "7820:220:6",
													"statements": [
														{
															"nativeSrc": "7830:74:6",
															"nodeType": "YulAssignment",
															"src": "7830:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7896:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7896:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7901:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7901:2:6",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7837:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "7837:58:6"
																},
																"nativeSrc": "7837:67:6",
																"nodeType": "YulFunctionCall",
																"src": "7837:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7830:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7830:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8002:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8002:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1092970c8e9ac56f5cdc3563e775f45e6ec14c0adcb274a0315b4f99dd293331",
																	"nativeSrc": "7913:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "7913:88:6"
																},
																"nativeSrc": "7913:93:6",
																"nodeType": "YulFunctionCall",
																"src": "7913:93:6"
															},
															"nativeSrc": "7913:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "7913:93:6"
														},
														{
															"nativeSrc": "8015:19:6",
															"nodeType": "YulAssignment",
															"src": "8015:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8026:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8026:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8031:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8031:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8022:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8022:3:6"
																},
																"nativeSrc": "8022:12:6",
																"nodeType": "YulFunctionCall",
																"src": "8022:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8015:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8015:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1092970c8e9ac56f5cdc3563e775f45e6ec14c0adcb274a0315b4f99dd293331_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7674:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7808:3:6",
														"nodeType": "YulTypedName",
														"src": "7808:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7816:3:6",
														"nodeType": "YulTypedName",
														"src": "7816:3:6",
														"type": ""
													}
												],
												"src": "7674:366:6"
											},
											{
												"body": {
													"nativeSrc": "8217:248:6",
													"nodeType": "YulBlock",
													"src": "8217:248:6",
													"statements": [
														{
															"nativeSrc": "8227:26:6",
															"nodeType": "YulAssignment",
															"src": "8227:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8239:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8239:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8250:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8250:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8235:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8235:3:6"
																},
																"nativeSrc": "8235:18:6",
																"nodeType": "YulFunctionCall",
																"src": "8235:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8227:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8227:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8274:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8274:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8285:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8285:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8270:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8270:3:6"
																		},
																		"nativeSrc": "8270:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8270:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8293:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8293:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8299:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8299:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8289:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8289:3:6"
																		},
																		"nativeSrc": "8289:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8289:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8263:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8263:6:6"
																},
																"nativeSrc": "8263:47:6",
																"nodeType": "YulFunctionCall",
																"src": "8263:47:6"
															},
															"nativeSrc": "8263:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "8263:47:6"
														},
														{
															"nativeSrc": "8319:139:6",
															"nodeType": "YulAssignment",
															"src": "8319:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8453:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8453:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1092970c8e9ac56f5cdc3563e775f45e6ec14c0adcb274a0315b4f99dd293331_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8327:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "8327:124:6"
																},
																"nativeSrc": "8327:131:6",
																"nodeType": "YulFunctionCall",
																"src": "8327:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8319:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8319:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1092970c8e9ac56f5cdc3563e775f45e6ec14c0adcb274a0315b4f99dd293331__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8046:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8197:9:6",
														"nodeType": "YulTypedName",
														"src": "8197:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8212:4:6",
														"nodeType": "YulTypedName",
														"src": "8212:4:6",
														"type": ""
													}
												],
												"src": "8046:419:6"
											},
											{
												"body": {
													"nativeSrc": "8577:116:6",
													"nodeType": "YulBlock",
													"src": "8577:116:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8599:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8599:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8607:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8607:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8595:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8595:3:6"
																		},
																		"nativeSrc": "8595:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8595:14:6"
																	},
																	{
																		"hexValue": "736574526577617264733a2073657420746865206475726174696f6e20666972",
																		"kind": "string",
																		"nativeSrc": "8611:34:6",
																		"nodeType": "YulLiteral",
																		"src": "8611:34:6",
																		"type": "",
																		"value": "setRewards: set the duration fir"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8588:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8588:6:6"
																},
																"nativeSrc": "8588:58:6",
																"nodeType": "YulFunctionCall",
																"src": "8588:58:6"
															},
															"nativeSrc": "8588:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "8588:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8667:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8667:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8675:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8675:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8663:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8663:3:6"
																		},
																		"nativeSrc": "8663:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8663:15:6"
																	},
																	{
																		"hexValue": "73742e",
																		"kind": "string",
																		"nativeSrc": "8680:5:6",
																		"nodeType": "YulLiteral",
																		"src": "8680:5:6",
																		"type": "",
																		"value": "st."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8656:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8656:6:6"
																},
																"nativeSrc": "8656:30:6",
																"nodeType": "YulFunctionCall",
																"src": "8656:30:6"
															},
															"nativeSrc": "8656:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "8656:30:6"
														}
													]
												},
												"name": "store_literal_in_memory_c2370529a6f1a6a816c19114b0cc9d00969efb8f345ea23417ccbd250923201f",
												"nativeSrc": "8471:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8569:6:6",
														"nodeType": "YulTypedName",
														"src": "8569:6:6",
														"type": ""
													}
												],
												"src": "8471:222:6"
											},
											{
												"body": {
													"nativeSrc": "8845:220:6",
													"nodeType": "YulBlock",
													"src": "8845:220:6",
													"statements": [
														{
															"nativeSrc": "8855:74:6",
															"nodeType": "YulAssignment",
															"src": "8855:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8921:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8921:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8926:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8926:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8862:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "8862:58:6"
																},
																"nativeSrc": "8862:67:6",
																"nodeType": "YulFunctionCall",
																"src": "8862:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8855:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8855:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9027:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9027:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c2370529a6f1a6a816c19114b0cc9d00969efb8f345ea23417ccbd250923201f",
																	"nativeSrc": "8938:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "8938:88:6"
																},
																"nativeSrc": "8938:93:6",
																"nodeType": "YulFunctionCall",
																"src": "8938:93:6"
															},
															"nativeSrc": "8938:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "8938:93:6"
														},
														{
															"nativeSrc": "9040:19:6",
															"nodeType": "YulAssignment",
															"src": "9040:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9051:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9051:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9056:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9056:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9047:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9047:3:6"
																},
																"nativeSrc": "9047:12:6",
																"nodeType": "YulFunctionCall",
																"src": "9047:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9040:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9040:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c2370529a6f1a6a816c19114b0cc9d00969efb8f345ea23417ccbd250923201f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8699:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8833:3:6",
														"nodeType": "YulTypedName",
														"src": "8833:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8841:3:6",
														"nodeType": "YulTypedName",
														"src": "8841:3:6",
														"type": ""
													}
												],
												"src": "8699:366:6"
											},
											{
												"body": {
													"nativeSrc": "9242:248:6",
													"nodeType": "YulBlock",
													"src": "9242:248:6",
													"statements": [
														{
															"nativeSrc": "9252:26:6",
															"nodeType": "YulAssignment",
															"src": "9252:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9264:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9264:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9275:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9275:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9260:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9260:3:6"
																},
																"nativeSrc": "9260:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9260:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9252:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9252:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9299:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9299:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9310:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9310:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9295:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9295:3:6"
																		},
																		"nativeSrc": "9295:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9295:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9318:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9318:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9324:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9324:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9314:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9314:3:6"
																		},
																		"nativeSrc": "9314:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9314:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9288:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9288:6:6"
																},
																"nativeSrc": "9288:47:6",
																"nodeType": "YulFunctionCall",
																"src": "9288:47:6"
															},
															"nativeSrc": "9288:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "9288:47:6"
														},
														{
															"nativeSrc": "9344:139:6",
															"nodeType": "YulAssignment",
															"src": "9344:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9478:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "9478:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c2370529a6f1a6a816c19114b0cc9d00969efb8f345ea23417ccbd250923201f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9352:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "9352:124:6"
																},
																"nativeSrc": "9352:131:6",
																"nodeType": "YulFunctionCall",
																"src": "9352:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9344:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9344:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c2370529a6f1a6a816c19114b0cc9d00969efb8f345ea23417ccbd250923201f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9071:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9222:9:6",
														"nodeType": "YulTypedName",
														"src": "9222:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9237:4:6",
														"nodeType": "YulTypedName",
														"src": "9237:4:6",
														"type": ""
													}
												],
												"src": "9071:419:6"
											},
											{
												"body": {
													"nativeSrc": "9602:74:6",
													"nodeType": "YulBlock",
													"src": "9602:74:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9624:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9624:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9632:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9632:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9620:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9620:3:6"
																		},
																		"nativeSrc": "9620:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9620:14:6"
																	},
																	{
																		"hexValue": "736574526577617264733a207265776f72647320616d6f756e74203d2030",
																		"kind": "string",
																		"nativeSrc": "9636:32:6",
																		"nodeType": "YulLiteral",
																		"src": "9636:32:6",
																		"type": "",
																		"value": "setRewards: rewords amount = 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9613:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9613:6:6"
																},
																"nativeSrc": "9613:56:6",
																"nodeType": "YulFunctionCall",
																"src": "9613:56:6"
															},
															"nativeSrc": "9613:56:6",
															"nodeType": "YulExpressionStatement",
															"src": "9613:56:6"
														}
													]
												},
												"name": "store_literal_in_memory_52f98974f5795dc4fbc4cb1c8cc3e86f9c0b44655886b99eaaf2198dfc23b8a4",
												"nativeSrc": "9496:180:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9594:6:6",
														"nodeType": "YulTypedName",
														"src": "9594:6:6",
														"type": ""
													}
												],
												"src": "9496:180:6"
											},
											{
												"body": {
													"nativeSrc": "9828:220:6",
													"nodeType": "YulBlock",
													"src": "9828:220:6",
													"statements": [
														{
															"nativeSrc": "9838:74:6",
															"nodeType": "YulAssignment",
															"src": "9838:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9904:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9904:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9909:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9909:2:6",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9845:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "9845:58:6"
																},
																"nativeSrc": "9845:67:6",
																"nodeType": "YulFunctionCall",
																"src": "9845:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9838:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9838:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10010:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10010:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_52f98974f5795dc4fbc4cb1c8cc3e86f9c0b44655886b99eaaf2198dfc23b8a4",
																	"nativeSrc": "9921:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "9921:88:6"
																},
																"nativeSrc": "9921:93:6",
																"nodeType": "YulFunctionCall",
																"src": "9921:93:6"
															},
															"nativeSrc": "9921:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "9921:93:6"
														},
														{
															"nativeSrc": "10023:19:6",
															"nodeType": "YulAssignment",
															"src": "10023:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10034:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10034:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10039:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10039:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10030:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10030:3:6"
																},
																"nativeSrc": "10030:12:6",
																"nodeType": "YulFunctionCall",
																"src": "10030:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10023:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10023:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_52f98974f5795dc4fbc4cb1c8cc3e86f9c0b44655886b99eaaf2198dfc23b8a4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9682:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9816:3:6",
														"nodeType": "YulTypedName",
														"src": "9816:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9824:3:6",
														"nodeType": "YulTypedName",
														"src": "9824:3:6",
														"type": ""
													}
												],
												"src": "9682:366:6"
											},
											{
												"body": {
													"nativeSrc": "10225:248:6",
													"nodeType": "YulBlock",
													"src": "10225:248:6",
													"statements": [
														{
															"nativeSrc": "10235:26:6",
															"nodeType": "YulAssignment",
															"src": "10235:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10247:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10247:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10258:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10258:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10243:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10243:3:6"
																},
																"nativeSrc": "10243:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10243:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10235:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10235:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10282:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10282:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10293:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10293:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10278:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10278:3:6"
																		},
																		"nativeSrc": "10278:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10278:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10301:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "10301:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10307:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10307:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10297:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10297:3:6"
																		},
																		"nativeSrc": "10297:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10297:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10271:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10271:6:6"
																},
																"nativeSrc": "10271:47:6",
																"nodeType": "YulFunctionCall",
																"src": "10271:47:6"
															},
															"nativeSrc": "10271:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "10271:47:6"
														},
														{
															"nativeSrc": "10327:139:6",
															"nodeType": "YulAssignment",
															"src": "10327:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10461:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "10461:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_52f98974f5795dc4fbc4cb1c8cc3e86f9c0b44655886b99eaaf2198dfc23b8a4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10335:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "10335:124:6"
																},
																"nativeSrc": "10335:131:6",
																"nodeType": "YulFunctionCall",
																"src": "10335:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10327:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10327:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_52f98974f5795dc4fbc4cb1c8cc3e86f9c0b44655886b99eaaf2198dfc23b8a4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10054:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10205:9:6",
														"nodeType": "YulTypedName",
														"src": "10205:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10220:4:6",
														"nodeType": "YulTypedName",
														"src": "10220:4:6",
														"type": ""
													}
												],
												"src": "10054:419:6"
											},
											{
												"body": {
													"nativeSrc": "10542:80:6",
													"nodeType": "YulBlock",
													"src": "10542:80:6",
													"statements": [
														{
															"nativeSrc": "10552:22:6",
															"nodeType": "YulAssignment",
															"src": "10552:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10567:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10567:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10561:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "10561:5:6"
																},
																"nativeSrc": "10561:13:6",
																"nodeType": "YulFunctionCall",
																"src": "10561:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10552:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "10552:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10610:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "10610:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "10583:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "10583:26:6"
																},
																"nativeSrc": "10583:33:6",
																"nodeType": "YulFunctionCall",
																"src": "10583:33:6"
															},
															"nativeSrc": "10583:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "10583:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "10479:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10520:6:6",
														"nodeType": "YulTypedName",
														"src": "10520:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10528:3:6",
														"nodeType": "YulTypedName",
														"src": "10528:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10536:5:6",
														"nodeType": "YulTypedName",
														"src": "10536:5:6",
														"type": ""
													}
												],
												"src": "10479:143:6"
											},
											{
												"body": {
													"nativeSrc": "10705:274:6",
													"nodeType": "YulBlock",
													"src": "10705:274:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "10751:83:6",
																"nodeType": "YulBlock",
																"src": "10751:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10753:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "10753:77:6"
																			},
																			"nativeSrc": "10753:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10753:79:6"
																		},
																		"nativeSrc": "10753:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "10753:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10726:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "10726:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10735:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10735:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10722:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10722:3:6"
																		},
																		"nativeSrc": "10722:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10722:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10747:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10747:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10718:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10718:3:6"
																},
																"nativeSrc": "10718:32:6",
																"nodeType": "YulFunctionCall",
																"src": "10718:32:6"
															},
															"nativeSrc": "10715:119:6",
															"nodeType": "YulIf",
															"src": "10715:119:6"
														},
														{
															"nativeSrc": "10844:128:6",
															"nodeType": "YulBlock",
															"src": "10844:128:6",
															"statements": [
																{
																	"nativeSrc": "10859:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10859:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10873:1:6",
																		"nodeType": "YulLiteral",
																		"src": "10873:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10863:6:6",
																			"nodeType": "YulTypedName",
																			"src": "10863:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10888:74:6",
																	"nodeType": "YulAssignment",
																	"src": "10888:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10934:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "10934:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10945:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "10945:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10930:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "10930:3:6"
																				},
																				"nativeSrc": "10930:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "10930:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10954:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "10954:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "10898:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "10898:31:6"
																		},
																		"nativeSrc": "10898:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10898:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10888:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "10888:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "10628:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10675:9:6",
														"nodeType": "YulTypedName",
														"src": "10675:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10686:7:6",
														"nodeType": "YulTypedName",
														"src": "10686:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10698:6:6",
														"nodeType": "YulTypedName",
														"src": "10698:6:6",
														"type": ""
													}
												],
												"src": "10628:351:6"
											},
											{
												"body": {
													"nativeSrc": "11091:71:6",
													"nodeType": "YulBlock",
													"src": "11091:71:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11113:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "11113:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11121:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11121:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11109:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11109:3:6"
																		},
																		"nativeSrc": "11109:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11109:14:6"
																	},
																	{
																		"hexValue": "736574526577617264733a207265776f72642072617465203d2030",
																		"kind": "string",
																		"nativeSrc": "11125:29:6",
																		"nodeType": "YulLiteral",
																		"src": "11125:29:6",
																		"type": "",
																		"value": "setRewards: reword rate = 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11102:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11102:6:6"
																},
																"nativeSrc": "11102:53:6",
																"nodeType": "YulFunctionCall",
																"src": "11102:53:6"
															},
															"nativeSrc": "11102:53:6",
															"nodeType": "YulExpressionStatement",
															"src": "11102:53:6"
														}
													]
												},
												"name": "store_literal_in_memory_9fe26c31df7ea9f31f127d886ab982fede6ecc7a20c6b24ff4c2789531aa65b1",
												"nativeSrc": "10985:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11083:6:6",
														"nodeType": "YulTypedName",
														"src": "11083:6:6",
														"type": ""
													}
												],
												"src": "10985:177:6"
											},
											{
												"body": {
													"nativeSrc": "11314:220:6",
													"nodeType": "YulBlock",
													"src": "11314:220:6",
													"statements": [
														{
															"nativeSrc": "11324:74:6",
															"nodeType": "YulAssignment",
															"src": "11324:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11390:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11390:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11395:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11395:2:6",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11331:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "11331:58:6"
																},
																"nativeSrc": "11331:67:6",
																"nodeType": "YulFunctionCall",
																"src": "11331:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11324:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11324:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11496:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11496:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9fe26c31df7ea9f31f127d886ab982fede6ecc7a20c6b24ff4c2789531aa65b1",
																	"nativeSrc": "11407:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "11407:88:6"
																},
																"nativeSrc": "11407:93:6",
																"nodeType": "YulFunctionCall",
																"src": "11407:93:6"
															},
															"nativeSrc": "11407:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "11407:93:6"
														},
														{
															"nativeSrc": "11509:19:6",
															"nodeType": "YulAssignment",
															"src": "11509:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11520:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11520:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11525:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11525:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11516:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11516:3:6"
																},
																"nativeSrc": "11516:12:6",
																"nodeType": "YulFunctionCall",
																"src": "11516:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11509:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11509:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9fe26c31df7ea9f31f127d886ab982fede6ecc7a20c6b24ff4c2789531aa65b1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11168:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11302:3:6",
														"nodeType": "YulTypedName",
														"src": "11302:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11310:3:6",
														"nodeType": "YulTypedName",
														"src": "11310:3:6",
														"type": ""
													}
												],
												"src": "11168:366:6"
											},
											{
												"body": {
													"nativeSrc": "11711:248:6",
													"nodeType": "YulBlock",
													"src": "11711:248:6",
													"statements": [
														{
															"nativeSrc": "11721:26:6",
															"nodeType": "YulAssignment",
															"src": "11721:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11733:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11733:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11744:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11744:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11729:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11729:3:6"
																},
																"nativeSrc": "11729:18:6",
																"nodeType": "YulFunctionCall",
																"src": "11729:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11721:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11721:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11768:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11768:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11779:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11779:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11764:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11764:3:6"
																		},
																		"nativeSrc": "11764:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11764:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11787:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "11787:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11793:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11793:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11783:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11783:3:6"
																		},
																		"nativeSrc": "11783:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11783:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11757:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11757:6:6"
																},
																"nativeSrc": "11757:47:6",
																"nodeType": "YulFunctionCall",
																"src": "11757:47:6"
															},
															"nativeSrc": "11757:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "11757:47:6"
														},
														{
															"nativeSrc": "11813:139:6",
															"nodeType": "YulAssignment",
															"src": "11813:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11947:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11947:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9fe26c31df7ea9f31f127d886ab982fede6ecc7a20c6b24ff4c2789531aa65b1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11821:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "11821:124:6"
																},
																"nativeSrc": "11821:131:6",
																"nodeType": "YulFunctionCall",
																"src": "11821:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11813:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11813:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9fe26c31df7ea9f31f127d886ab982fede6ecc7a20c6b24ff4c2789531aa65b1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11540:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11691:9:6",
														"nodeType": "YulTypedName",
														"src": "11691:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11706:4:6",
														"nodeType": "YulTypedName",
														"src": "11706:4:6",
														"type": ""
													}
												],
												"src": "11540:419:6"
											},
											{
												"body": {
													"nativeSrc": "12071:73:6",
													"nodeType": "YulBlock",
													"src": "12071:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12093:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "12093:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12101:1:6",
																				"nodeType": "YulLiteral",
																				"src": "12101:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12089:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12089:3:6"
																		},
																		"nativeSrc": "12089:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12089:14:6"
																	},
																	{
																		"hexValue": "736574526577617264733a2072657761726473203c2062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "12105:31:6",
																		"nodeType": "YulLiteral",
																		"src": "12105:31:6",
																		"type": "",
																		"value": "setRewards: rewards < balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12082:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12082:6:6"
																},
																"nativeSrc": "12082:55:6",
																"nodeType": "YulFunctionCall",
																"src": "12082:55:6"
															},
															"nativeSrc": "12082:55:6",
															"nodeType": "YulExpressionStatement",
															"src": "12082:55:6"
														}
													]
												},
												"name": "store_literal_in_memory_f259ffb3ec6756755f24a88d5ebe34e47809c81913eac2caa6345442399cee17",
												"nativeSrc": "11965:179:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12063:6:6",
														"nodeType": "YulTypedName",
														"src": "12063:6:6",
														"type": ""
													}
												],
												"src": "11965:179:6"
											},
											{
												"body": {
													"nativeSrc": "12296:220:6",
													"nodeType": "YulBlock",
													"src": "12296:220:6",
													"statements": [
														{
															"nativeSrc": "12306:74:6",
															"nodeType": "YulAssignment",
															"src": "12306:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12372:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12372:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12377:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12377:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12313:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "12313:58:6"
																},
																"nativeSrc": "12313:67:6",
																"nodeType": "YulFunctionCall",
																"src": "12313:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12306:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12306:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12478:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12478:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f259ffb3ec6756755f24a88d5ebe34e47809c81913eac2caa6345442399cee17",
																	"nativeSrc": "12389:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "12389:88:6"
																},
																"nativeSrc": "12389:93:6",
																"nodeType": "YulFunctionCall",
																"src": "12389:93:6"
															},
															"nativeSrc": "12389:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "12389:93:6"
														},
														{
															"nativeSrc": "12491:19:6",
															"nodeType": "YulAssignment",
															"src": "12491:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12502:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12502:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12507:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12507:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12498:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12498:3:6"
																},
																"nativeSrc": "12498:12:6",
																"nodeType": "YulFunctionCall",
																"src": "12498:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12491:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12491:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f259ffb3ec6756755f24a88d5ebe34e47809c81913eac2caa6345442399cee17_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12150:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12284:3:6",
														"nodeType": "YulTypedName",
														"src": "12284:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12292:3:6",
														"nodeType": "YulTypedName",
														"src": "12292:3:6",
														"type": ""
													}
												],
												"src": "12150:366:6"
											},
											{
												"body": {
													"nativeSrc": "12693:248:6",
													"nodeType": "YulBlock",
													"src": "12693:248:6",
													"statements": [
														{
															"nativeSrc": "12703:26:6",
															"nodeType": "YulAssignment",
															"src": "12703:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12715:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "12715:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12726:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12726:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12711:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12711:3:6"
																},
																"nativeSrc": "12711:18:6",
																"nodeType": "YulFunctionCall",
																"src": "12711:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12703:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12703:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12750:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12750:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12761:1:6",
																				"nodeType": "YulLiteral",
																				"src": "12761:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12746:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12746:3:6"
																		},
																		"nativeSrc": "12746:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12746:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12769:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "12769:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12775:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12775:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12765:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12765:3:6"
																		},
																		"nativeSrc": "12765:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12765:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12739:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12739:6:6"
																},
																"nativeSrc": "12739:47:6",
																"nodeType": "YulFunctionCall",
																"src": "12739:47:6"
															},
															"nativeSrc": "12739:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "12739:47:6"
														},
														{
															"nativeSrc": "12795:139:6",
															"nodeType": "YulAssignment",
															"src": "12795:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12929:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "12929:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f259ffb3ec6756755f24a88d5ebe34e47809c81913eac2caa6345442399cee17_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12803:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "12803:124:6"
																},
																"nativeSrc": "12803:131:6",
																"nodeType": "YulFunctionCall",
																"src": "12803:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12795:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12795:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f259ffb3ec6756755f24a88d5ebe34e47809c81913eac2caa6345442399cee17__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12522:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12673:9:6",
														"nodeType": "YulTypedName",
														"src": "12673:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12688:4:6",
														"nodeType": "YulTypedName",
														"src": "12688:4:6",
														"type": ""
													}
												],
												"src": "12522:419:6"
											},
											{
												"body": {
													"nativeSrc": "13053:114:6",
													"nodeType": "YulBlock",
													"src": "13053:114:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13075:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "13075:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13083:1:6",
																				"nodeType": "YulLiteral",
																				"src": "13083:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13071:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13071:3:6"
																		},
																		"nativeSrc": "13071:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13071:14:6"
																	},
																	{
																		"hexValue": "2069742063616e27742062652073657420647572696e6720726577617264696e",
																		"kind": "string",
																		"nativeSrc": "13087:34:6",
																		"nodeType": "YulLiteral",
																		"src": "13087:34:6",
																		"type": "",
																		"value": " it can't be set during rewardin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13064:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13064:6:6"
																},
																"nativeSrc": "13064:58:6",
																"nodeType": "YulFunctionCall",
																"src": "13064:58:6"
															},
															"nativeSrc": "13064:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "13064:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13143:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "13143:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13151:2:6",
																				"nodeType": "YulLiteral",
																				"src": "13151:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13139:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13139:3:6"
																		},
																		"nativeSrc": "13139:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13139:15:6"
																	},
																	{
																		"hexValue": "67",
																		"kind": "string",
																		"nativeSrc": "13156:3:6",
																		"nodeType": "YulLiteral",
																		"src": "13156:3:6",
																		"type": "",
																		"value": "g"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13132:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13132:6:6"
																},
																"nativeSrc": "13132:28:6",
																"nodeType": "YulFunctionCall",
																"src": "13132:28:6"
															},
															"nativeSrc": "13132:28:6",
															"nodeType": "YulExpressionStatement",
															"src": "13132:28:6"
														}
													]
												},
												"name": "store_literal_in_memory_45e27ece88b57c14620e031a846cfb3adfd0a2babf5ff90170f42ce8f22132f5",
												"nativeSrc": "12947:220:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13045:6:6",
														"nodeType": "YulTypedName",
														"src": "13045:6:6",
														"type": ""
													}
												],
												"src": "12947:220:6"
											},
											{
												"body": {
													"nativeSrc": "13319:220:6",
													"nodeType": "YulBlock",
													"src": "13319:220:6",
													"statements": [
														{
															"nativeSrc": "13329:74:6",
															"nodeType": "YulAssignment",
															"src": "13329:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13395:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13395:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13400:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13400:2:6",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13336:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "13336:58:6"
																},
																"nativeSrc": "13336:67:6",
																"nodeType": "YulFunctionCall",
																"src": "13336:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13329:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13329:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13501:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13501:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_45e27ece88b57c14620e031a846cfb3adfd0a2babf5ff90170f42ce8f22132f5",
																	"nativeSrc": "13412:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "13412:88:6"
																},
																"nativeSrc": "13412:93:6",
																"nodeType": "YulFunctionCall",
																"src": "13412:93:6"
															},
															"nativeSrc": "13412:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "13412:93:6"
														},
														{
															"nativeSrc": "13514:19:6",
															"nodeType": "YulAssignment",
															"src": "13514:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13525:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13525:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13530:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13530:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13521:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13521:3:6"
																},
																"nativeSrc": "13521:12:6",
																"nodeType": "YulFunctionCall",
																"src": "13521:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13514:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13514:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_45e27ece88b57c14620e031a846cfb3adfd0a2babf5ff90170f42ce8f22132f5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13173:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13307:3:6",
														"nodeType": "YulTypedName",
														"src": "13307:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13315:3:6",
														"nodeType": "YulTypedName",
														"src": "13315:3:6",
														"type": ""
													}
												],
												"src": "13173:366:6"
											},
											{
												"body": {
													"nativeSrc": "13716:248:6",
													"nodeType": "YulBlock",
													"src": "13716:248:6",
													"statements": [
														{
															"nativeSrc": "13726:26:6",
															"nodeType": "YulAssignment",
															"src": "13726:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13738:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "13738:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13749:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13749:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13734:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13734:3:6"
																},
																"nativeSrc": "13734:18:6",
																"nodeType": "YulFunctionCall",
																"src": "13734:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13726:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13726:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13773:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13773:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13784:1:6",
																				"nodeType": "YulLiteral",
																				"src": "13784:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13769:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13769:3:6"
																		},
																		"nativeSrc": "13769:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13769:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13792:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "13792:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13798:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13798:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13788:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13788:3:6"
																		},
																		"nativeSrc": "13788:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13788:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13762:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13762:6:6"
																},
																"nativeSrc": "13762:47:6",
																"nodeType": "YulFunctionCall",
																"src": "13762:47:6"
															},
															"nativeSrc": "13762:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "13762:47:6"
														},
														{
															"nativeSrc": "13818:139:6",
															"nodeType": "YulAssignment",
															"src": "13818:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13952:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "13952:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_45e27ece88b57c14620e031a846cfb3adfd0a2babf5ff90170f42ce8f22132f5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13826:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "13826:124:6"
																},
																"nativeSrc": "13826:131:6",
																"nodeType": "YulFunctionCall",
																"src": "13826:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13818:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13818:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45e27ece88b57c14620e031a846cfb3adfd0a2babf5ff90170f42ce8f22132f5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13545:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13696:9:6",
														"nodeType": "YulTypedName",
														"src": "13696:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13711:4:6",
														"nodeType": "YulTypedName",
														"src": "13711:4:6",
														"type": ""
													}
												],
												"src": "13545:419:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$729_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$729_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_faeda1cde2954fb20c452e57322e586e176b69582241d304d446f54080fcd258(memPtr) {\n\n        mstore(add(memPtr, 0), \"amount = 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_faeda1cde2954fb20c452e57322e586e176b69582241d304d446f54080fcd258_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 10)\n        store_literal_in_memory_faeda1cde2954fb20c452e57322e586e176b69582241d304d446f54080fcd258(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_faeda1cde2954fb20c452e57322e586e176b69582241d304d446f54080fcd258__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_faeda1cde2954fb20c452e57322e586e176b69582241d304d446f54080fcd258_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_1092970c8e9ac56f5cdc3563e775f45e6ec14c0adcb274a0315b4f99dd293331(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only owner is allowed.\")\n\n    }\n\n    function abi_encode_t_stringliteral_1092970c8e9ac56f5cdc3563e775f45e6ec14c0adcb274a0315b4f99dd293331_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_1092970c8e9ac56f5cdc3563e775f45e6ec14c0adcb274a0315b4f99dd293331(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1092970c8e9ac56f5cdc3563e775f45e6ec14c0adcb274a0315b4f99dd293331__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1092970c8e9ac56f5cdc3563e775f45e6ec14c0adcb274a0315b4f99dd293331_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c2370529a6f1a6a816c19114b0cc9d00969efb8f345ea23417ccbd250923201f(memPtr) {\n\n        mstore(add(memPtr, 0), \"setRewards: set the duration fir\")\n\n        mstore(add(memPtr, 32), \"st.\")\n\n    }\n\n    function abi_encode_t_stringliteral_c2370529a6f1a6a816c19114b0cc9d00969efb8f345ea23417ccbd250923201f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_c2370529a6f1a6a816c19114b0cc9d00969efb8f345ea23417ccbd250923201f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c2370529a6f1a6a816c19114b0cc9d00969efb8f345ea23417ccbd250923201f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c2370529a6f1a6a816c19114b0cc9d00969efb8f345ea23417ccbd250923201f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_52f98974f5795dc4fbc4cb1c8cc3e86f9c0b44655886b99eaaf2198dfc23b8a4(memPtr) {\n\n        mstore(add(memPtr, 0), \"setRewards: rewords amount = 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_52f98974f5795dc4fbc4cb1c8cc3e86f9c0b44655886b99eaaf2198dfc23b8a4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_52f98974f5795dc4fbc4cb1c8cc3e86f9c0b44655886b99eaaf2198dfc23b8a4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_52f98974f5795dc4fbc4cb1c8cc3e86f9c0b44655886b99eaaf2198dfc23b8a4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_52f98974f5795dc4fbc4cb1c8cc3e86f9c0b44655886b99eaaf2198dfc23b8a4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_9fe26c31df7ea9f31f127d886ab982fede6ecc7a20c6b24ff4c2789531aa65b1(memPtr) {\n\n        mstore(add(memPtr, 0), \"setRewards: reword rate = 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_9fe26c31df7ea9f31f127d886ab982fede6ecc7a20c6b24ff4c2789531aa65b1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_9fe26c31df7ea9f31f127d886ab982fede6ecc7a20c6b24ff4c2789531aa65b1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9fe26c31df7ea9f31f127d886ab982fede6ecc7a20c6b24ff4c2789531aa65b1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9fe26c31df7ea9f31f127d886ab982fede6ecc7a20c6b24ff4c2789531aa65b1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f259ffb3ec6756755f24a88d5ebe34e47809c81913eac2caa6345442399cee17(memPtr) {\n\n        mstore(add(memPtr, 0), \"setRewards: rewards < balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_f259ffb3ec6756755f24a88d5ebe34e47809c81913eac2caa6345442399cee17_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_f259ffb3ec6756755f24a88d5ebe34e47809c81913eac2caa6345442399cee17(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f259ffb3ec6756755f24a88d5ebe34e47809c81913eac2caa6345442399cee17__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f259ffb3ec6756755f24a88d5ebe34e47809c81913eac2caa6345442399cee17_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45e27ece88b57c14620e031a846cfb3adfd0a2babf5ff90170f42ce8f22132f5(memPtr) {\n\n        mstore(add(memPtr, 0), \" it can't be set during rewardin\")\n\n        mstore(add(memPtr, 32), \"g\")\n\n    }\n\n    function abi_encode_t_stringliteral_45e27ece88b57c14620e031a846cfb3adfd0a2babf5ff90170f42ce8f22132f5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_45e27ece88b57c14620e031a846cfb3adfd0a2babf5ff90170f42ce8f22132f5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45e27ece88b57c14620e031a846cfb3adfd0a2babf5ff90170f42ce8f22132f5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45e27ece88b57c14620e031a846cfb3adfd0a2babf5ff90170f42ce8f22132f5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"791": [
									{
										"length": 32,
										"start": 1912
									},
									{
										"length": 32,
										"start": 2201
									},
									{
										"length": 32,
										"start": 2566
									}
								],
								"794": [
									{
										"length": 32,
										"start": 1280
									},
									{
										"length": 32,
										"start": 3341
									},
									{
										"length": 32,
										"start": 3532
									},
									{
										"length": 32,
										"start": 3972
									}
								],
								"796": [
									{
										"length": 32,
										"start": 2237
									},
									{
										"length": 32,
										"start": 2857
									},
									{
										"length": 32,
										"start": 3401
									},
									{
										"length": 32,
										"start": 4031
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100fd575f3560e01c806370641a3611610095578063c7a29c6f11610064578063c7a29c6f14610263578063c964f5851461027f578063d1af0c7d1461029d578063f6be71d1146102bb576100fd565b806370641a36146101ed57806372f702f31461020b5780638da5cb5b14610229578063a694fc3a14610247576100fd565b8063350fd407116100d1578063350fd407146101755780634334f3ff14610193578063523bc7d5146101b157806367d3b488146101cf576100fd565b80628cc262146101015780630572b0cc146101315780630fb5a6b41461013b5780632e1a7d4d14610159575b5f80fd5b61011b600480360381019061011691906110fa565b6102d7565b604051610128919061113d565b60405180910390f35b6101396103d2565b005b6101436105e1565b604051610150919061113d565b60405180910390f35b610173600480360381019061016e9190611180565b6105e7565b005b61017d610816565b60405161018a919061113d565b60405180910390f35b61019b61081c565b6040516101a8919061113d565b60405180910390f35b6101b9610821565b6040516101c6919061113d565b60405180910390f35b6101d7610827565b6040516101e4919061113d565b60405180910390f35b6101f561082d565b604051610202919061113d565b60405180910390f35b610213610897565b6040516102209190611206565b60405180910390f35b6102316108bb565b60405161023e919061122e565b60405180910390f35b610261600480360381019061025c9190611180565b6108df565b005b61027d60048036038101906102789190611180565b610b10565b005b610287610f7c565b604051610294919061113d565b60405180910390f35b6102a5610f82565b6040516102b29190611206565b60405180910390f35b6102d560048036038101906102d09190611180565b610fa6565b005b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054670de0b6b3a764000060065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461036561082d565b61036f9190611274565b60085f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546103b791906112a7565b6103c19190611315565b6103cb9190611345565b9050919050565b336103db61082d565b6005819055506103ed42600354611083565b6002819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146104b55761042f816102d7565b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060055460065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111156105dd577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610559929190611378565b6020604051808303815f875af1158015610575573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061059991906113d4565b505f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5050565b60015481565b336105f061082d565b60058190555061060242600354611083565b6002819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106ca57610644816102d7565b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060055460065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5f821161070c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070390611459565b60405180910390fd5b8160085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107589190611274565b92505081905550815f8082825461076f9190611274565b925050819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016107d1929190611378565b6020604051808303815f875af11580156107ed573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061081191906113d4565b505050565b60055481565b5f5481565b60045481565b60035481565b5f805f540361083f575f549050610894565b670de0b6b3a76400005f5460025461085960035442611083565b6108639190611274565b60045461087091906112a7565b61087a9190611315565b61088491906112a7565b6005546108919190611345565b90505b90565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b336108e861082d565b6005819055506108fa42600354611083565b6002819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146109c25761093c816102d7565b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060055460065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5f8211610a04576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fb90611459565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610a6193929190611477565b6020604051808303815f875af1158015610a7d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610aa191906113d4565b508160085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610aee9190611345565b92505081905550815f80828254610b059190611345565b925050819055505050565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610b9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b95906114f6565b60405180910390fd5b5f610ba761082d565b600581905550610bb942600354611083565b6002819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c8157610bfb816102d7565b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060055460065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5f60015490505f8103610cc9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc090611584565b60405180910390fd5b5f8311610d0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d02906115ec565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd7f000000000000000000000000000000000000000000000000000000000000000030866040518463ffffffff1660e01b8152600401610d8893929190611477565b6020604051808303815f875af1158015610da4573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610dc891906113d4565b505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610e23919061122e565b602060405180830381865afa158015610e3e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e62919061161e565b90505f4290505f6003549050808210610e8c578386610e819190611315565b600481905550610ec2565b83868383610e9a9190611274565b600454610ea791906112a7565b610eb19190611345565b610ebb9190611315565b6004819055505b5f60045411610f06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efd90611693565b60405180910390fd5b8284600454610f1591906112a7565b1115610f56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4d906116fb565b60405180910390fd5b60015482610f649190611345565b90508060038190555081600281905550505050505050565b60025481565b7f000000000000000000000000000000000000000000000000000000000000000081565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614611034576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102b906114f6565b60405180910390fd5b600354421015611079576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107090611789565b60405180910390fd5b8060018190555050565b5f818311156110925781611094565b825b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6110c9826110a0565b9050919050565b6110d9816110bf565b81146110e3575f80fd5b50565b5f813590506110f4816110d0565b92915050565b5f6020828403121561110f5761110e61109c565b5b5f61111c848285016110e6565b91505092915050565b5f819050919050565b61113781611125565b82525050565b5f6020820190506111505f83018461112e565b92915050565b61115f81611125565b8114611169575f80fd5b50565b5f8135905061117a81611156565b92915050565b5f602082840312156111955761119461109c565b5b5f6111a28482850161116c565b91505092915050565b5f819050919050565b5f6111ce6111c96111c4846110a0565b6111ab565b6110a0565b9050919050565b5f6111df826111b4565b9050919050565b5f6111f0826111d5565b9050919050565b611200816111e6565b82525050565b5f6020820190506112195f8301846111f7565b92915050565b611228816110bf565b82525050565b5f6020820190506112415f83018461121f565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61127e82611125565b915061128983611125565b92508282039050818111156112a1576112a0611247565b5b92915050565b5f6112b182611125565b91506112bc83611125565b92508282026112ca81611125565b915082820484148315176112e1576112e0611247565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61131f82611125565b915061132a83611125565b92508261133a576113396112e8565b5b828204905092915050565b5f61134f82611125565b915061135a83611125565b925082820190508082111561137257611371611247565b5b92915050565b5f60408201905061138b5f83018561121f565b611398602083018461112e565b9392505050565b5f8115159050919050565b6113b38161139f565b81146113bd575f80fd5b50565b5f815190506113ce816113aa565b92915050565b5f602082840312156113e9576113e861109c565b5b5f6113f6848285016113c0565b91505092915050565b5f82825260208201905092915050565b7f616d6f756e74203d2030000000000000000000000000000000000000000000005f82015250565b5f611443600a836113ff565b915061144e8261140f565b602082019050919050565b5f6020820190508181035f83015261147081611437565b9050919050565b5f60608201905061148a5f83018661121f565b611497602083018561121f565b6114a4604083018461112e565b949350505050565b7f4f6e6c79206f776e657220697320616c6c6f7765642e000000000000000000005f82015250565b5f6114e06016836113ff565b91506114eb826114ac565b602082019050919050565b5f6020820190508181035f83015261150d816114d4565b9050919050565b7f736574526577617264733a2073657420746865206475726174696f6e206669725f8201527f73742e0000000000000000000000000000000000000000000000000000000000602082015250565b5f61156e6023836113ff565b915061157982611514565b604082019050919050565b5f6020820190508181035f83015261159b81611562565b9050919050565b7f736574526577617264733a207265776f72647320616d6f756e74203d203000005f82015250565b5f6115d6601e836113ff565b91506115e1826115a2565b602082019050919050565b5f6020820190508181035f830152611603816115ca565b9050919050565b5f8151905061161881611156565b92915050565b5f602082840312156116335761163261109c565b5b5f6116408482850161160a565b91505092915050565b7f736574526577617264733a207265776f72642072617465203d203000000000005f82015250565b5f61167d601b836113ff565b915061168882611649565b602082019050919050565b5f6020820190508181035f8301526116aa81611671565b9050919050565b7f736574526577617264733a2072657761726473203c2062616c616e63650000005f82015250565b5f6116e5601d836113ff565b91506116f0826116b1565b602082019050919050565b5f6020820190508181035f830152611712816116d9565b9050919050565b7f2069742063616e27742062652073657420647572696e6720726577617264696e5f8201527f6700000000000000000000000000000000000000000000000000000000000000602082015250565b5f6117736021836113ff565b915061177e82611719565b604082019050919050565b5f6020820190508181035f8301526117a081611767565b905091905056fea26469706673582212200819a87068e8c0401b30be9c9a5c42f5253767251ddaf1fd1224a1ffd510610f64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70641A36 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xC7A29C6F GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC7A29C6F EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xC964F585 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0xF6BE71D1 EQ PUSH2 0x2BB JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x70641A36 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x247 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x350FD407 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x350FD407 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x4334F3FF EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x523BC7D5 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x67D3B488 EQ PUSH2 0x1CF JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x572B0CC EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x159 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x10FA JUMP JUMPDEST PUSH2 0x2D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x113D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x3D2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x143 PUSH2 0x5E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x113D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x1180 JUMP JUMPDEST PUSH2 0x5E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17D PUSH2 0x816 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x113D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH2 0x81C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x113D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH2 0x821 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x113D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D7 PUSH2 0x827 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x113D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F5 PUSH2 0x82D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x113D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x213 PUSH2 0x897 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x1206 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH2 0x8BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x261 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x1180 JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x1180 JUMP JUMPDEST PUSH2 0xB10 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x287 PUSH2 0xF7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x113D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A5 PUSH2 0xF82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1206 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x1180 JUMP JUMPDEST PUSH2 0xFA6 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x365 PUSH2 0x82D JUMP JUMPDEST PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x1274 JUMP JUMPDEST PUSH1 0x8 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x12A7 JUMP JUMPDEST PUSH2 0x3C1 SWAP2 SWAP1 PUSH2 0x1315 JUMP JUMPDEST PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x1345 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH2 0x3DB PUSH2 0x82D JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x3ED TIMESTAMP PUSH1 0x3 SLOAD PUSH2 0x1083 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4B5 JUMPI PUSH2 0x42F DUP2 PUSH2 0x2D7 JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x5 SLOAD PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x5DD JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x559 SWAP3 SWAP2 SWAP1 PUSH2 0x1378 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x575 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x599 SWAP2 SWAP1 PUSH2 0x13D4 JUMP JUMPDEST POP PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH2 0x5F0 PUSH2 0x82D JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x602 TIMESTAMP PUSH1 0x3 SLOAD PUSH2 0x1083 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6CA JUMPI PUSH2 0x644 DUP2 PUSH2 0x2D7 JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x5 SLOAD PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 DUP3 GT PUSH2 0x70C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x703 SWAP1 PUSH2 0x1459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x758 SWAP2 SWAP1 PUSH2 0x1274 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x76F SWAP2 SWAP1 PUSH2 0x1274 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D1 SWAP3 SWAP2 SWAP1 PUSH2 0x1378 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7ED JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x811 SWAP2 SWAP1 PUSH2 0x13D4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SLOAD SUB PUSH2 0x83F JUMPI PUSH0 SLOAD SWAP1 POP PUSH2 0x894 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH0 SLOAD PUSH1 0x2 SLOAD PUSH2 0x859 PUSH1 0x3 SLOAD TIMESTAMP PUSH2 0x1083 JUMP JUMPDEST PUSH2 0x863 SWAP2 SWAP1 PUSH2 0x1274 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x870 SWAP2 SWAP1 PUSH2 0x12A7 JUMP JUMPDEST PUSH2 0x87A SWAP2 SWAP1 PUSH2 0x1315 JUMP JUMPDEST PUSH2 0x884 SWAP2 SWAP1 PUSH2 0x12A7 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x891 SWAP2 SWAP1 PUSH2 0x1345 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST CALLER PUSH2 0x8E8 PUSH2 0x82D JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x8FA TIMESTAMP PUSH1 0x3 SLOAD PUSH2 0x1083 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9C2 JUMPI PUSH2 0x93C DUP2 PUSH2 0x2D7 JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x5 SLOAD PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 DUP3 GT PUSH2 0xA04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FB SWAP1 PUSH2 0x1459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA61 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1477 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA7D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAA1 SWAP2 SWAP1 PUSH2 0x13D4 JUMP JUMPDEST POP DUP2 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xAEE SWAP2 SWAP1 PUSH2 0x1345 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH0 DUP1 DUP3 DUP3 SLOAD PUSH2 0xB05 SWAP2 SWAP1 PUSH2 0x1345 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB95 SWAP1 PUSH2 0x14F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xBA7 PUSH2 0x82D JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0xBB9 TIMESTAMP PUSH1 0x3 SLOAD PUSH2 0x1083 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC81 JUMPI PUSH2 0xBFB DUP2 PUSH2 0x2D7 JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x5 SLOAD PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH1 0x1 SLOAD SWAP1 POP PUSH0 DUP2 SUB PUSH2 0xCC9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x1584 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT PUSH2 0xD0B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD02 SWAP1 PUSH2 0x15EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH32 0x0 ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD88 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1477 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDA4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDC8 SWAP2 SWAP1 PUSH2 0x13D4 JUMP JUMPDEST POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE23 SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE3E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE62 SWAP2 SWAP1 PUSH2 0x161E JUMP JUMPDEST SWAP1 POP PUSH0 TIMESTAMP SWAP1 POP PUSH0 PUSH1 0x3 SLOAD SWAP1 POP DUP1 DUP3 LT PUSH2 0xE8C JUMPI DUP4 DUP7 PUSH2 0xE81 SWAP2 SWAP1 PUSH2 0x1315 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0xEC2 JUMP JUMPDEST DUP4 DUP7 DUP4 DUP4 PUSH2 0xE9A SWAP2 SWAP1 PUSH2 0x1274 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xEA7 SWAP2 SWAP1 PUSH2 0x12A7 JUMP JUMPDEST PUSH2 0xEB1 SWAP2 SWAP1 PUSH2 0x1345 JUMP JUMPDEST PUSH2 0xEBB SWAP2 SWAP1 PUSH2 0x1315 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH1 0x4 SLOAD GT PUSH2 0xF06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFD SWAP1 PUSH2 0x1693 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP5 PUSH1 0x4 SLOAD PUSH2 0xF15 SWAP2 SWAP1 PUSH2 0x12A7 JUMP JUMPDEST GT ISZERO PUSH2 0xF56 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4D SWAP1 PUSH2 0x16FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP3 PUSH2 0xF64 SWAP2 SWAP1 PUSH2 0x1345 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1034 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102B SWAP1 PUSH2 0x14F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP LT ISZERO PUSH2 0x1079 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1070 SWAP1 PUSH2 0x1789 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 GT ISZERO PUSH2 0x1092 JUMPI DUP2 PUSH2 0x1094 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10C9 DUP3 PUSH2 0x10A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10D9 DUP2 PUSH2 0x10BF JUMP JUMPDEST DUP2 EQ PUSH2 0x10E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10F4 DUP2 PUSH2 0x10D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x110F JUMPI PUSH2 0x110E PUSH2 0x109C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x111C DUP5 DUP3 DUP6 ADD PUSH2 0x10E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1137 DUP2 PUSH2 0x1125 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1150 PUSH0 DUP4 ADD DUP5 PUSH2 0x112E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x115F DUP2 PUSH2 0x1125 JUMP JUMPDEST DUP2 EQ PUSH2 0x1169 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x117A DUP2 PUSH2 0x1156 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1195 JUMPI PUSH2 0x1194 PUSH2 0x109C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11A2 DUP5 DUP3 DUP6 ADD PUSH2 0x116C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11CE PUSH2 0x11C9 PUSH2 0x11C4 DUP5 PUSH2 0x10A0 JUMP JUMPDEST PUSH2 0x11AB JUMP JUMPDEST PUSH2 0x10A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11DF DUP3 PUSH2 0x11B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11F0 DUP3 PUSH2 0x11D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1200 DUP2 PUSH2 0x11E6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1219 PUSH0 DUP4 ADD DUP5 PUSH2 0x11F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1228 DUP2 PUSH2 0x10BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1241 PUSH0 DUP4 ADD DUP5 PUSH2 0x121F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x127E DUP3 PUSH2 0x1125 JUMP JUMPDEST SWAP2 POP PUSH2 0x1289 DUP4 PUSH2 0x1125 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x12A1 JUMPI PUSH2 0x12A0 PUSH2 0x1247 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12B1 DUP3 PUSH2 0x1125 JUMP JUMPDEST SWAP2 POP PUSH2 0x12BC DUP4 PUSH2 0x1125 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x12CA DUP2 PUSH2 0x1125 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x12E1 JUMPI PUSH2 0x12E0 PUSH2 0x1247 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x131F DUP3 PUSH2 0x1125 JUMP JUMPDEST SWAP2 POP PUSH2 0x132A DUP4 PUSH2 0x1125 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x133A JUMPI PUSH2 0x1339 PUSH2 0x12E8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x134F DUP3 PUSH2 0x1125 JUMP JUMPDEST SWAP2 POP PUSH2 0x135A DUP4 PUSH2 0x1125 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1372 JUMPI PUSH2 0x1371 PUSH2 0x1247 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x138B PUSH0 DUP4 ADD DUP6 PUSH2 0x121F JUMP JUMPDEST PUSH2 0x1398 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x112E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13B3 DUP2 PUSH2 0x139F JUMP JUMPDEST DUP2 EQ PUSH2 0x13BD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x13CE DUP2 PUSH2 0x13AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13E9 JUMPI PUSH2 0x13E8 PUSH2 0x109C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13F6 DUP5 DUP3 DUP6 ADD PUSH2 0x13C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x616D6F756E74203D203000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1443 PUSH1 0xA DUP4 PUSH2 0x13FF JUMP JUMPDEST SWAP2 POP PUSH2 0x144E DUP3 PUSH2 0x140F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1470 DUP2 PUSH2 0x1437 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x148A PUSH0 DUP4 ADD DUP7 PUSH2 0x121F JUMP JUMPDEST PUSH2 0x1497 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x121F JUMP JUMPDEST PUSH2 0x14A4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x112E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E657220697320616C6C6F7765642E00000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14E0 PUSH1 0x16 DUP4 PUSH2 0x13FF JUMP JUMPDEST SWAP2 POP PUSH2 0x14EB DUP3 PUSH2 0x14AC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x150D DUP2 PUSH2 0x14D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x736574526577617264733A2073657420746865206475726174696F6E20666972 PUSH0 DUP3 ADD MSTORE PUSH32 0x73742E0000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x156E PUSH1 0x23 DUP4 PUSH2 0x13FF JUMP JUMPDEST SWAP2 POP PUSH2 0x1579 DUP3 PUSH2 0x1514 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x159B DUP2 PUSH2 0x1562 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x736574526577617264733A207265776F72647320616D6F756E74203D20300000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15D6 PUSH1 0x1E DUP4 PUSH2 0x13FF JUMP JUMPDEST SWAP2 POP PUSH2 0x15E1 DUP3 PUSH2 0x15A2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1603 DUP2 PUSH2 0x15CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1618 DUP2 PUSH2 0x1156 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1633 JUMPI PUSH2 0x1632 PUSH2 0x109C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1640 DUP5 DUP3 DUP6 ADD PUSH2 0x160A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x736574526577617264733A207265776F72642072617465203D20300000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x167D PUSH1 0x1B DUP4 PUSH2 0x13FF JUMP JUMPDEST SWAP2 POP PUSH2 0x1688 DUP3 PUSH2 0x1649 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16AA DUP2 PUSH2 0x1671 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x736574526577617264733A2072657761726473203C2062616C616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x16E5 PUSH1 0x1D DUP4 PUSH2 0x13FF JUMP JUMPDEST SWAP2 POP PUSH2 0x16F0 DUP3 PUSH2 0x16B1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1712 DUP2 PUSH2 0x16D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2069742063616E27742062652073657420647572696E6720726577617264696E PUSH0 DUP3 ADD MSTORE PUSH32 0x6700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1773 PUSH1 0x21 DUP4 PUSH2 0x13FF JUMP JUMPDEST SWAP2 POP PUSH2 0x177E DUP3 PUSH2 0x1719 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17A0 DUP2 PUSH2 0x1767 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD NOT 0xA8 PUSH17 0x68E8C0401B30BE9C9A5C42F5253767251D 0xDA CALL REVERT SLT 0x24 LOG1 SELFDESTRUCT 0xD5 LT PUSH2 0xF64 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "119:7385:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6763:430;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7248:251;;;:::i;:::-;;403:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5671:542;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;667:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;316:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;600:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;531:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6331:380;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;144:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;232:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5034:590;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2403:2595;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;456:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;187:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2089:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6763:430;6817:4;7164:11;:21;7176:8;7164:21;;;;;;;;;;;;;;;;7157:4;7120:23;:33;7144:8;7120:33;;;;;;;;;;;;;;;;7100:17;:15;:17::i;:::-;:53;;;;:::i;:::-;7069:17;:27;7087:8;7069:27;;;;;;;;;;;;;;;;:85;;;;:::i;:::-;:92;;;;:::i;:::-;:116;;;;:::i;:::-;7062:123;;6763:430;;;:::o;7248:251::-;7293:10;1710:17;:15;:17::i;:::-;1686:21;:41;;;;1749:31;1754:15;1771:8;;1749:4;:31::i;:::-;1738:8;:42;;;;1814:1;1794:22;;:8;:22;;;1791:165;;1856:16;1863:8;1856:6;:16::i;:::-;1832:11;:21;1844:8;1832:21;;;;;;;;;;;;;;;:40;;;;1923:21;;1887:23;:33;1911:8;1887:33;;;;;;;;;;;;;;;:57;;;;1791:165;7315:12:::1;7330:11;:23;7342:10;7330:23;;;;;;;;;;;;;;;;7315:38;;7377:1;7367:7;:11;7364:126;;;7394:12;:21;;;7416:10;7428:7;7394:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7477:1;7451:11;:23;7463:10;7451:23;;;;;;;;;;;;;;;:27;;;;7364:126;7304:195;7248:251:::0;:::o;403:20::-;;;;:::o;5671:542::-;5726:10;1710:17;:15;:17::i;:::-;1686:21;:41;;;;1749:31;1754:15;1771:8;;1749:4;:31::i;:::-;1738:8;:42;;;;1814:1;1794:22;;:8;:22;;;1791:165;;1856:16;1863:8;1856:6;:16::i;:::-;1832:11;:21;1844:8;1832:21;;;;;;;;;;;;;;;:40;;;;1923:21;;1887:23;:33;1911:8;1887:33;;;;;;;;;;;;;;;:57;;;;1791:165;6039:1:::1;6029:7;:11;6021:34;;;;;;;;;;;;:::i;:::-;;;;;;;;;6099:7;6066:17;:29;6084:10;6066:29;;;;;;;;;;;;;;;;:40;;;;;;;:::i;:::-;;;;;;;;6145:7;6117:24;::::0;:35:::1;;;;;;;:::i;:::-;;;;;;;;6163:12;:21;;;6185:10;6197:7;6163:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5671:542:::0;;:::o;667:33::-;;;;:::o;316:36::-;;;;:::o;600:23::-;;;;:::o;531:20::-;;;;:::o;6331:380::-;6378:4;6425:1;6397:24;;:29;6394:91;;6449:24;;6442:31;;;;6394:91;6688:4;6661:24;;6649:8;;6615:31;6620:8;;6630:15;6615:4;:31::i;:::-;:42;;;;:::i;:::-;6600:11;;:58;;;;:::i;:::-;:85;;;;:::i;:::-;:92;;;;:::i;:::-;6575:21;;:118;;;;:::i;:::-;6568:125;;6331:380;;:::o;144:36::-;;;:::o;232:30::-;;;:::o;5034:590::-;5086:10;1710:17;:15;:17::i;:::-;1686:21;:41;;;;1749:31;1754:15;1771:8;;1749:4;:31::i;:::-;1738:8;:42;;;;1814:1;1794:22;;:8;:22;;;1791:165;;1856:16;1863:8;1856:6;:16::i;:::-;1832:11;:21;1844:8;1832:21;;;;;;;;;;;;;;;:40;;;;1923:21;;1887:23;:33;1911:8;1887:33;;;;;;;;;;;;;;;:57;;;;1791:165;5431:1:::1;5421:7;:11;5413:34;;;;;;;;;;;;:::i;:::-;;;;;;;;;5458:12;:25;;;5484:10;5504:4;5511:7;5458:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5563:7;5530:17;:29;5548:10;5530:29;;;;;;;;;;;;;;;;:40;;;;;;;:::i;:::-;;;;;;;;5609:7;5581:24;::::0;:35:::1;;;;;;;:::i;:::-;;;;;;;;5034:590:::0;;:::o;2403:2595::-;1433:10;1424:19;;:5;:19;;;1416:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;2485:1:::1;1710:17;:15;:17::i;:::-;1686:21;:41;;;;1749:31;1754:15;1771:8;;1749:4;:31::i;:::-;1738:8;:42;;;;1814:1;1794:22;;:8;:22;;;1791:165;;1856:16;1863:8;1856:6;:16::i;:::-;1832:11;:21;1844:8;1832:21;;;;;;;;;;;;;;;:40;;;;1923:21;;1887:23;:33;1911:8;1887:33;;;;;;;;;;;;;;;:57;;;;1791:165;2552:16:::2;2571:8;;2552:27;;2613:1;2598:11;:16:::0;2590:64:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;2690:1;2673:14;:18;2665:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;2790:12;:25;;;2816:5;2831:4;2838:14;2790:63;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2864:21;2888:12;:22;;;2919:4;2888:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2864:61;;2986:12;3001:15;2986:30;;3027:15;3045:8;;3027:26;;3079:10;3068:7;:21;3064:918;;3136:11;3119:14;:28;;;;:::i;:::-;3105:11;:42;;;;3064:918;;;3781:11;3762:14;3750:7;3737:10;:20;;;;:::i;:::-;3722:11;;:36;;;;:::i;:::-;:54;;;;:::i;:::-;3721:71;;;;:::i;:::-;3707:11;:85;;;;3064:918;4014:1;4000:11;;:15;3992:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;4148:16;4133:11;4119;;:25;;;;:::i;:::-;:45;;4111:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;4749:8;;4739:7;:18;;;;:::i;:::-;4726:31;;4807:10;4796:8;:21;;;;4839:7;4828:8;:18;;;;2488:2510;;;;1481:1:::1;2403:2595:::0;:::o;456:20::-;;;;:::o;187:36::-;;;:::o;2089:113::-;1433:10;1424:19;;:5;:19;;;1416:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1563:8:::1;;1544:15;:27;;1536:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2185:9:::2;2174:8;:20;;;;2089:113:::0;:::o;6221:104::-;6272:6;6307:1;6302;:6;;6301:16;;6316:1;6301:16;;;6312:1;6301:16;6297:20;;6221:104;;;;:::o;88:117:6:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:60::-;2247:3;2268:5;2261:12;;2219:60;;;:::o;2285:142::-;2335:9;2368:53;2386:34;2395:24;2413:5;2395:24;:::i;:::-;2386:34;:::i;:::-;2368:53;:::i;:::-;2355:66;;2285:142;;;:::o;2433:126::-;2483:9;2516:37;2547:5;2516:37;:::i;:::-;2503:50;;2433:126;;;:::o;2565:140::-;2629:9;2662:37;2693:5;2662:37;:::i;:::-;2649:50;;2565:140;;;:::o;2711:159::-;2812:51;2857:5;2812:51;:::i;:::-;2807:3;2800:64;2711:159;;:::o;2876:250::-;2983:4;3021:2;3010:9;3006:18;2998:26;;3034:85;3116:1;3105:9;3101:17;3092:6;3034:85;:::i;:::-;2876:250;;;;:::o;3132:118::-;3219:24;3237:5;3219:24;:::i;:::-;3214:3;3207:37;3132:118;;:::o;3256:222::-;3349:4;3387:2;3376:9;3372:18;3364:26;;3400:71;3468:1;3457:9;3453:17;3444:6;3400:71;:::i;:::-;3256:222;;;;:::o;3484:180::-;3532:77;3529:1;3522:88;3629:4;3626:1;3619:15;3653:4;3650:1;3643:15;3670:194;3710:4;3730:20;3748:1;3730:20;:::i;:::-;3725:25;;3764:20;3782:1;3764:20;:::i;:::-;3759:25;;3808:1;3805;3801:9;3793:17;;3832:1;3826:4;3823:11;3820:37;;;3837:18;;:::i;:::-;3820:37;3670:194;;;;:::o;3870:410::-;3910:7;3933:20;3951:1;3933:20;:::i;:::-;3928:25;;3967:20;3985:1;3967:20;:::i;:::-;3962:25;;4022:1;4019;4015:9;4044:30;4062:11;4044:30;:::i;:::-;4033:41;;4223:1;4214:7;4210:15;4207:1;4204:22;4184:1;4177:9;4157:83;4134:139;;4253:18;;:::i;:::-;4134:139;3918:362;3870:410;;;;:::o;4286:180::-;4334:77;4331:1;4324:88;4431:4;4428:1;4421:15;4455:4;4452:1;4445:15;4472:185;4512:1;4529:20;4547:1;4529:20;:::i;:::-;4524:25;;4563:20;4581:1;4563:20;:::i;:::-;4558:25;;4602:1;4592:35;;4607:18;;:::i;:::-;4592:35;4649:1;4646;4642:9;4637:14;;4472:185;;;;:::o;4663:191::-;4703:3;4722:20;4740:1;4722:20;:::i;:::-;4717:25;;4756:20;4774:1;4756:20;:::i;:::-;4751:25;;4799:1;4796;4792:9;4785:16;;4820:3;4817:1;4814:10;4811:36;;;4827:18;;:::i;:::-;4811:36;4663:191;;;;:::o;4860:332::-;4981:4;5019:2;5008:9;5004:18;4996:26;;5032:71;5100:1;5089:9;5085:17;5076:6;5032:71;:::i;:::-;5113:72;5181:2;5170:9;5166:18;5157:6;5113:72;:::i;:::-;4860:332;;;;;:::o;5198:90::-;5232:7;5275:5;5268:13;5261:21;5250:32;;5198:90;;;:::o;5294:116::-;5364:21;5379:5;5364:21;:::i;:::-;5357:5;5354:32;5344:60;;5400:1;5397;5390:12;5344:60;5294:116;:::o;5416:137::-;5470:5;5501:6;5495:13;5486:22;;5517:30;5541:5;5517:30;:::i;:::-;5416:137;;;;:::o;5559:345::-;5626:6;5675:2;5663:9;5654:7;5650:23;5646:32;5643:119;;;5681:79;;:::i;:::-;5643:119;5801:1;5826:61;5879:7;5870:6;5859:9;5855:22;5826:61;:::i;:::-;5816:71;;5772:125;5559:345;;;;:::o;5910:169::-;5994:11;6028:6;6023:3;6016:19;6068:4;6063:3;6059:14;6044:29;;5910:169;;;;:::o;6085:160::-;6225:12;6221:1;6213:6;6209:14;6202:36;6085:160;:::o;6251:366::-;6393:3;6414:67;6478:2;6473:3;6414:67;:::i;:::-;6407:74;;6490:93;6579:3;6490:93;:::i;:::-;6608:2;6603:3;6599:12;6592:19;;6251:366;;;:::o;6623:419::-;6789:4;6827:2;6816:9;6812:18;6804:26;;6876:9;6870:4;6866:20;6862:1;6851:9;6847:17;6840:47;6904:131;7030:4;6904:131;:::i;:::-;6896:139;;6623:419;;;:::o;7048:442::-;7197:4;7235:2;7224:9;7220:18;7212:26;;7248:71;7316:1;7305:9;7301:17;7292:6;7248:71;:::i;:::-;7329:72;7397:2;7386:9;7382:18;7373:6;7329:72;:::i;:::-;7411;7479:2;7468:9;7464:18;7455:6;7411:72;:::i;:::-;7048:442;;;;;;:::o;7496:172::-;7636:24;7632:1;7624:6;7620:14;7613:48;7496:172;:::o;7674:366::-;7816:3;7837:67;7901:2;7896:3;7837:67;:::i;:::-;7830:74;;7913:93;8002:3;7913:93;:::i;:::-;8031:2;8026:3;8022:12;8015:19;;7674:366;;;:::o;8046:419::-;8212:4;8250:2;8239:9;8235:18;8227:26;;8299:9;8293:4;8289:20;8285:1;8274:9;8270:17;8263:47;8327:131;8453:4;8327:131;:::i;:::-;8319:139;;8046:419;;;:::o;8471:222::-;8611:34;8607:1;8599:6;8595:14;8588:58;8680:5;8675:2;8667:6;8663:15;8656:30;8471:222;:::o;8699:366::-;8841:3;8862:67;8926:2;8921:3;8862:67;:::i;:::-;8855:74;;8938:93;9027:3;8938:93;:::i;:::-;9056:2;9051:3;9047:12;9040:19;;8699:366;;;:::o;9071:419::-;9237:4;9275:2;9264:9;9260:18;9252:26;;9324:9;9318:4;9314:20;9310:1;9299:9;9295:17;9288:47;9352:131;9478:4;9352:131;:::i;:::-;9344:139;;9071:419;;;:::o;9496:180::-;9636:32;9632:1;9624:6;9620:14;9613:56;9496:180;:::o;9682:366::-;9824:3;9845:67;9909:2;9904:3;9845:67;:::i;:::-;9838:74;;9921:93;10010:3;9921:93;:::i;:::-;10039:2;10034:3;10030:12;10023:19;;9682:366;;;:::o;10054:419::-;10220:4;10258:2;10247:9;10243:18;10235:26;;10307:9;10301:4;10297:20;10293:1;10282:9;10278:17;10271:47;10335:131;10461:4;10335:131;:::i;:::-;10327:139;;10054:419;;;:::o;10479:143::-;10536:5;10567:6;10561:13;10552:22;;10583:33;10610:5;10583:33;:::i;:::-;10479:143;;;;:::o;10628:351::-;10698:6;10747:2;10735:9;10726:7;10722:23;10718:32;10715:119;;;10753:79;;:::i;:::-;10715:119;10873:1;10898:64;10954:7;10945:6;10934:9;10930:22;10898:64;:::i;:::-;10888:74;;10844:128;10628:351;;;;:::o;10985:177::-;11125:29;11121:1;11113:6;11109:14;11102:53;10985:177;:::o;11168:366::-;11310:3;11331:67;11395:2;11390:3;11331:67;:::i;:::-;11324:74;;11407:93;11496:3;11407:93;:::i;:::-;11525:2;11520:3;11516:12;11509:19;;11168:366;;;:::o;11540:419::-;11706:4;11744:2;11733:9;11729:18;11721:26;;11793:9;11787:4;11783:20;11779:1;11768:9;11764:17;11757:47;11821:131;11947:4;11821:131;:::i;:::-;11813:139;;11540:419;;;:::o;11965:179::-;12105:31;12101:1;12093:6;12089:14;12082:55;11965:179;:::o;12150:366::-;12292:3;12313:67;12377:2;12372:3;12313:67;:::i;:::-;12306:74;;12389:93;12478:3;12389:93;:::i;:::-;12507:2;12502:3;12498:12;12491:19;;12150:366;;;:::o;12522:419::-;12688:4;12726:2;12715:9;12711:18;12703:26;;12775:9;12769:4;12765:20;12761:1;12750:9;12746:17;12739:47;12803:131;12929:4;12803:131;:::i;:::-;12795:139;;12522:419;;;:::o;12947:220::-;13087:34;13083:1;13075:6;13071:14;13064:58;13156:3;13151:2;13143:6;13139:15;13132:28;12947:220;:::o;13173:366::-;13315:3;13336:67;13400:2;13395:3;13336:67;:::i;:::-;13329:74;;13412:93;13501:3;13412:93;:::i;:::-;13530:2;13525:3;13521:12;13514:19;;13173:366;;;:::o;13545:419::-;13711:4;13749:2;13738:9;13734:18;13726:26;;13798:9;13792:4;13788:20;13784:1;13773:9;13769:17;13762:47;13826:131;13952:4;13826:131;:::i;:::-;13818:139;;13545:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1221800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"duration()": "2493",
								"earned(address)": "infinite",
								"finishAt()": "2514",
								"getRewards()": "infinite",
								"owner()": "infinite",
								"rewardsPerToken()": "infinite",
								"rewardsPerTokenStored()": "2448",
								"rewardsRate()": "2492",
								"rewardsToken()": "infinite",
								"setDuration(uint256)": "infinite",
								"setRewards(uint256)": "infinite",
								"stake(uint256)": "infinite",
								"stakingToken()": "infinite",
								"stakingTokensTotalSupply()": "2469",
								"updateAt()": "2469",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"_min(uint256,uint256)": "66"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 119,
									"end": 7504,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 119,
									"end": 7504,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 119,
									"end": 7504,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1189,
									"end": 1377,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 1189,
									"end": 1377,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1189,
									"end": 1377,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1189,
									"end": 1377,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1189,
									"end": 1377,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1189,
									"end": 1377,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1189,
									"end": 1377,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1189,
									"end": 1377,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1189,
									"end": 1377,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1189,
									"end": 1377,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1189,
									"end": 1377,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1189,
									"end": 1377,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1189,
									"end": 1377,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1189,
									"end": 1377,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1189,
									"end": 1377,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 1189,
									"end": 1377,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1189,
									"end": 1377,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1189,
									"end": 1377,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1189,
									"end": 1377,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1189,
									"end": 1377,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1189,
									"end": 1377,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1189,
									"end": 1377,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1189,
									"end": 1377,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1189,
									"end": 1377,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1189,
									"end": 1377,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1189,
									"end": 1377,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1189,
									"end": 1377,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1189,
									"end": 1377,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1189,
									"end": 1377,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1189,
									"end": 1377,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1189,
									"end": 1377,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1189,
									"end": 1377,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1189,
									"end": 1377,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1189,
									"end": 1377,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1189,
									"end": 1377,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1265,
									"end": 1275,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 1257,
									"end": 1275,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1257,
									"end": 1275,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1257,
									"end": 1275,
									"name": "PUSH",
									"source": 5,
									"value": "C0"
								},
								{
									"begin": 1257,
									"end": 1275,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1257,
									"end": 1275,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1257,
									"end": 1275,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1257,
									"end": 1275,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1257,
									"end": 1275,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1257,
									"end": 1275,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1257,
									"end": 1275,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1308,
									"end": 1321,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1286,
									"end": 1322,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1286,
									"end": 1322,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1286,
									"end": 1322,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 1286,
									"end": 1322,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1286,
									"end": 1322,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1286,
									"end": 1322,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1286,
									"end": 1322,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1286,
									"end": 1322,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1286,
									"end": 1322,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1286,
									"end": 1322,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1355,
									"end": 1368,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1369,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1333,
									"end": 1369,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1369,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 1333,
									"end": 1369,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1369,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1333,
									"end": 1369,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1369,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1369,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1369,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1369,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1189,
									"end": 1377,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1189,
									"end": 1377,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 119,
									"end": 7504,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 119,
									"end": 7504,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 119,
									"end": 7504,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 119,
									"end": 7504,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 119,
									"end": 7504,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 119,
									"end": 7504,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 119,
									"end": 7504,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 119,
									"end": 7504,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 119,
									"end": 7504,
									"name": "PUSH",
									"source": 5,
									"value": "C0"
								},
								{
									"begin": 119,
									"end": 7504,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 119,
									"end": 7504,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 119,
									"end": 7504,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 119,
									"end": 7504,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 119,
									"end": 7504,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 119,
									"end": 7504,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 119,
									"end": 7504,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "796"
								},
								{
									"begin": 119,
									"end": 7504,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 119,
									"end": 7504,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "794"
								},
								{
									"begin": 119,
									"end": 7504,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 119,
									"end": 7504,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "791"
								},
								{
									"begin": 119,
									"end": 7504,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 119,
									"end": 7504,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 119,
									"end": 7504,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200819a87068e8c0401b30be9c9a5c42f5253767251ddaf1fd1224a1ffd510610f64736f6c634300081a0033",
									".code": [
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH",
											"source": 5,
											"value": "70641A36"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH",
											"source": 5,
											"value": "C7A29C6F"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH",
											"source": 5,
											"value": "C7A29C6F"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH",
											"source": 5,
											"value": "C964F585"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH",
											"source": 5,
											"value": "D1AF0C7D"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH",
											"source": 5,
											"value": "F6BE71D1"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH",
											"source": 5,
											"value": "70641A36"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH",
											"source": 5,
											"value": "72F702F3"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH",
											"source": 5,
											"value": "A694FC3A"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH",
											"source": 5,
											"value": "350FD407"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH",
											"source": 5,
											"value": "350FD407"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH",
											"source": 5,
											"value": "4334F3FF"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH",
											"source": 5,
											"value": "523BC7D5"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH",
											"source": 5,
											"value": "67D3B488"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH",
											"source": 5,
											"value": "8CC262"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH",
											"source": 5,
											"value": "572B0CC"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH",
											"source": 5,
											"value": "FB5A6B4"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH",
											"source": 5,
											"value": "2E1A7D4D"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 119,
											"end": 7504,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6763,
											"end": 7193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 6763,
											"end": 7193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 6763,
											"end": 7193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 7248,
											"end": 7499,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7248,
											"end": 7499,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7248,
											"end": 7499,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 7248,
											"end": 7499,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 7248,
											"end": 7499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7248,
											"end": 7499,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 7248,
											"end": 7499,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7248,
											"end": 7499,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 403,
											"end": 423,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 403,
											"end": 423,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 403,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 403,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 403,
											"end": 423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 403,
											"end": 423,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 403,
											"end": 423,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 403,
											"end": 423,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 403,
											"end": 423,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 403,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 403,
											"end": 423,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 403,
											"end": 423,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 403,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 403,
											"end": 423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 403,
											"end": 423,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 403,
											"end": 423,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 403,
											"end": 423,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 403,
											"end": 423,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 403,
											"end": 423,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 403,
											"end": 423,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 403,
											"end": 423,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 403,
											"end": 423,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 403,
											"end": 423,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 5671,
											"end": 6213,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 5671,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5671,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 5671,
											"end": 6213,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5671,
											"end": 6213,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5671,
											"end": 6213,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5671,
											"end": 6213,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5671,
											"end": 6213,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5671,
											"end": 6213,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5671,
											"end": 6213,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5671,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 5671,
											"end": 6213,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5671,
											"end": 6213,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5671,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 5671,
											"end": 6213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5671,
											"end": 6213,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 5671,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5671,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 5671,
											"end": 6213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5671,
											"end": 6213,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 5671,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5671,
											"end": 6213,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 667,
											"end": 700,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 667,
											"end": 700,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 667,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 667,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 667,
											"end": 700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 667,
											"end": 700,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 667,
											"end": 700,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 667,
											"end": 700,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 667,
											"end": 700,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 667,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 667,
											"end": 700,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 667,
											"end": 700,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 667,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 667,
											"end": 700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 667,
											"end": 700,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 667,
											"end": 700,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 667,
											"end": 700,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 667,
											"end": 700,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 667,
											"end": 700,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 667,
											"end": 700,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 667,
											"end": 700,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 667,
											"end": 700,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 667,
											"end": 700,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 316,
											"end": 352,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 316,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 316,
											"end": 352,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 316,
											"end": 352,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 316,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 316,
											"end": 352,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 316,
											"end": 352,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 316,
											"end": 352,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 316,
											"end": 352,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 316,
											"end": 352,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 316,
											"end": 352,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 600,
											"end": 623,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 600,
											"end": 623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 600,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 600,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 600,
											"end": 623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 600,
											"end": 623,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 600,
											"end": 623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 600,
											"end": 623,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 600,
											"end": 623,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 600,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 600,
											"end": 623,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 600,
											"end": 623,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 600,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 600,
											"end": 623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 600,
											"end": 623,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 600,
											"end": 623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 600,
											"end": 623,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 600,
											"end": 623,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 600,
											"end": 623,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 600,
											"end": 623,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 600,
											"end": 623,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 600,
											"end": 623,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 600,
											"end": 623,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 531,
											"end": 551,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 531,
											"end": 551,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 531,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 531,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 531,
											"end": 551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 531,
											"end": 551,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 531,
											"end": 551,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 531,
											"end": 551,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 551,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 531,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 531,
											"end": 551,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 531,
											"end": 551,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 531,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 531,
											"end": 551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 531,
											"end": 551,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 531,
											"end": 551,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 531,
											"end": 551,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 551,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 531,
											"end": 551,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 531,
											"end": 551,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 531,
											"end": 551,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 531,
											"end": 551,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 531,
											"end": 551,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 6331,
											"end": 6711,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 6331,
											"end": 6711,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6331,
											"end": 6711,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 6331,
											"end": 6711,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 6331,
											"end": 6711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6331,
											"end": 6711,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 6331,
											"end": 6711,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6331,
											"end": 6711,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6331,
											"end": 6711,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6331,
											"end": 6711,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 6331,
											"end": 6711,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6331,
											"end": 6711,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6331,
											"end": 6711,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 6331,
											"end": 6711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6331,
											"end": 6711,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 6331,
											"end": 6711,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6331,
											"end": 6711,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6331,
											"end": 6711,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6331,
											"end": 6711,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6331,
											"end": 6711,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6331,
											"end": 6711,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6331,
											"end": 6711,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6331,
											"end": 6711,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 144,
											"end": 180,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 144,
											"end": 180,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 144,
											"end": 180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 144,
											"end": 180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 144,
											"end": 180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 144,
											"end": 180,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 144,
											"end": 180,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 144,
											"end": 180,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 144,
											"end": 180,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 144,
											"end": 180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 144,
											"end": 180,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 144,
											"end": 180,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 144,
											"end": 180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 144,
											"end": 180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 144,
											"end": 180,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 144,
											"end": 180,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 144,
											"end": 180,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 144,
											"end": 180,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 144,
											"end": 180,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 144,
											"end": 180,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 144,
											"end": 180,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 144,
											"end": 180,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 144,
											"end": 180,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 232,
											"end": 262,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 232,
											"end": 262,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 232,
											"end": 262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 232,
											"end": 262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 232,
											"end": 262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 232,
											"end": 262,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 232,
											"end": 262,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 232,
											"end": 262,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 232,
											"end": 262,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 232,
											"end": 262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 232,
											"end": 262,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 232,
											"end": 262,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 232,
											"end": 262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 232,
											"end": 262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 232,
											"end": 262,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 232,
											"end": 262,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 232,
											"end": 262,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 232,
											"end": 262,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 232,
											"end": 262,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 232,
											"end": 262,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 232,
											"end": 262,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 232,
											"end": 262,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 232,
											"end": 262,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 5034,
											"end": 5624,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 5034,
											"end": 5624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5034,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5034,
											"end": 5624,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5034,
											"end": 5624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5034,
											"end": 5624,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5034,
											"end": 5624,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5034,
											"end": 5624,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5034,
											"end": 5624,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5034,
											"end": 5624,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5034,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 5034,
											"end": 5624,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5034,
											"end": 5624,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5034,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 5034,
											"end": 5624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5034,
											"end": 5624,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 5034,
											"end": 5624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5034,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 5034,
											"end": 5624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5034,
											"end": 5624,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5034,
											"end": 5624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5034,
											"end": 5624,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 4998,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 2403,
											"end": 4998,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 2403,
											"end": 4998,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2403,
											"end": 4998,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 4998,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 4998,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 4998,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 4998,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 4998,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2403,
											"end": 4998,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 4998,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2403,
											"end": 4998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 4998,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2403,
											"end": 4998,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2403,
											"end": 4998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 4998,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 2403,
											"end": 4998,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 4998,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 456,
											"end": 476,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 456,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 456,
											"end": 476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 456,
											"end": 476,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 456,
											"end": 476,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 456,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 456,
											"end": 476,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 456,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 456,
											"end": 476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 456,
											"end": 476,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 456,
											"end": 476,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 456,
											"end": 476,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 456,
											"end": 476,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 456,
											"end": 476,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 456,
											"end": 476,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 456,
											"end": 476,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 187,
											"end": 223,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 187,
											"end": 223,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 187,
											"end": 223,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 187,
											"end": 223,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 187,
											"end": 223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 187,
											"end": 223,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 187,
											"end": 223,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 187,
											"end": 223,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 223,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 187,
											"end": 223,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 187,
											"end": 223,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 187,
											"end": 223,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 223,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 187,
											"end": 223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 187,
											"end": 223,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 187,
											"end": 223,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 187,
											"end": 223,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 223,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 187,
											"end": 223,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 223,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 187,
											"end": 223,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 187,
											"end": 223,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 223,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2202,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2089,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2089,
											"end": 2202,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2089,
											"end": 2202,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2202,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2202,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2202,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2202,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2202,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2089,
											"end": 2202,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2202,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2089,
											"end": 2202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2202,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2089,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2089,
											"end": 2202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2202,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2089,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2202,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6817,
											"end": 6821,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7164,
											"end": 7175,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 7164,
											"end": 7185,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7176,
											"end": 7184,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7164,
											"end": 7185,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7164,
											"end": 7185,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7164,
											"end": 7185,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7164,
											"end": 7185,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7164,
											"end": 7185,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7164,
											"end": 7185,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7164,
											"end": 7185,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7164,
											"end": 7185,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7164,
											"end": 7185,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7164,
											"end": 7185,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7164,
											"end": 7185,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7164,
											"end": 7185,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7164,
											"end": 7185,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7164,
											"end": 7185,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7164,
											"end": 7185,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7164,
											"end": 7185,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7157,
											"end": 7161,
											"name": "PUSH",
											"source": 5,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 7120,
											"end": 7143,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 7120,
											"end": 7153,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7144,
											"end": 7152,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7120,
											"end": 7153,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7120,
											"end": 7153,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7120,
											"end": 7153,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7120,
											"end": 7153,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7120,
											"end": 7153,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7120,
											"end": 7153,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7120,
											"end": 7153,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7120,
											"end": 7153,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7120,
											"end": 7153,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7120,
											"end": 7153,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7120,
											"end": 7153,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7120,
											"end": 7153,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7120,
											"end": 7153,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7120,
											"end": 7153,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7120,
											"end": 7153,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7120,
											"end": 7153,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7100,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 7100,
											"end": 7115,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 7100,
											"end": 7117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7100,
											"end": 7117,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 7100,
											"end": 7117,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7100,
											"end": 7153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 7100,
											"end": 7153,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7100,
											"end": 7153,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7100,
											"end": 7153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 7100,
											"end": 7153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7100,
											"end": 7153,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 7100,
											"end": 7153,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7069,
											"end": 7086,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 7069,
											"end": 7096,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7087,
											"end": 7095,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7069,
											"end": 7096,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7069,
											"end": 7096,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7069,
											"end": 7096,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7069,
											"end": 7096,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7069,
											"end": 7096,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7069,
											"end": 7096,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7069,
											"end": 7096,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7069,
											"end": 7096,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7069,
											"end": 7096,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7069,
											"end": 7096,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7069,
											"end": 7096,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7069,
											"end": 7096,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7069,
											"end": 7096,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7069,
											"end": 7096,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7069,
											"end": 7096,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7069,
											"end": 7096,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7069,
											"end": 7154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 7069,
											"end": 7154,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7069,
											"end": 7154,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7069,
											"end": 7154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 7069,
											"end": 7154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7069,
											"end": 7154,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 7069,
											"end": 7154,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7069,
											"end": 7161,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 7069,
											"end": 7161,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7069,
											"end": 7161,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7069,
											"end": 7161,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 7069,
											"end": 7161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7069,
											"end": 7161,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 7069,
											"end": 7161,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7069,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 7069,
											"end": 7185,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7069,
											"end": 7185,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7069,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 7069,
											"end": 7185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7069,
											"end": 7185,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 7069,
											"end": 7185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7062,
											"end": 7185,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7062,
											"end": 7185,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6763,
											"end": 7193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6763,
											"end": 7193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7248,
											"end": 7499,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 7248,
											"end": 7499,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7293,
											"end": 7303,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 1710,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1710,
											"end": 1727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1727,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 1710,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1707,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1686,
											"end": 1727,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1727,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1727,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1727,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 1754,
											"end": 1769,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1771,
											"end": 1779,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1771,
											"end": 1779,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 1749,
											"end": 1780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1780,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 1749,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1746,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1738,
											"end": 1780,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1780,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1780,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1780,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1814,
											"end": 1815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1794,
											"end": 1816,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1794,
											"end": 1816,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1794,
											"end": 1802,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1794,
											"end": 1816,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1794,
											"end": 1816,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1794,
											"end": 1816,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 1791,
											"end": 1956,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 1863,
											"end": 1871,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1856,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1872,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 1856,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1843,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1844,
											"end": 1852,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1872,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1872,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1872,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1872,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1944,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1923,
											"end": 1944,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1910,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1911,
											"end": 1919,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1944,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1944,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1944,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1944,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1956,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 1791,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7315,
											"end": 7327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7330,
											"end": 7341,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 7330,
											"end": 7353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7352,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 7330,
											"end": 7353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7330,
											"end": 7353,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7330,
											"end": 7353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7330,
											"end": 7353,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7330,
											"end": 7353,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7330,
											"end": 7353,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7330,
											"end": 7353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7330,
											"end": 7353,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7330,
											"end": 7353,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7330,
											"end": 7353,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7330,
											"end": 7353,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7330,
											"end": 7353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7330,
											"end": 7353,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7330,
											"end": 7353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7330,
											"end": 7353,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7330,
											"end": 7353,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7315,
											"end": 7353,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7315,
											"end": 7353,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7377,
											"end": 7378,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7367,
											"end": 7374,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7367,
											"end": 7378,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7364,
											"end": 7490,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7364,
											"end": 7490,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 7364,
											"end": 7490,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7406,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "794"
										},
										{
											"begin": 7394,
											"end": 7415,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7394,
											"end": 7415,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7415,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 7416,
											"end": 7426,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 7428,
											"end": 7435,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 7394,
											"end": 7436,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7394,
											"end": 7436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 7394,
											"end": 7436,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7436,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7477,
											"end": 7478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7451,
											"end": 7462,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 7451,
											"end": 7474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7463,
											"end": 7473,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 7451,
											"end": 7474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7451,
											"end": 7474,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7451,
											"end": 7474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7451,
											"end": 7474,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7451,
											"end": 7474,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7451,
											"end": 7474,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7451,
											"end": 7474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7451,
											"end": 7474,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7451,
											"end": 7474,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7451,
											"end": 7474,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7451,
											"end": 7474,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7451,
											"end": 7474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7451,
											"end": 7474,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7451,
											"end": 7474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7451,
											"end": 7474,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7451,
											"end": 7478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7451,
											"end": 7478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7451,
											"end": 7478,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7451,
											"end": 7478,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7364,
											"end": 7490,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 7364,
											"end": 7490,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7304,
											"end": 7499,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7248,
											"end": 7499,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7248,
											"end": 7499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 403,
											"end": 423,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 403,
											"end": 423,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 403,
											"end": 423,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 403,
											"end": 423,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 403,
											"end": 423,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 403,
											"end": 423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5671,
											"end": 6213,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 5671,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5726,
											"end": 5736,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1710,
											"end": 1727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1727,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1707,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1686,
											"end": 1727,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1727,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1727,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1727,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1754,
											"end": 1769,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1771,
											"end": 1779,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1771,
											"end": 1779,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 1749,
											"end": 1780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1780,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1749,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1746,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1738,
											"end": 1780,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1780,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1780,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1780,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1814,
											"end": 1815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1794,
											"end": 1816,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1794,
											"end": 1816,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1794,
											"end": 1802,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1794,
											"end": 1816,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1794,
											"end": 1816,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1794,
											"end": 1816,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 1791,
											"end": 1956,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1863,
											"end": 1871,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1856,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1872,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1856,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1843,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1844,
											"end": 1852,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1872,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1872,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1872,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1872,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1944,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1923,
											"end": 1944,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1910,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1911,
											"end": 1919,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1944,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1944,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1944,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1944,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1956,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 1791,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6039,
											"end": 6040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6029,
											"end": 6036,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6029,
											"end": 6040,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6021,
											"end": 6055,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 6021,
											"end": 6055,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6021,
											"end": 6055,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6021,
											"end": 6055,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6021,
											"end": 6055,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6021,
											"end": 6055,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6021,
											"end": 6055,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6021,
											"end": 6055,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6021,
											"end": 6055,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6021,
											"end": 6055,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 6021,
											"end": 6055,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6021,
											"end": 6055,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 6021,
											"end": 6055,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6021,
											"end": 6055,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 6021,
											"end": 6055,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6021,
											"end": 6055,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6021,
											"end": 6055,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6021,
											"end": 6055,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6021,
											"end": 6055,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6021,
											"end": 6055,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6021,
											"end": 6055,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6021,
											"end": 6055,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6021,
											"end": 6055,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 6021,
											"end": 6055,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6099,
											"end": 6106,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6066,
											"end": 6083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 6066,
											"end": 6095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6084,
											"end": 6094,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6066,
											"end": 6095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6066,
											"end": 6095,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6066,
											"end": 6095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6066,
											"end": 6095,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6066,
											"end": 6095,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6066,
											"end": 6095,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6066,
											"end": 6095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6066,
											"end": 6095,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6066,
											"end": 6095,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6066,
											"end": 6095,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6066,
											"end": 6095,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6066,
											"end": 6095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6066,
											"end": 6095,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6066,
											"end": 6095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6066,
											"end": 6095,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6066,
											"end": 6095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6066,
											"end": 6106,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6066,
											"end": 6106,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6066,
											"end": 6106,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6066,
											"end": 6106,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 6066,
											"end": 6106,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6066,
											"end": 6106,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6066,
											"end": 6106,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 6066,
											"end": 6106,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6066,
											"end": 6106,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 6066,
											"end": 6106,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6066,
											"end": 6106,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6066,
											"end": 6106,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6066,
											"end": 6106,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6066,
											"end": 6106,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6066,
											"end": 6106,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6066,
											"end": 6106,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6066,
											"end": 6106,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6145,
											"end": 6152,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6117,
											"end": 6141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6117,
											"end": 6141,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6117,
											"end": 6152,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6117,
											"end": 6152,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6117,
											"end": 6152,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6117,
											"end": 6152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 6117,
											"end": 6152,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6117,
											"end": 6152,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6117,
											"end": 6152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 6117,
											"end": 6152,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6117,
											"end": 6152,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 6117,
											"end": 6152,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6117,
											"end": 6152,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6117,
											"end": 6152,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6117,
											"end": 6152,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6117,
											"end": 6152,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6117,
											"end": 6152,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6117,
											"end": 6152,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6117,
											"end": 6152,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6175,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "791"
										},
										{
											"begin": 6163,
											"end": 6184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6163,
											"end": 6184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 6185,
											"end": 6195,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6197,
											"end": 6204,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 6163,
											"end": 6205,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6163,
											"end": 6205,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 6163,
											"end": 6205,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6205,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5671,
											"end": 6213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5671,
											"end": 6213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5671,
											"end": 6213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 667,
											"end": 700,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 667,
											"end": 700,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 667,
											"end": 700,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 667,
											"end": 700,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 667,
											"end": 700,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 667,
											"end": 700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 316,
											"end": 352,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 316,
											"end": 352,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 316,
											"end": 352,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 316,
											"end": 352,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 316,
											"end": 352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 600,
											"end": 623,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 600,
											"end": 623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 600,
											"end": 623,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 600,
											"end": 623,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 600,
											"end": 623,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 600,
											"end": 623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 531,
											"end": 551,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 531,
											"end": 551,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 531,
											"end": 551,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 531,
											"end": 551,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 531,
											"end": 551,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 531,
											"end": 551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6331,
											"end": 6711,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 6331,
											"end": 6711,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6378,
											"end": 6382,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6425,
											"end": 6426,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6397,
											"end": 6421,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6397,
											"end": 6421,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6397,
											"end": 6426,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6394,
											"end": 6485,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 6394,
											"end": 6485,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6449,
											"end": 6473,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6449,
											"end": 6473,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6442,
											"end": 6473,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6442,
											"end": 6473,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6442,
											"end": 6473,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 6442,
											"end": 6473,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6394,
											"end": 6485,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 6394,
											"end": 6485,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6688,
											"end": 6692,
											"name": "PUSH",
											"source": 5,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6661,
											"end": 6685,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6661,
											"end": 6685,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6649,
											"end": 6657,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6649,
											"end": 6657,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6615,
											"end": 6646,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 6620,
											"end": 6628,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 6620,
											"end": 6628,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6630,
											"end": 6645,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 6615,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 6615,
											"end": 6646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6615,
											"end": 6646,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 6615,
											"end": 6646,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6615,
											"end": 6657,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 6615,
											"end": 6657,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6615,
											"end": 6657,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6615,
											"end": 6657,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 6615,
											"end": 6657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6615,
											"end": 6657,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 6615,
											"end": 6657,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6600,
											"end": 6611,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6600,
											"end": 6611,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6600,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 6600,
											"end": 6658,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6600,
											"end": 6658,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6600,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 6600,
											"end": 6658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6600,
											"end": 6658,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 6600,
											"end": 6658,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6600,
											"end": 6685,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 6600,
											"end": 6685,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6600,
											"end": 6685,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6600,
											"end": 6685,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 6600,
											"end": 6685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6600,
											"end": 6685,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 6600,
											"end": 6685,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6600,
											"end": 6692,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 6600,
											"end": 6692,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6600,
											"end": 6692,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6600,
											"end": 6692,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 6600,
											"end": 6692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6600,
											"end": 6692,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 6600,
											"end": 6692,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6575,
											"end": 6596,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 6575,
											"end": 6596,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6575,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 6575,
											"end": 6693,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6575,
											"end": 6693,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6575,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 6575,
											"end": 6693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6575,
											"end": 6693,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 6575,
											"end": 6693,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6568,
											"end": 6693,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6568,
											"end": 6693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6331,
											"end": 6711,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 6331,
											"end": 6711,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6331,
											"end": 6711,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6331,
											"end": 6711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 144,
											"end": 180,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 144,
											"end": 180,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 144,
											"end": 180,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "791"
										},
										{
											"begin": 144,
											"end": 180,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 144,
											"end": 180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 232,
											"end": 262,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 232,
											"end": 262,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 232,
											"end": 262,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "796"
										},
										{
											"begin": 232,
											"end": 262,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 232,
											"end": 262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5034,
											"end": 5624,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 5034,
											"end": 5624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5086,
											"end": 5096,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1710,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1710,
											"end": 1727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1727,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1710,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1707,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1686,
											"end": 1727,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1727,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1727,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1727,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1754,
											"end": 1769,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1771,
											"end": 1779,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1771,
											"end": 1779,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 1749,
											"end": 1780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1780,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1749,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1746,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1738,
											"end": 1780,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1780,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1780,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1780,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1814,
											"end": 1815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1794,
											"end": 1816,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1794,
											"end": 1816,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1794,
											"end": 1802,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1794,
											"end": 1816,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1794,
											"end": 1816,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1794,
											"end": 1816,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1791,
											"end": 1956,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1863,
											"end": 1871,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1856,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1872,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1856,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1843,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1844,
											"end": 1852,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1832,
											"end": 1853,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1872,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1872,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1872,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1872,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1944,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1923,
											"end": 1944,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1910,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1911,
											"end": 1919,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1920,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1944,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1944,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1944,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1944,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1956,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1791,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5431,
											"end": 5432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5421,
											"end": 5428,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5421,
											"end": 5432,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5413,
											"end": 5447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 5413,
											"end": 5447,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5413,
											"end": 5447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5413,
											"end": 5447,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5413,
											"end": 5447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5413,
											"end": 5447,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5413,
											"end": 5447,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5413,
											"end": 5447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5413,
											"end": 5447,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5413,
											"end": 5447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5413,
											"end": 5447,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5413,
											"end": 5447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 5413,
											"end": 5447,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5413,
											"end": 5447,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5413,
											"end": 5447,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5413,
											"end": 5447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5413,
											"end": 5447,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5413,
											"end": 5447,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5413,
											"end": 5447,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5413,
											"end": 5447,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5413,
											"end": 5447,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5413,
											"end": 5447,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5413,
											"end": 5447,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 5413,
											"end": 5447,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5470,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "791"
										},
										{
											"begin": 5458,
											"end": 5483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5458,
											"end": 5483,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 5484,
											"end": 5494,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5504,
											"end": 5508,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 5511,
											"end": 5518,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 5458,
											"end": 5519,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5458,
											"end": 5519,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 5458,
											"end": 5519,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5458,
											"end": 5519,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5563,
											"end": 5570,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 5547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 5530,
											"end": 5559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5548,
											"end": 5558,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 5559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5530,
											"end": 5559,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 5559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5530,
											"end": 5559,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 5559,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 5559,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 5559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5530,
											"end": 5559,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 5559,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 5559,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 5559,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 5559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5530,
											"end": 5559,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 5559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5530,
											"end": 5559,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 5559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5530,
											"end": 5570,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 5570,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 5570,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 5570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 5530,
											"end": 5570,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 5570,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 5570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5530,
											"end": 5570,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 5570,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 5530,
											"end": 5570,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 5570,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 5570,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 5570,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 5570,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 5570,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 5570,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 5570,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5609,
											"end": 5616,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5581,
											"end": 5605,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5581,
											"end": 5605,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5581,
											"end": 5616,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5581,
											"end": 5616,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5581,
											"end": 5616,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5581,
											"end": 5616,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 5581,
											"end": 5616,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5581,
											"end": 5616,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5581,
											"end": 5616,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5581,
											"end": 5616,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5581,
											"end": 5616,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 5581,
											"end": 5616,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5581,
											"end": 5616,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5581,
											"end": 5616,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5581,
											"end": 5616,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5581,
											"end": 5616,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5581,
											"end": 5616,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5581,
											"end": 5616,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5581,
											"end": 5616,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5034,
											"end": 5624,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5034,
											"end": 5624,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5034,
											"end": 5624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 4998,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2403,
											"end": 4998,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1424,
											"end": 1443,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1424,
											"end": 1443,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1424,
											"end": 1429,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "796"
										},
										{
											"begin": 1424,
											"end": 1443,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1424,
											"end": 1443,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1424,
											"end": 1443,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 1416,
											"end": 1470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1727,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 1710,
											"end": 1725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1710,
											"end": 1727,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1727,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 1710,
											"end": 1727,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1686,
											"end": 1727,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1727,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1727,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1727,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1780,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1754,
											"end": 1769,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1771,
											"end": 1779,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1771,
											"end": 1779,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1753,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 1749,
											"end": 1780,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1780,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1749,
											"end": 1780,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1746,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1738,
											"end": 1780,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1780,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1780,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1780,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1814,
											"end": 1815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1794,
											"end": 1816,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1794,
											"end": 1816,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1794,
											"end": 1802,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1794,
											"end": 1816,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1794,
											"end": 1816,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1794,
											"end": 1816,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1956,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1791,
											"end": 1956,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1872,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1863,
											"end": 1871,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1862,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1856,
											"end": 1872,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1872,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1856,
											"end": 1872,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1832,
											"end": 1853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1844,
											"end": 1852,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1832,
											"end": 1853,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1832,
											"end": 1853,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1832,
											"end": 1853,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1832,
											"end": 1853,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1832,
											"end": 1853,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1872,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1872,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1872,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1872,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1923,
											"end": 1944,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1910,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1887,
											"end": 1920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1911,
											"end": 1919,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1887,
											"end": 1920,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1887,
											"end": 1920,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1887,
											"end": 1920,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1887,
											"end": 1920,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1920,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1944,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1944,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1944,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1944,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1956,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1791,
											"end": 1956,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2552,
											"end": 2568,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2571,
											"end": 2579,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2571,
											"end": 2579,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2552,
											"end": 2579,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2552,
											"end": 2579,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2614,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2609,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2614,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2654,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2590,
											"end": 2654,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2654,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2654,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2654,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2590,
											"end": 2654,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2654,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2654,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2590,
											"end": 2654,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2654,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 2590,
											"end": 2654,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2654,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2590,
											"end": 2654,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2654,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 2590,
											"end": 2654,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2654,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2654,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2654,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2654,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2654,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2654,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2654,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2654,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2590,
											"end": 2654,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2691,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2687,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2673,
											"end": 2691,
											"modifierDepth": 2,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2726,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 2665,
											"end": 2726,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2726,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2665,
											"end": 2726,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2726,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2665,
											"end": 2726,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2726,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2726,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2665,
											"end": 2726,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2726,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2665,
											"end": 2726,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2726,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2665,
											"end": 2726,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2726,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2665,
											"end": 2726,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2726,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2665,
											"end": 2726,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2726,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2726,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2726,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2726,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2726,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2726,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 2665,
											"end": 2726,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2802,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "794"
										},
										{
											"begin": 2790,
											"end": 2815,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2790,
											"end": 2815,
											"modifierDepth": 2,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2815,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 2816,
											"end": 2821,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "796"
										},
										{
											"begin": 2831,
											"end": 2835,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2838,
											"end": 2852,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2790,
											"end": 2853,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2790,
											"end": 2853,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2790,
											"end": 2853,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2864,
											"end": 2885,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2888,
											"end": 2900,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "794"
										},
										{
											"begin": 2888,
											"end": 2910,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2888,
											"end": 2910,
											"modifierDepth": 2,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2910,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 2919,
											"end": 2923,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 2888,
											"end": 2925,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2888,
											"end": 2925,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2888,
											"end": 2925,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 2888,
											"end": 2925,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2864,
											"end": 2925,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2864,
											"end": 2925,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2986,
											"end": 2998,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3001,
											"end": 3016,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 2986,
											"end": 3016,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2986,
											"end": 3016,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3027,
											"end": 3042,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3045,
											"end": 3053,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3045,
											"end": 3053,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3027,
											"end": 3053,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3027,
											"end": 3053,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3079,
											"end": 3089,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3068,
											"end": 3075,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3068,
											"end": 3089,
											"modifierDepth": 2,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3064,
											"end": 3982,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 3064,
											"end": 3982,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3136,
											"end": 3147,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3119,
											"end": 3133,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3119,
											"end": 3147,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 3119,
											"end": 3147,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3119,
											"end": 3147,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3119,
											"end": 3147,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 3119,
											"end": 3147,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3119,
											"end": 3147,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 3119,
											"end": 3147,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 3116,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3105,
											"end": 3147,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 3147,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 3147,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 3147,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3064,
											"end": 3982,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 3064,
											"end": 3982,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3064,
											"end": 3982,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 3064,
											"end": 3982,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 3792,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3776,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3757,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 3747,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 3757,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3737,
											"end": 3757,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 3757,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 3757,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 3737,
											"end": 3757,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 3757,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3737,
											"end": 3757,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3722,
											"end": 3733,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3722,
											"end": 3733,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3722,
											"end": 3758,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 3722,
											"end": 3758,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3722,
											"end": 3758,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3722,
											"end": 3758,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3722,
											"end": 3758,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3722,
											"end": 3758,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 3722,
											"end": 3758,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3722,
											"end": 3776,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 3722,
											"end": 3776,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3722,
											"end": 3776,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3722,
											"end": 3776,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3722,
											"end": 3776,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3722,
											"end": 3776,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 3722,
											"end": 3776,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3792,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 3721,
											"end": 3792,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3792,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3792,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 3721,
											"end": 3792,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3792,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 3721,
											"end": 3792,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3718,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3707,
											"end": 3792,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3792,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3792,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3792,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3064,
											"end": 3982,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 3064,
											"end": 3982,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4014,
											"end": 4015,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4000,
											"end": 4011,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4000,
											"end": 4011,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4000,
											"end": 4015,
											"modifierDepth": 2,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3992,
											"end": 4047,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 3992,
											"end": 4047,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3992,
											"end": 4047,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3992,
											"end": 4047,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3992,
											"end": 4047,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3992,
											"end": 4047,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3992,
											"end": 4047,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3992,
											"end": 4047,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3992,
											"end": 4047,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3992,
											"end": 4047,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3992,
											"end": 4047,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3992,
											"end": 4047,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 3992,
											"end": 4047,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3992,
											"end": 4047,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3992,
											"end": 4047,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3992,
											"end": 4047,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3992,
											"end": 4047,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3992,
											"end": 4047,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3992,
											"end": 4047,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3992,
											"end": 4047,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3992,
											"end": 4047,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3992,
											"end": 4047,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3992,
											"end": 4047,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 3992,
											"end": 4047,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4148,
											"end": 4164,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4144,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4119,
											"end": 4130,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4119,
											"end": 4130,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4119,
											"end": 4144,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 4119,
											"end": 4144,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4119,
											"end": 4144,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4119,
											"end": 4144,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4119,
											"end": 4144,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4119,
											"end": 4144,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 4119,
											"end": 4144,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4119,
											"end": 4164,
											"modifierDepth": 2,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4119,
											"end": 4164,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4111,
											"end": 4198,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 4111,
											"end": 4198,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4111,
											"end": 4198,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4111,
											"end": 4198,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4111,
											"end": 4198,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4111,
											"end": 4198,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4111,
											"end": 4198,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4111,
											"end": 4198,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4111,
											"end": 4198,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4111,
											"end": 4198,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 4111,
											"end": 4198,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4111,
											"end": 4198,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 4111,
											"end": 4198,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4111,
											"end": 4198,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 4111,
											"end": 4198,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4111,
											"end": 4198,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4111,
											"end": 4198,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4111,
											"end": 4198,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4111,
											"end": 4198,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4111,
											"end": 4198,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4111,
											"end": 4198,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4111,
											"end": 4198,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4111,
											"end": 4198,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 4111,
											"end": 4198,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4757,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4749,
											"end": 4757,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4739,
											"end": 4746,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4739,
											"end": 4757,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 4739,
											"end": 4757,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4739,
											"end": 4757,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4739,
											"end": 4757,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4739,
											"end": 4757,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4739,
											"end": 4757,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 4739,
											"end": 4757,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4726,
											"end": 4757,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4726,
											"end": 4757,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4807,
											"end": 4817,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4796,
											"end": 4804,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 4796,
											"end": 4817,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4796,
											"end": 4817,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4796,
											"end": 4817,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4796,
											"end": 4817,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4839,
											"end": 4846,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4828,
											"end": 4836,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4828,
											"end": 4846,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4828,
											"end": 4846,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4828,
											"end": 4846,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4828,
											"end": 4846,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 4998,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 4998,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 4998,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 4998,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1482,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 4998,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 4998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 456,
											"end": 476,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 456,
											"end": 476,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 456,
											"end": 476,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 456,
											"end": 476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 187,
											"end": 223,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 187,
											"end": 223,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 187,
											"end": 223,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "794"
										},
										{
											"begin": 187,
											"end": 223,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 187,
											"end": 223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2202,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2089,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1424,
											"end": 1443,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1424,
											"end": 1443,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1424,
											"end": 1429,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "796"
										},
										{
											"begin": 1424,
											"end": 1443,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1424,
											"end": 1443,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1424,
											"end": 1443,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 1416,
											"end": 1470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 1416,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 1571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1563,
											"end": 1571,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1559,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1571,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1571,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1609,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 1536,
											"end": 1609,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1536,
											"end": 1609,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1536,
											"end": 1609,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1609,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1536,
											"end": 1609,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1609,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 1536,
											"end": 1609,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1609,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 1536,
											"end": 1609,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1609,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 1536,
											"end": 1609,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1536,
											"end": 1609,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1609,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1609,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1609,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1609,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1609,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1609,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 1536,
											"end": 1609,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2194,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2174,
											"end": 2182,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2174,
											"end": 2194,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2174,
											"end": 2194,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2174,
											"end": 2194,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2174,
											"end": 2194,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2202,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2089,
											"end": 2202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6221,
											"end": 6325,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 6221,
											"end": 6325,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6272,
											"end": 6278,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6308,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6302,
											"end": 6303,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6302,
											"end": 6308,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6302,
											"end": 6308,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6301,
											"end": 6317,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 6301,
											"end": 6317,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6316,
											"end": 6317,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6301,
											"end": 6317,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 6301,
											"end": 6317,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6301,
											"end": 6317,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 6301,
											"end": 6317,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6312,
											"end": 6313,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6301,
											"end": 6317,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 6301,
											"end": 6317,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6297,
											"end": 6317,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6297,
											"end": 6317,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6221,
											"end": 6325,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6221,
											"end": 6325,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6221,
											"end": 6325,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6221,
											"end": 6325,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6221,
											"end": 6325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 1995,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 1998,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 2143,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2089,
											"end": 2206,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2247,
											"end": 2250,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2273,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2335,
											"end": 2344,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 2413,
											"end": 2418,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2395,
											"end": 2419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 2386,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2368,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2421,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2421,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2492,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 2547,
											"end": 2552,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 2516,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2503,
											"end": 2553,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2503,
											"end": 2553,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2629,
											"end": 2638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2662,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 2693,
											"end": 2698,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2662,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 2662,
											"end": 2699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2662,
											"end": 2699,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 2662,
											"end": 2699,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 2699,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 2699,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2711,
											"end": 2870,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 2711,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2812,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 2857,
											"end": 2862,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2812,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2812,
											"end": 2863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2812,
											"end": 2863,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 2812,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2807,
											"end": 2810,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2800,
											"end": 2864,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2711,
											"end": 2870,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2711,
											"end": 2870,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2711,
											"end": 2870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2983,
											"end": 2987,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3021,
											"end": 3023,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3019,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3006,
											"end": 3024,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2998,
											"end": 3024,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2998,
											"end": 3024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 3116,
											"end": 3117,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3101,
											"end": 3118,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 3034,
											"end": 3119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 3126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3250,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 3132,
											"end": 3250,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3219,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 3237,
											"end": 3242,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3219,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 3219,
											"end": 3243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3219,
											"end": 3243,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 3219,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3214,
											"end": 3217,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3244,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3250,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3250,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3349,
											"end": 3353,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3387,
											"end": 3389,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3376,
											"end": 3385,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3372,
											"end": 3390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3364,
											"end": 3390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3364,
											"end": 3390,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3400,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 3468,
											"end": 3469,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3457,
											"end": 3466,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3470,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3450,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3400,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 3400,
											"end": 3471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3400,
											"end": 3471,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 3400,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3664,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 3484,
											"end": 3664,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3532,
											"end": 3609,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3529,
											"end": 3530,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3522,
											"end": 3610,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3629,
											"end": 3633,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3626,
											"end": 3627,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3619,
											"end": 3634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3653,
											"end": 3657,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3650,
											"end": 3651,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3643,
											"end": 3658,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3670,
											"end": 3864,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 3670,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3710,
											"end": 3714,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3730,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 3748,
											"end": 3749,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 3730,
											"end": 3750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3750,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 3730,
											"end": 3750,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3725,
											"end": 3750,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3725,
											"end": 3750,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3764,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3764,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 3764,
											"end": 3784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3764,
											"end": 3784,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 3764,
											"end": 3784,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3759,
											"end": 3784,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3759,
											"end": 3784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3809,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3805,
											"end": 3806,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3810,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3810,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3810,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3832,
											"end": 3833,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 3830,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3834,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3857,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3857,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 3820,
											"end": 3857,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 3837,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3820,
											"end": 3857,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 3820,
											"end": 3857,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3670,
											"end": 3864,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3670,
											"end": 3864,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3670,
											"end": 3864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3670,
											"end": 3864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3670,
											"end": 3864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 4280,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3870,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3910,
											"end": 3917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 3951,
											"end": 3952,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3933,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 3933,
											"end": 3953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3933,
											"end": 3953,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 3933,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 3953,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 3953,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3967,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 3985,
											"end": 3986,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3967,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 3967,
											"end": 3987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3967,
											"end": 3987,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 3967,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3962,
											"end": 3987,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3962,
											"end": 3987,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4022,
											"end": 4023,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4019,
											"end": 4020,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4015,
											"end": 4024,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 4062,
											"end": 4073,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4044,
											"end": 4074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 4074,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 4044,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4033,
											"end": 4074,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4033,
											"end": 4074,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4223,
											"end": 4224,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4214,
											"end": 4221,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4210,
											"end": 4225,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4207,
											"end": 4208,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4226,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4184,
											"end": 4185,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4177,
											"end": 4186,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4157,
											"end": 4240,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4134,
											"end": 4273,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 4134,
											"end": 4273,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4253,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 4253,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 4253,
											"end": 4271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4253,
											"end": 4271,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 4253,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4134,
											"end": 4273,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 4134,
											"end": 4273,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3918,
											"end": 4280,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 4280,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 4280,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 4280,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 4280,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 4280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4286,
											"end": 4466,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 4286,
											"end": 4466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4411,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4331,
											"end": 4332,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4324,
											"end": 4412,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4431,
											"end": 4435,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 4428,
											"end": 4429,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4421,
											"end": 4436,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4455,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4452,
											"end": 4453,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4445,
											"end": 4460,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4472,
											"end": 4657,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 4472,
											"end": 4657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4512,
											"end": 4513,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4529,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 4547,
											"end": 4548,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4529,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4529,
											"end": 4549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4529,
											"end": 4549,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 4529,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4524,
											"end": 4549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4524,
											"end": 4549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 4581,
											"end": 4582,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4563,
											"end": 4583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 4563,
											"end": 4583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4558,
											"end": 4583,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4558,
											"end": 4583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4602,
											"end": 4603,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4592,
											"end": 4627,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 4592,
											"end": 4627,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4607,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 4607,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 4607,
											"end": 4625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4607,
											"end": 4625,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 4607,
											"end": 4625,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4592,
											"end": 4627,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 4592,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4649,
											"end": 4650,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4646,
											"end": 4647,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4637,
											"end": 4651,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4637,
											"end": 4651,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4472,
											"end": 4657,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4472,
											"end": 4657,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4472,
											"end": 4657,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4472,
											"end": 4657,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4472,
											"end": 4657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4854,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4663,
											"end": 4854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4703,
											"end": 4706,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4722,
											"end": 4742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 4740,
											"end": 4741,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4722,
											"end": 4742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4722,
											"end": 4742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4722,
											"end": 4742,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 4722,
											"end": 4742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4717,
											"end": 4742,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4717,
											"end": 4742,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4756,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 4774,
											"end": 4775,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4756,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4756,
											"end": 4776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4756,
											"end": 4776,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 4756,
											"end": 4776,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4751,
											"end": 4776,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4751,
											"end": 4776,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4799,
											"end": 4800,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4796,
											"end": 4797,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4792,
											"end": 4801,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4785,
											"end": 4801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4785,
											"end": 4801,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4820,
											"end": 4823,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4817,
											"end": 4818,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4814,
											"end": 4824,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4847,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 4811,
											"end": 4847,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4827,
											"end": 4845,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 4827,
											"end": 4845,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 4827,
											"end": 4845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4827,
											"end": 4845,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 4827,
											"end": 4845,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4847,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 4811,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4854,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4854,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 5192,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 4860,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4981,
											"end": 4985,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5019,
											"end": 5021,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5008,
											"end": 5017,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5004,
											"end": 5022,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4996,
											"end": 5022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4996,
											"end": 5022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5032,
											"end": 5103,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 5100,
											"end": 5101,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5089,
											"end": 5098,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5085,
											"end": 5102,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5076,
											"end": 5082,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5032,
											"end": 5103,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 5032,
											"end": 5103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5032,
											"end": 5103,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 5032,
											"end": 5103,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5113,
											"end": 5185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 5181,
											"end": 5183,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5170,
											"end": 5179,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5166,
											"end": 5184,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5157,
											"end": 5163,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5113,
											"end": 5185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 5113,
											"end": 5185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5113,
											"end": 5185,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 5113,
											"end": 5185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 5192,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 5192,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 5192,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 5192,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 5192,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 5192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5198,
											"end": 5288,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 5198,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5232,
											"end": 5239,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5275,
											"end": 5280,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5268,
											"end": 5281,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5261,
											"end": 5282,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5250,
											"end": 5282,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5250,
											"end": 5282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5198,
											"end": 5288,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5198,
											"end": 5288,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5198,
											"end": 5288,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5198,
											"end": 5288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5294,
											"end": 5410,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 5294,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5364,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 5379,
											"end": 5384,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5364,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 5364,
											"end": 5385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5364,
											"end": 5385,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 5364,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5357,
											"end": 5362,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5386,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5344,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 5344,
											"end": 5404,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5400,
											"end": 5401,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5397,
											"end": 5398,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5390,
											"end": 5402,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5344,
											"end": 5404,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 5344,
											"end": 5404,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5294,
											"end": 5410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5294,
											"end": 5410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5416,
											"end": 5553,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 5416,
											"end": 5553,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5475,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5495,
											"end": 5508,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5486,
											"end": 5508,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5486,
											"end": 5508,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 5541,
											"end": 5546,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5416,
											"end": 5553,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5416,
											"end": 5553,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5416,
											"end": 5553,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5416,
											"end": 5553,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5416,
											"end": 5553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5559,
											"end": 5904,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 5559,
											"end": 5904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5675,
											"end": 5677,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5663,
											"end": 5672,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5654,
											"end": 5661,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5650,
											"end": 5673,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5646,
											"end": 5678,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5643,
											"end": 5762,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5643,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 5643,
											"end": 5762,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5681,
											"end": 5760,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 5681,
											"end": 5760,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 5681,
											"end": 5760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5681,
											"end": 5760,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 5681,
											"end": 5760,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5643,
											"end": 5762,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 5643,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5801,
											"end": 5802,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5826,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 5879,
											"end": 5886,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5876,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5859,
											"end": 5868,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5855,
											"end": 5877,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5826,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 5826,
											"end": 5887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5826,
											"end": 5887,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 5826,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5816,
											"end": 5887,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5816,
											"end": 5887,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5772,
											"end": 5897,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5559,
											"end": 5904,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5559,
											"end": 5904,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5559,
											"end": 5904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5559,
											"end": 5904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5559,
											"end": 5904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5910,
											"end": 6079,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 5910,
											"end": 6079,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5994,
											"end": 6005,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6028,
											"end": 6034,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6023,
											"end": 6026,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6016,
											"end": 6035,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6068,
											"end": 6072,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6063,
											"end": 6066,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6059,
											"end": 6073,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6044,
											"end": 6073,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5910,
											"end": 6079,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5910,
											"end": 6079,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5910,
											"end": 6079,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5910,
											"end": 6079,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5910,
											"end": 6079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6085,
											"end": 6245,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 6085,
											"end": 6245,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6237,
											"name": "PUSH",
											"source": 6,
											"value": "616D6F756E74203D203000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6221,
											"end": 6222,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6219,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6209,
											"end": 6223,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6202,
											"end": 6238,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6085,
											"end": 6245,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6085,
											"end": 6245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6251,
											"end": 6617,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 6251,
											"end": 6617,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6396,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6414,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 6478,
											"end": 6480,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 6473,
											"end": 6476,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6414,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 6414,
											"end": 6481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6414,
											"end": 6481,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 6414,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6407,
											"end": 6481,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6407,
											"end": 6481,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6490,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 6579,
											"end": 6582,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6490,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 6490,
											"end": 6583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6490,
											"end": 6583,
											"name": "tag",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 6490,
											"end": 6583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6610,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6603,
											"end": 6606,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6599,
											"end": 6611,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6592,
											"end": 6611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6592,
											"end": 6611,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6251,
											"end": 6617,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6251,
											"end": 6617,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6251,
											"end": 6617,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6251,
											"end": 6617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6623,
											"end": 7042,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 6623,
											"end": 7042,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6789,
											"end": 6793,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6827,
											"end": 6829,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6816,
											"end": 6825,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6812,
											"end": 6830,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6804,
											"end": 6830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6804,
											"end": 6830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6876,
											"end": 6885,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6870,
											"end": 6874,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6862,
											"end": 6863,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6851,
											"end": 6860,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6847,
											"end": 6864,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6840,
											"end": 6887,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6904,
											"end": 7035,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 7030,
											"end": 7034,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6904,
											"end": 7035,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 6904,
											"end": 7035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6904,
											"end": 7035,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 6904,
											"end": 7035,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6896,
											"end": 7035,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6896,
											"end": 7035,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6623,
											"end": 7042,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6623,
											"end": 7042,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6623,
											"end": 7042,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6623,
											"end": 7042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7048,
											"end": 7490,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 7048,
											"end": 7490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7197,
											"end": 7201,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7235,
											"end": 7237,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7224,
											"end": 7233,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7220,
											"end": 7238,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7212,
											"end": 7238,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7212,
											"end": 7238,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7248,
											"end": 7319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 7316,
											"end": 7317,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7305,
											"end": 7314,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7301,
											"end": 7318,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7292,
											"end": 7298,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7248,
											"end": 7319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 7248,
											"end": 7319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7248,
											"end": 7319,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 7248,
											"end": 7319,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7329,
											"end": 7401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 7397,
											"end": 7399,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7386,
											"end": 7395,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7382,
											"end": 7400,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7373,
											"end": 7379,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7329,
											"end": 7401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 7329,
											"end": 7401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7329,
											"end": 7401,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 7329,
											"end": 7401,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7411,
											"end": 7483,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 7479,
											"end": 7481,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7468,
											"end": 7477,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7464,
											"end": 7482,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7455,
											"end": 7461,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7411,
											"end": 7483,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 7411,
											"end": 7483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7411,
											"end": 7483,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 7411,
											"end": 7483,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7048,
											"end": 7490,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 7048,
											"end": 7490,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7048,
											"end": 7490,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7048,
											"end": 7490,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7048,
											"end": 7490,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7048,
											"end": 7490,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7048,
											"end": 7490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7496,
											"end": 7668,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 7496,
											"end": 7668,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7636,
											"end": 7660,
											"name": "PUSH",
											"source": 6,
											"value": "4F6E6C79206F776E657220697320616C6C6F7765642E00000000000000000000"
										},
										{
											"begin": 7632,
											"end": 7633,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7624,
											"end": 7630,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7620,
											"end": 7634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7613,
											"end": 7661,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7496,
											"end": 7668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7496,
											"end": 7668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7674,
											"end": 8040,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 7674,
											"end": 8040,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7816,
											"end": 7819,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7837,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 7901,
											"end": 7903,
											"name": "PUSH",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 7896,
											"end": 7899,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7837,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 7837,
											"end": 7904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7837,
											"end": 7904,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 7837,
											"end": 7904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7830,
											"end": 7904,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7830,
											"end": 7904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7913,
											"end": 8006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 8002,
											"end": 8005,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7913,
											"end": 8006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 7913,
											"end": 8006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7913,
											"end": 8006,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 7913,
											"end": 8006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8031,
											"end": 8033,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8026,
											"end": 8029,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8022,
											"end": 8034,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8015,
											"end": 8034,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8015,
											"end": 8034,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7674,
											"end": 8040,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7674,
											"end": 8040,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7674,
											"end": 8040,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7674,
											"end": 8040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8046,
											"end": 8465,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 8046,
											"end": 8465,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8216,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8250,
											"end": 8252,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8239,
											"end": 8248,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8235,
											"end": 8253,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8227,
											"end": 8253,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8227,
											"end": 8253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8299,
											"end": 8308,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8293,
											"end": 8297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8289,
											"end": 8309,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8285,
											"end": 8286,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8274,
											"end": 8283,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8270,
											"end": 8287,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8263,
											"end": 8310,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8327,
											"end": 8458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 8453,
											"end": 8457,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8327,
											"end": 8458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 8327,
											"end": 8458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8327,
											"end": 8458,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 8327,
											"end": 8458,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8319,
											"end": 8458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8319,
											"end": 8458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8046,
											"end": 8465,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8046,
											"end": 8465,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8046,
											"end": 8465,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8046,
											"end": 8465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8471,
											"end": 8693,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 8471,
											"end": 8693,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8611,
											"end": 8645,
											"name": "PUSH",
											"source": 6,
											"value": "736574526577617264733A2073657420746865206475726174696F6E20666972"
										},
										{
											"begin": 8607,
											"end": 8608,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8599,
											"end": 8605,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8609,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8588,
											"end": 8646,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8680,
											"end": 8685,
											"name": "PUSH",
											"source": 6,
											"value": "73742E0000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8675,
											"end": 8677,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8667,
											"end": 8673,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8678,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8656,
											"end": 8686,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8471,
											"end": 8693,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8471,
											"end": 8693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8699,
											"end": 9065,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 8699,
											"end": 9065,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8841,
											"end": 8844,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8862,
											"end": 8929,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 8926,
											"end": 8928,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 8921,
											"end": 8924,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8862,
											"end": 8929,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 8862,
											"end": 8929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8862,
											"end": 8929,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 8862,
											"end": 8929,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8855,
											"end": 8929,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8855,
											"end": 8929,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 9027,
											"end": 9030,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 8938,
											"end": 9031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9031,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 8938,
											"end": 9031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9056,
											"end": 9058,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9051,
											"end": 9054,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9047,
											"end": 9059,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9040,
											"end": 9059,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9040,
											"end": 9059,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8699,
											"end": 9065,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8699,
											"end": 9065,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8699,
											"end": 9065,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8699,
											"end": 9065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9071,
											"end": 9490,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 9071,
											"end": 9490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9237,
											"end": 9241,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9275,
											"end": 9277,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9264,
											"end": 9273,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9260,
											"end": 9278,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9252,
											"end": 9278,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9252,
											"end": 9278,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9333,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9318,
											"end": 9322,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9314,
											"end": 9334,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9310,
											"end": 9311,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9299,
											"end": 9308,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9295,
											"end": 9312,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9288,
											"end": 9335,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9352,
											"end": 9483,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 9478,
											"end": 9482,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9352,
											"end": 9483,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 9352,
											"end": 9483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9352,
											"end": 9483,
											"name": "tag",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 9352,
											"end": 9483,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9344,
											"end": 9483,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9344,
											"end": 9483,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9071,
											"end": 9490,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9071,
											"end": 9490,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9071,
											"end": 9490,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9071,
											"end": 9490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9496,
											"end": 9676,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 9496,
											"end": 9676,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9636,
											"end": 9668,
											"name": "PUSH",
											"source": 6,
											"value": "736574526577617264733A207265776F72647320616D6F756E74203D20300000"
										},
										{
											"begin": 9632,
											"end": 9633,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9624,
											"end": 9630,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9620,
											"end": 9634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9613,
											"end": 9669,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9496,
											"end": 9676,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9496,
											"end": 9676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9682,
											"end": 10048,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 9682,
											"end": 10048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9824,
											"end": 9827,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9845,
											"end": 9912,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 9909,
											"end": 9911,
											"name": "PUSH",
											"source": 6,
											"value": "1E"
										},
										{
											"begin": 9904,
											"end": 9907,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9845,
											"end": 9912,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 9845,
											"end": 9912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9845,
											"end": 9912,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 9845,
											"end": 9912,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9838,
											"end": 9912,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9838,
											"end": 9912,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9921,
											"end": 10014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 10010,
											"end": 10013,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9921,
											"end": 10014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 9921,
											"end": 10014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9921,
											"end": 10014,
											"name": "tag",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 9921,
											"end": 10014,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10039,
											"end": 10041,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10034,
											"end": 10037,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10030,
											"end": 10042,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10023,
											"end": 10042,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10023,
											"end": 10042,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9682,
											"end": 10048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9682,
											"end": 10048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9682,
											"end": 10048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9682,
											"end": 10048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10054,
											"end": 10473,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 10054,
											"end": 10473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10220,
											"end": 10224,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10258,
											"end": 10260,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10247,
											"end": 10256,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10243,
											"end": 10261,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10235,
											"end": 10261,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10235,
											"end": 10261,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10307,
											"end": 10316,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10301,
											"end": 10305,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10297,
											"end": 10317,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10293,
											"end": 10294,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10282,
											"end": 10291,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10278,
											"end": 10295,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10271,
											"end": 10318,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10335,
											"end": 10466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 10461,
											"end": 10465,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10335,
											"end": 10466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 10335,
											"end": 10466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10335,
											"end": 10466,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 10335,
											"end": 10466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10327,
											"end": 10466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10327,
											"end": 10466,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10054,
											"end": 10473,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10054,
											"end": 10473,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10054,
											"end": 10473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10054,
											"end": 10473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10479,
											"end": 10622,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 10479,
											"end": 10622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10536,
											"end": 10541,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10567,
											"end": 10573,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10561,
											"end": 10574,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10552,
											"end": 10574,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10552,
											"end": 10574,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10583,
											"end": 10616,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 10610,
											"end": 10615,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10583,
											"end": 10616,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 10583,
											"end": 10616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10583,
											"end": 10616,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 10583,
											"end": 10616,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10479,
											"end": 10622,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10479,
											"end": 10622,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10479,
											"end": 10622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10479,
											"end": 10622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10479,
											"end": 10622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10628,
											"end": 10979,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 10628,
											"end": 10979,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10698,
											"end": 10704,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10747,
											"end": 10749,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10735,
											"end": 10744,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10726,
											"end": 10733,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10722,
											"end": 10745,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10718,
											"end": 10750,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 10715,
											"end": 10834,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10715,
											"end": 10834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 10715,
											"end": 10834,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10753,
											"end": 10832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 10753,
											"end": 10832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 10753,
											"end": 10832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10753,
											"end": 10832,
											"name": "tag",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 10753,
											"end": 10832,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10715,
											"end": 10834,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 10715,
											"end": 10834,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10873,
											"end": 10874,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10898,
											"end": 10962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 10954,
											"end": 10961,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 10951,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10934,
											"end": 10943,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10930,
											"end": 10952,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10898,
											"end": 10962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 10898,
											"end": 10962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10898,
											"end": 10962,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 10898,
											"end": 10962,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10888,
											"end": 10962,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10888,
											"end": 10962,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10844,
											"end": 10972,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10628,
											"end": 10979,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10628,
											"end": 10979,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10628,
											"end": 10979,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10628,
											"end": 10979,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10628,
											"end": 10979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10985,
											"end": 11162,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 10985,
											"end": 11162,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11125,
											"end": 11154,
											"name": "PUSH",
											"source": 6,
											"value": "736574526577617264733A207265776F72642072617465203D20300000000000"
										},
										{
											"begin": 11121,
											"end": 11122,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11113,
											"end": 11119,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11109,
											"end": 11123,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11102,
											"end": 11155,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10985,
											"end": 11162,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10985,
											"end": 11162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11168,
											"end": 11534,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 11168,
											"end": 11534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11310,
											"end": 11313,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11331,
											"end": 11398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 11395,
											"end": 11397,
											"name": "PUSH",
											"source": 6,
											"value": "1B"
										},
										{
											"begin": 11390,
											"end": 11393,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11331,
											"end": 11398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 11331,
											"end": 11398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11331,
											"end": 11398,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 11331,
											"end": 11398,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11324,
											"end": 11398,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11324,
											"end": 11398,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11407,
											"end": 11500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 11496,
											"end": 11499,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11407,
											"end": 11500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 11407,
											"end": 11500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11407,
											"end": 11500,
											"name": "tag",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 11407,
											"end": 11500,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11525,
											"end": 11527,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11520,
											"end": 11523,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11516,
											"end": 11528,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11509,
											"end": 11528,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11509,
											"end": 11528,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11168,
											"end": 11534,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11168,
											"end": 11534,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11168,
											"end": 11534,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11168,
											"end": 11534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11540,
											"end": 11959,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 11540,
											"end": 11959,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11706,
											"end": 11710,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11744,
											"end": 11746,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11733,
											"end": 11742,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11729,
											"end": 11747,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11721,
											"end": 11747,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11721,
											"end": 11747,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11793,
											"end": 11802,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11787,
											"end": 11791,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11783,
											"end": 11803,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11779,
											"end": 11780,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11768,
											"end": 11777,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11764,
											"end": 11781,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11757,
											"end": 11804,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11821,
											"end": 11952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 11947,
											"end": 11951,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11821,
											"end": 11952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 11821,
											"end": 11952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11821,
											"end": 11952,
											"name": "tag",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 11821,
											"end": 11952,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11813,
											"end": 11952,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11813,
											"end": 11952,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11540,
											"end": 11959,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11540,
											"end": 11959,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11540,
											"end": 11959,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11540,
											"end": 11959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11965,
											"end": 12144,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 11965,
											"end": 12144,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12105,
											"end": 12136,
											"name": "PUSH",
											"source": 6,
											"value": "736574526577617264733A2072657761726473203C2062616C616E6365000000"
										},
										{
											"begin": 12101,
											"end": 12102,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12093,
											"end": 12099,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12089,
											"end": 12103,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12082,
											"end": 12137,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11965,
											"end": 12144,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11965,
											"end": 12144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12150,
											"end": 12516,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 12150,
											"end": 12516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12292,
											"end": 12295,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12313,
											"end": 12380,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 12377,
											"end": 12379,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 12372,
											"end": 12375,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12313,
											"end": 12380,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 12313,
											"end": 12380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12313,
											"end": 12380,
											"name": "tag",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 12313,
											"end": 12380,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12306,
											"end": 12380,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12306,
											"end": 12380,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12389,
											"end": 12482,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 12478,
											"end": 12481,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12389,
											"end": 12482,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 12389,
											"end": 12482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12389,
											"end": 12482,
											"name": "tag",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 12389,
											"end": 12482,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12507,
											"end": 12509,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12502,
											"end": 12505,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12498,
											"end": 12510,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12491,
											"end": 12510,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12491,
											"end": 12510,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12150,
											"end": 12516,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12150,
											"end": 12516,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12150,
											"end": 12516,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12150,
											"end": 12516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12522,
											"end": 12941,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 12522,
											"end": 12941,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12688,
											"end": 12692,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12726,
											"end": 12728,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12715,
											"end": 12724,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12711,
											"end": 12729,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12703,
											"end": 12729,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12703,
											"end": 12729,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12775,
											"end": 12784,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12769,
											"end": 12773,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12765,
											"end": 12785,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12761,
											"end": 12762,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12750,
											"end": 12759,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12746,
											"end": 12763,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12739,
											"end": 12786,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12803,
											"end": 12934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 12929,
											"end": 12933,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12803,
											"end": 12934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 12803,
											"end": 12934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12803,
											"end": 12934,
											"name": "tag",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 12803,
											"end": 12934,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12795,
											"end": 12934,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12795,
											"end": 12934,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12522,
											"end": 12941,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12522,
											"end": 12941,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12522,
											"end": 12941,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12522,
											"end": 12941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12947,
											"end": 13167,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 12947,
											"end": 13167,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13087,
											"end": 13121,
											"name": "PUSH",
											"source": 6,
											"value": "2069742063616E27742062652073657420647572696E6720726577617264696E"
										},
										{
											"begin": 13083,
											"end": 13084,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13075,
											"end": 13081,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13071,
											"end": 13085,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13064,
											"end": 13122,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13156,
											"end": 13159,
											"name": "PUSH",
											"source": 6,
											"value": "6700000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13151,
											"end": 13153,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13143,
											"end": 13149,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13139,
											"end": 13154,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13132,
											"end": 13160,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12947,
											"end": 13167,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12947,
											"end": 13167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13173,
											"end": 13539,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 13173,
											"end": 13539,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13315,
											"end": 13318,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13336,
											"end": 13403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 13400,
											"end": 13402,
											"name": "PUSH",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 13395,
											"end": 13398,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13336,
											"end": 13403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 13336,
											"end": 13403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13336,
											"end": 13403,
											"name": "tag",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 13336,
											"end": 13403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13329,
											"end": 13403,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13329,
											"end": 13403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13412,
											"end": 13505,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 13501,
											"end": 13504,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13412,
											"end": 13505,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 13412,
											"end": 13505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13412,
											"end": 13505,
											"name": "tag",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 13412,
											"end": 13505,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13530,
											"end": 13532,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13525,
											"end": 13528,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13521,
											"end": 13533,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13514,
											"end": 13533,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13514,
											"end": 13533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13173,
											"end": 13539,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13173,
											"end": 13539,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13173,
											"end": 13539,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13173,
											"end": 13539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13545,
											"end": 13964,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 13545,
											"end": 13964,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13711,
											"end": 13715,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13749,
											"end": 13751,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13738,
											"end": 13747,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13734,
											"end": 13752,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13726,
											"end": 13752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13726,
											"end": 13752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13798,
											"end": 13807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13792,
											"end": 13796,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13788,
											"end": 13808,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13784,
											"end": 13785,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13773,
											"end": 13782,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13769,
											"end": 13786,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13762,
											"end": 13809,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13826,
											"end": 13957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 13952,
											"end": 13956,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13826,
											"end": 13957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 13826,
											"end": 13957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13826,
											"end": 13957,
											"name": "tag",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 13826,
											"end": 13957,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13818,
											"end": 13957,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13818,
											"end": 13957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13545,
											"end": 13964,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13545,
											"end": 13964,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13545,
											"end": 13964,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13545,
											"end": 13964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"StakingRewards.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"duration()": "0fb5a6b4",
							"earned(address)": "008cc262",
							"finishAt()": "67d3b488",
							"getRewards()": "0572b0cc",
							"owner()": "8da5cb5b",
							"rewardsPerToken()": "70641a36",
							"rewardsPerTokenStored()": "350fd407",
							"rewardsRate()": "523bc7d5",
							"rewardsToken()": "d1af0c7d",
							"setDuration(uint256)": "f6be71d1",
							"setRewards(uint256)": "c7a29c6f",
							"stake(uint256)": "a694fc3a",
							"stakingToken()": "72f702f3",
							"stakingTokensTotalSupply()": "4334f3ff",
							"updateAt()": "c964f585",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finishAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsPerTokenStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"setDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewordsAmount\",\"type\":\"uint256\"}],\"name\":\"setRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingTokensTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"StakingRewards.sol\":\"MyStaking\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"StakingRewards.sol\":{\"keccak256\":\"0x9e77837b43b989b184c05334cfce3355ead3ba033aaa94b93bf36ad10c6544ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85524551ae6063761e6e63fec20e76f591ddf2232a923fb6c9bc51fc72e7562b\",\"dweb:/ipfs/QmYC79F4E9AxpvuFK6GdunVQt5KefL3PwVtoMF7aKBgYxa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 798,
								"contract": "StakingRewards.sol:MyStaking",
								"label": "stakingTokensTotalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 800,
								"contract": "StakingRewards.sol:MyStaking",
								"label": "duration",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 802,
								"contract": "StakingRewards.sol:MyStaking",
								"label": "updateAt",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 804,
								"contract": "StakingRewards.sol:MyStaking",
								"label": "finishAt",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 806,
								"contract": "StakingRewards.sol:MyStaking",
								"label": "rewardsRate",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 808,
								"contract": "StakingRewards.sol:MyStaking",
								"label": "rewardsPerTokenStored",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 812,
								"contract": "StakingRewards.sol:MyStaking",
								"label": "userRewardsPerTokenPaid",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 816,
								"contract": "StakingRewards.sol:MyStaking",
								"label": "userRewards",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 820,
								"contract": "StakingRewards.sol:MyStaking",
								"label": "userStakingTokens",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1657:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1667:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1675:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1690:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1700:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1613:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1634:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:1"
									},
									"scope": 651,
									"src": "1601:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1839:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1856:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1849:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1824:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:1"
									},
									"scope": 651,
									"src": "1779:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2043:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2060:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2053:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2028:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:1"
									},
									"scope": 651,
									"src": "1981:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2763:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2773:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2756:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:1"
									},
									"scope": 651,
									"src": "2707:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2910:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2927:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2920:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2901:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:1"
									},
									"scope": 651,
									"src": "2849:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3078:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3095:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3105:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3088:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:1"
									},
									"scope": 651,
									"src": "3004:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3390:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3400:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3416:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3448:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3455:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3459:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3438:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3475:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3333:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3345:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3384:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:1"
									},
									"scope": 651,
									"src": "3315:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3640:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3657:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3669:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3676:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3650:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3570:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3585:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3631:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:1"
									},
									"scope": 651,
									"src": "3551:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4077:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4087:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4103:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4134:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4141:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4150:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4125:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4166:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4015:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4071:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:1"
									},
									"scope": 651,
									"src": "3998:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4869:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4879:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4897:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4935:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4941:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4950:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4919:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4976:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4982:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4986:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4966:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5002:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4798:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4812:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4824:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4863:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:1"
									},
									"scope": 651,
									"src": "4776:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5462:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5476:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5472:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5496:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5517:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5510:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5571:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5567:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5589:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5610:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5603:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5670:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5676:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5680:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5662:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5412:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5426:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5438:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:1"
									},
									"scope": 651,
									"src": "5393:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6083:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6097:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6271:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6285:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6307:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6317:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6340:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6354:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6336:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6361:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6411:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6417:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6430:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6386:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6571:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6581:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6589:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6603:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6093:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6117:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6233:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6249:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6647:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6862:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7021:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7031:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7038:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6643:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6665:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6810:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6826:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7092:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7098:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7102:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7083:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7078:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6025:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6039:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6051:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:1"
									},
									"scope": 651,
									"src": "6008:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7514:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7528:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7524:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7551:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7572:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7565:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7644:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7653:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7624:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7473:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7490:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:1"
									},
									"scope": 651,
									"src": "7458:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8040:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8054:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8050:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8077:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8098:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8091:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8156:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8177:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8148:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7999:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8016:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:1"
									},
									"scope": 651,
									"src": "7984:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8800:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8819:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8826:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8835:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8810:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8744:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8759:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8776:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:1"
									},
									"scope": 651,
									"src": "8726:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9799:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9813:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9809:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9834:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9855:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9848:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9911:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9907:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9934:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9955:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9948:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10006:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10018:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10025:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10036:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10055:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10051:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10066:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10094:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10101:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10110:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10085:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10080:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9719:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9734:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9751:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9766:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:1"
									},
									"scope": 651,
									"src": "9701:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10504:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10514:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10551:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10541:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10580:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10576:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10619:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10637:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10656:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10633:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10663:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10715:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10724:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10742:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10688:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10813:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10820:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10829:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10848:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10804:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10440:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10472:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:1"
									},
									"scope": 651,
									"src": "10415:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9788:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10790:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 729,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 729,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 729,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 729,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 729,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 729,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"StakingRewards.sol": {
				"ast": {
					"absolutePath": "StakingRewards.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"MyStaking": [
							1231
						]
					},
					"id": 1232,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1232,
							"sourceUnit": 652,
							"src": "60:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MyStaking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1231,
							"linearizedBaseContracts": [
								1231
							],
							"name": "MyStaking",
							"nameLocation": "128:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "72f702f3",
									"id": 791,
									"mutability": "immutable",
									"name": "stakingToken",
									"nameLocation": "168:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1231,
									"src": "144:36:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$729",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 790,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 789,
											"name": "IERC20",
											"nameLocations": [
												"144:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 729,
											"src": "144:6:5"
										},
										"referencedDeclaration": 729,
										"src": "144:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$729",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d1af0c7d",
									"id": 794,
									"mutability": "immutable",
									"name": "rewardsToken",
									"nameLocation": "211:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1231,
									"src": "187:36:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$729",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 793,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 792,
											"name": "IERC20",
											"nameLocations": [
												"187:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 729,
											"src": "187:6:5"
										},
										"referencedDeclaration": 729,
										"src": "187:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$729",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 796,
									"mutability": "immutable",
									"name": "owner",
									"nameLocation": "257:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1231,
									"src": "232:30:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 795,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "232:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4334f3ff",
									"id": 798,
									"mutability": "mutable",
									"name": "stakingTokensTotalSupply",
									"nameLocation": "328:24:5",
									"nodeType": "VariableDeclaration",
									"scope": 1231,
									"src": "316:36:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 797,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "316:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0fb5a6b4",
									"id": 800,
									"mutability": "mutable",
									"name": "duration",
									"nameLocation": "415:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1231,
									"src": "403:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 799,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "403:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c964f585",
									"id": 802,
									"mutability": "mutable",
									"name": "updateAt",
									"nameLocation": "468:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1231,
									"src": "456:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 801,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "456:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "67d3b488",
									"id": 804,
									"mutability": "mutable",
									"name": "finishAt",
									"nameLocation": "543:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1231,
									"src": "531:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 803,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "531:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "523bc7d5",
									"id": 806,
									"mutability": "mutable",
									"name": "rewardsRate",
									"nameLocation": "612:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1231,
									"src": "600:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 805,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "600:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "350fd407",
									"id": 808,
									"mutability": "mutable",
									"name": "rewardsPerTokenStored",
									"nameLocation": "679:21:5",
									"nodeType": "VariableDeclaration",
									"scope": 1231,
									"src": "667:33:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 807,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "667:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 812,
									"mutability": "mutable",
									"name": "userRewardsPerTokenPaid",
									"nameLocation": "936:23:5",
									"nodeType": "VariableDeclaration",
									"scope": 1231,
									"src": "910:49:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 811,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 809,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "919:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "910:25:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 810,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "930:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 816,
									"mutability": "mutable",
									"name": "userRewards",
									"nameLocation": "1017:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1231,
									"src": "991:37:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 815,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 813,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1000:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "991:25:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 814,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1011:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 820,
									"mutability": "mutable",
									"name": "userStakingTokens",
									"nameLocation": "1110:17:5",
									"nodeType": "VariableDeclaration",
									"scope": 1231,
									"src": "1084:43:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 819,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 817,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1093:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1084:25:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 818,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1104:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "1246:131:5",
										"statements": [
											{
												"expression": {
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 827,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "1257:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 828,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1265:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 829,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1269:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1265:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1257:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 831,
												"nodeType": "ExpressionStatement",
												"src": "1257:18:5"
											},
											{
												"expression": {
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 832,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "1286:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 834,
																"name": "_stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "1308:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 833,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "1301:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1301:21:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"src": "1286:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"id": 837,
												"nodeType": "ExpressionStatement",
												"src": "1286:36:5"
											},
											{
												"expression": {
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 838,
														"name": "rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "1333:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 840,
																"name": "_rewardsToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 824,
																"src": "1355:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 839,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "1348:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 841,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1348:21:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"src": "1333:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"id": 843,
												"nodeType": "ExpressionStatement",
												"src": "1333:36:5"
											}
										]
									},
									"id": 845,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "_stakingToken",
												"nameLocation": "1209:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "1201:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1201:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "_rewardsToken",
												"nameLocation": "1232:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "1224:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1224:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1200:46:5"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1246:0:5"
									},
									"scope": 1231,
									"src": "1189:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 856,
										"nodeType": "Block",
										"src": "1405:85:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 848,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "1424:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 849,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1433:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1437:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1433:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1424:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206f776e657220697320616c6c6f7765642e",
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1445:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1092970c8e9ac56f5cdc3563e775f45e6ec14c0adcb274a0315b4f99dd293331",
																"typeString": "literal_string \"Only owner is allowed.\""
															},
															"value": "Only owner is allowed."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1092970c8e9ac56f5cdc3563e775f45e6ec14c0adcb274a0315b4f99dd293331",
																"typeString": "literal_string \"Only owner is allowed.\""
															}
														],
														"id": 847,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1416:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1416:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 854,
												"nodeType": "ExpressionStatement",
												"src": "1416:54:5"
											},
											{
												"id": 855,
												"nodeType": "PlaceholderStatement",
												"src": "1481:1:5"
											}
										]
									},
									"id": 857,
									"name": "OnlyOwner",
									"nameLocation": "1394:9:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1403:2:5"
									},
									"src": "1385:105:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 868,
										"nodeType": "Block",
										"src": "1525:104:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 860,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1544:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1550:9:5",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1544:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 862,
																"name": "finishAt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 804,
																"src": "1563:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1544:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "2069742063616e27742062652073657420647572696e6720726577617264696e67",
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1573:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45e27ece88b57c14620e031a846cfb3adfd0a2babf5ff90170f42ce8f22132f5",
																"typeString": "literal_string \" it can't be set during rewarding\""
															},
															"value": " it can't be set during rewarding"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45e27ece88b57c14620e031a846cfb3adfd0a2babf5ff90170f42ce8f22132f5",
																"typeString": "literal_string \" it can't be set during rewarding\""
															}
														],
														"id": 859,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1536:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1536:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "1536:73:5"
											},
											{
												"id": 867,
												"nodeType": "PlaceholderStatement",
												"src": "1620:1:5"
											}
										]
									},
									"id": 869,
									"name": "NotDuringRewarding",
									"nameLocation": "1505:18:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1523:2:5"
									},
									"src": "1496:133:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 909,
										"nodeType": "Block",
										"src": "1675:302:5",
										"statements": [
											{
												"expression": {
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 873,
														"name": "rewardsPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "1686:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 874,
															"name": "rewardsPerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "1710:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1710:17:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1686:41:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 877,
												"nodeType": "ExpressionStatement",
												"src": "1686:41:5"
											},
											{
												"expression": {
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 878,
														"name": "updateAt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "1738:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 880,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1754:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1760:9:5",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1754:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 882,
																"name": "finishAt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 804,
																"src": "1771:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 879,
															"name": "_min",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "1749:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 883,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1749:31:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1738:42:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 885,
												"nodeType": "ExpressionStatement",
												"src": "1738:42:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 886,
														"name": "_account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "1794:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1814:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1806:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 887,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1806:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 890,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1806:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1794:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 907,
												"nodeType": "IfStatement",
												"src": "1791:165:5",
												"trueBody": {
													"id": 906,
													"nodeType": "Block",
													"src": "1817:139:5",
													"statements": [
														{
															"expression": {
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 892,
																		"name": "userRewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 816,
																		"src": "1832:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 894,
																	"indexExpression": {
																		"id": 893,
																		"name": "_account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 871,
																		"src": "1844:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1832:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 896,
																			"name": "_account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 871,
																			"src": "1863:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 895,
																		"name": "earned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1195,
																		"src": "1856:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1856:16:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1832:40:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 899,
															"nodeType": "ExpressionStatement",
															"src": "1832:40:5"
														},
														{
															"expression": {
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 900,
																		"name": "userRewardsPerTokenPaid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 812,
																		"src": "1887:23:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 902,
																	"indexExpression": {
																		"id": 901,
																		"name": "_account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 871,
																		"src": "1911:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1887:33:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 903,
																	"name": "rewardsPerTokenStored",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "1923:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1887:57:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 905,
															"nodeType": "ExpressionStatement",
															"src": "1887:57:5"
														}
													]
												}
											},
											{
												"id": 908,
												"nodeType": "PlaceholderStatement",
												"src": "1968:1:5"
											}
										]
									},
									"id": 910,
									"name": "updateRewards",
									"nameLocation": "1644:13:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "1666:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "1658:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1657:18:5"
									},
									"src": "1635:342:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "2163:39:5",
										"statements": [
											{
												"expression": {
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 919,
														"name": "duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "2174:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 920,
														"name": "_duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "2185:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2174:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 922,
												"nodeType": "ExpressionStatement",
												"src": "2174:20:5"
											}
										]
									},
									"functionSelector": "f6be71d1",
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 915,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 914,
												"name": "OnlyOwner",
												"nameLocations": [
													"2135:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 857,
												"src": "2135:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2135:9:5"
										},
										{
											"id": 917,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 916,
												"name": "NotDuringRewarding",
												"nameLocations": [
													"2145:18:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 869,
												"src": "2145:18:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2145:18:5"
										}
									],
									"name": "setDuration",
									"nameLocation": "2098:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "_duration",
												"nameLocation": "2115:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "2110:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2110:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2109:16:5"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2163:0:5"
									},
									"scope": 1231,
									"src": "2089:113:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1041,
										"nodeType": "Block",
										"src": "2488:2510:5",
										"statements": [
											{
												"assignments": [
													938
												],
												"declarations": [
													{
														"constant": false,
														"id": 938,
														"mutability": "mutable",
														"name": "newDuration",
														"nameLocation": "2557:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 1041,
														"src": "2552:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 937,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2552:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 940,
												"initialValue": {
													"id": 939,
													"name": "duration",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 800,
													"src": "2571:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2552:27:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 942,
																"name": "newDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 938,
																"src": "2598:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 943,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2613:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2598:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "736574526577617264733a2073657420746865206475726174696f6e2066697273742e",
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2616:37:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c2370529a6f1a6a816c19114b0cc9d00969efb8f345ea23417ccbd250923201f",
																"typeString": "literal_string \"setRewards: set the duration first.\""
															},
															"value": "setRewards: set the duration first."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c2370529a6f1a6a816c19114b0cc9d00969efb8f345ea23417ccbd250923201f",
																"typeString": "literal_string \"setRewards: set the duration first.\""
															}
														],
														"id": 941,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2590:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:64:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 947,
												"nodeType": "ExpressionStatement",
												"src": "2590:64:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 949,
																"name": "_rewordsAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "2673:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2690:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2673:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "736574526577617264733a207265776f72647320616d6f756e74203d2030",
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2693:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_52f98974f5795dc4fbc4cb1c8cc3e86f9c0b44655886b99eaaf2198dfc23b8a4",
																"typeString": "literal_string \"setRewards: rewords amount = 0\""
															},
															"value": "setRewards: rewords amount = 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_52f98974f5795dc4fbc4cb1c8cc3e86f9c0b44655886b99eaaf2198dfc23b8a4",
																"typeString": "literal_string \"setRewards: rewords amount = 0\""
															}
														],
														"id": 948,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2665:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2665:61:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 954,
												"nodeType": "ExpressionStatement",
												"src": "2665:61:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 958,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "2816:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 961,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2831:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyStaking_$1231",
																		"typeString": "contract MyStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyStaking_$1231",
																		"typeString": "contract MyStaking"
																	}
																],
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2823:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 959,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2823:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2823:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 963,
															"name": "_rewordsAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "2838:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 955,
															"name": "rewardsToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "2790:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2803:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "2790:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2790:63:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 965,
												"nodeType": "ExpressionStatement",
												"src": "2790:63:5"
											},
											{
												"assignments": [
													967
												],
												"declarations": [
													{
														"constant": false,
														"id": 967,
														"mutability": "mutable",
														"name": "balanceOfRewards",
														"nameLocation": "2869:16:5",
														"nodeType": "VariableDeclaration",
														"scope": 1041,
														"src": "2864:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 966,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2864:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 975,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 972,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2919:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyStaking_$1231",
																		"typeString": "contract MyStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyStaking_$1231",
																		"typeString": "contract MyStaking"
																	}
																],
																"id": 971,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2911:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 970,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2911:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2911:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 968,
															"name": "rewardsToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "2888:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2901:9:5",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 686,
														"src": "2888:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2888:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2864:61:5"
											},
											{
												"assignments": [
													977
												],
												"declarations": [
													{
														"constant": false,
														"id": 977,
														"mutability": "mutable",
														"name": "nowtime",
														"nameLocation": "2991:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1041,
														"src": "2986:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 976,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2986:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 980,
												"initialValue": {
													"expression": {
														"id": 978,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "3001:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3007:9:5",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "3001:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2986:30:5"
											},
											{
												"assignments": [
													982
												],
												"declarations": [
													{
														"constant": false,
														"id": 982,
														"mutability": "mutable",
														"name": "finishTime",
														"nameLocation": "3032:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1041,
														"src": "3027:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 981,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3027:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 984,
												"initialValue": {
													"id": 983,
													"name": "finishAt",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 804,
													"src": "3045:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3027:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 985,
														"name": "nowtime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "3068:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 986,
														"name": "finishTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "3079:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3068:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1009,
													"nodeType": "Block",
													"src": "3172:810:5",
													"statements": [
														{
															"expression": {
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 995,
																	"name": "rewardsRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "3707:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1003,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1001,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 996,
																						"name": "rewardsRate",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 806,
																						"src": "3722:11:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 999,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 997,
																									"name": "finishTime",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 982,
																									"src": "3737:10:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"id": 998,
																									"name": "nowtime",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 977,
																									"src": "3750:7:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "3737:20:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1000,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "3736:22:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3722:36:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 1002,
																					"name": "_rewordsAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 926,
																					"src": "3762:14:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3722:54:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1004,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3721:57:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1005,
																		"name": "newDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 938,
																		"src": "3781:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3721:71:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3707:85:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1008,
															"nodeType": "ExpressionStatement",
															"src": "3707:85:5"
														}
													]
												},
												"id": 1010,
												"nodeType": "IfStatement",
												"src": "3064:918:5",
												"trueBody": {
													"id": 994,
													"nodeType": "Block",
													"src": "3090:77:5",
													"statements": [
														{
															"expression": {
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 988,
																	"name": "rewardsRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "3105:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 989,
																		"name": "_rewordsAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "3119:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 990,
																		"name": "newDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 938,
																		"src": "3136:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3119:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3105:42:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 993,
															"nodeType": "ExpressionStatement",
															"src": "3105:42:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1012,
																"name": "rewardsRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "4000:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4014:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4000:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "736574526577617264733a207265776f72642072617465203d2030",
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4017:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fe26c31df7ea9f31f127d886ab982fede6ecc7a20c6b24ff4c2789531aa65b1",
																"typeString": "literal_string \"setRewards: reword rate = 0\""
															},
															"value": "setRewards: reword rate = 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9fe26c31df7ea9f31f127d886ab982fede6ecc7a20c6b24ff4c2789531aa65b1",
																"typeString": "literal_string \"setRewards: reword rate = 0\""
															}
														],
														"id": 1011,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3992:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3992:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1017,
												"nodeType": "ExpressionStatement",
												"src": "3992:55:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1019,
																	"name": "rewardsRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "4119:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1020,
																	"name": "newDuration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 938,
																	"src": "4133:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4119:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1022,
																"name": "balanceOfRewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 967,
																"src": "4148:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4119:45:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "736574526577617264733a2072657761726473203c2062616c616e6365",
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4166:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f259ffb3ec6756755f24a88d5ebe34e47809c81913eac2caa6345442399cee17",
																"typeString": "literal_string \"setRewards: rewards < balance\""
															},
															"value": "setRewards: rewards < balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f259ffb3ec6756755f24a88d5ebe34e47809c81913eac2caa6345442399cee17",
																"typeString": "literal_string \"setRewards: rewards < balance\""
															}
														],
														"id": 1018,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4111:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4111:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1026,
												"nodeType": "ExpressionStatement",
												"src": "4111:87:5"
											},
											{
												"expression": {
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1027,
														"name": "finishTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "4726:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1030,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1028,
															"name": "nowtime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "4739:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1029,
															"name": "duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "4749:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4739:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4726:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1032,
												"nodeType": "ExpressionStatement",
												"src": "4726:31:5"
											},
											{
												"expression": {
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1033,
														"name": "finishAt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "4796:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1034,
														"name": "finishTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "4807:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4796:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1036,
												"nodeType": "ExpressionStatement",
												"src": "4796:21:5"
											},
											{
												"expression": {
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1037,
														"name": "updateAt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "4828:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1038,
														"name": "nowtime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "4839:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4828:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1040,
												"nodeType": "ExpressionStatement",
												"src": "4828:18:5"
											}
										]
									},
									"functionSelector": "c7a29c6f",
									"id": 1042,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 929,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 928,
												"name": "OnlyOwner",
												"nameLocations": [
													"2453:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 857,
												"src": "2453:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2453:9:5"
										},
										{
											"arguments": [
												{
													"arguments": [
														{
															"hexValue": "30",
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2485:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 932,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2477:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 931,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2477:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2477:10:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 935,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 930,
												"name": "updateRewards",
												"nameLocations": [
													"2463:13:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 910,
												"src": "2463:13:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2463:25:5"
										}
									],
									"name": "setRewards",
									"nameLocation": "2412:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "_rewordsAmount",
												"nameLocation": "2428:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "2423:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 925,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2423:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2422:21:5"
									},
									"returnParameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2488:0:5"
									},
									"scope": 1231,
									"src": "2403:2595:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1081,
										"nodeType": "Block",
										"src": "5097:527:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1052,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1044,
																"src": "5421:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1053,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5431:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5421:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616d6f756e74203d2030",
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5434:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_faeda1cde2954fb20c452e57322e586e176b69582241d304d446f54080fcd258",
																"typeString": "literal_string \"amount = 0\""
															},
															"value": "amount = 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_faeda1cde2954fb20c452e57322e586e176b69582241d304d446f54080fcd258",
																"typeString": "literal_string \"amount = 0\""
															}
														],
														"id": 1051,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5413:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5413:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "5413:34:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1061,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5484:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5488:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5484:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1065,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5504:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyStaking_$1231",
																		"typeString": "contract MyStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyStaking_$1231",
																		"typeString": "contract MyStaking"
																	}
																],
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5496:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1063,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5496:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5496:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1067,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "5511:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1058,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "5458:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5471:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "5458:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5458:61:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "5458:61:5"
											},
											{
												"expression": {
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1070,
															"name": "userStakingTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "5530:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1073,
														"indexExpression": {
															"expression": {
																"id": 1071,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5548:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5552:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5548:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5530:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1074,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "5563:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5530:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1076,
												"nodeType": "ExpressionStatement",
												"src": "5530:40:5"
											},
											{
												"expression": {
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1077,
														"name": "stakingTokensTotalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5581:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1078,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "5609:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5581:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "5581:35:5"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 1082,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1047,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5086:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5090:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "5086:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1049,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1046,
												"name": "updateRewards",
												"nameLocations": [
													"5072:13:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 910,
												"src": "5072:13:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "5072:25:5"
										}
									],
									"name": "stake",
									"nameLocation": "5043:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5054:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "5049:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5049:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5048:14:5"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5097:0:5"
									},
									"scope": 1231,
									"src": "5034:590:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1117,
										"nodeType": "Block",
										"src": "5738:475:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1092,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1084,
																"src": "6029:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1093,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6039:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6029:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616d6f756e74203d2030",
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6042:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_faeda1cde2954fb20c452e57322e586e176b69582241d304d446f54080fcd258",
																"typeString": "literal_string \"amount = 0\""
															},
															"value": "amount = 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_faeda1cde2954fb20c452e57322e586e176b69582241d304d446f54080fcd258",
																"typeString": "literal_string \"amount = 0\""
															}
														],
														"id": 1091,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6021:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6021:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1097,
												"nodeType": "ExpressionStatement",
												"src": "6021:34:5"
											},
											{
												"expression": {
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1098,
															"name": "userStakingTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "6066:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1101,
														"indexExpression": {
															"expression": {
																"id": 1099,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6084:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6088:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6084:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6066:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1102,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "6099:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6066:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1104,
												"nodeType": "ExpressionStatement",
												"src": "6066:40:5"
											},
											{
												"expression": {
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1105,
														"name": "stakingTokensTotalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "6117:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1106,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "6145:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6117:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "6117:35:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1112,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6185:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6189:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6185:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1114,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "6197:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1109,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "6163:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6176:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 696,
														"src": "6163:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6163:42:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1116,
												"nodeType": "ExpressionStatement",
												"src": "6163:42:5"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1118,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1087,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5726:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5730:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "5726:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1089,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1086,
												"name": "updateRewards",
												"nameLocations": [
													"5712:13:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 910,
												"src": "5712:13:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "5712:25:5"
										}
									],
									"name": "withdraw",
									"nameLocation": "5680:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5694:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "5689:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1083,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5689:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5688:14:5"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5738:0:5"
									},
									"scope": 1231,
									"src": "5671:542:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1137,
										"nodeType": "Block",
										"src": "6279:46:5",
										"statements": [
											{
												"expression": {
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1127,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "6297:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1128,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1120,
																		"src": "6302:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1129,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1122,
																		"src": "6307:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6302:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 1131,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6301:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"id": 1133,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1122,
															"src": "6316:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "6301:16:5",
														"trueExpression": {
															"id": 1132,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "6312:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6297:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1126,
												"id": 1136,
												"nodeType": "Return",
												"src": "6290:27:5"
											}
										]
									},
									"id": 1138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_min",
									"nameLocation": "6230:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6240:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "6235:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1119,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6235:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6248:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "6243:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1121,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6243:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6234:16:5"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "6277:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "6272:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1124,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6272:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6271:8:5"
									},
									"scope": 1231,
									"src": "6221:104:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1168,
										"nodeType": "Block",
										"src": "6383:328:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1143,
														"name": "stakingTokensTotalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "6397:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1144,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6425:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6397:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1149,
												"nodeType": "IfStatement",
												"src": "6394:91:5",
												"trueBody": {
													"id": 1148,
													"nodeType": "Block",
													"src": "6427:58:5",
													"statements": [
														{
															"expression": {
																"id": 1146,
																"name": "stakingTokensTotalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "6449:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1142,
															"id": 1147,
															"nodeType": "Return",
															"src": "6442:31:5"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1150,
														"name": "rewardsPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "6575:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1151,
																			"name": "rewardsRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 806,
																			"src": "6600:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1158,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"arguments": [
																							{
																								"id": 1153,
																								"name": "finishAt",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 804,
																								"src": "6620:8:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"expression": {
																									"id": 1154,
																									"name": "block",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967292,
																									"src": "6630:5:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_block",
																										"typeString": "block"
																									}
																								},
																								"id": 1155,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "6636:9:5",
																								"memberName": "timestamp",
																								"nodeType": "MemberAccess",
																								"src": "6630:15:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1152,
																							"name": "_min",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1138,
																							"src": "6615:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1156,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "6615:31:5",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 1157,
																						"name": "updateAt",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 802,
																						"src": "6649:8:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "6615:42:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1159,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "6614:44:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6600:58:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1161,
																		"name": "stakingTokensTotalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "6661:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6600:85:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31653138",
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6688:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "6600:92:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1165,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6599:94:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6575:118:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1142,
												"id": 1167,
												"nodeType": "Return",
												"src": "6568:125:5"
											}
										]
									},
									"functionSelector": "70641a36",
									"id": 1169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardsPerToken",
									"nameLocation": "6340:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6355:2:5"
									},
									"returnParameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "6378:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6378:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6377:6:5"
									},
									"scope": 1231,
									"src": "6331:380:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1194,
										"nodeType": "Block",
										"src": "6822:371:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1176,
																	"name": "userStakingTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "7069:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1178,
																"indexExpression": {
																	"id": 1177,
																	"name": "_account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1171,
																	"src": "7087:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7069:27:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1179,
																				"name": "rewardsPerToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1169,
																				"src": "7100:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																					"typeString": "function () view returns (uint256)"
																				}
																			},
																			"id": 1180,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7100:17:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"baseExpression": {
																				"id": 1181,
																				"name": "userRewardsPerTokenPaid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 812,
																				"src": "7120:23:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1183,
																			"indexExpression": {
																				"id": 1182,
																				"name": "_account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1171,
																				"src": "7144:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7120:33:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7100:53:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1185,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7099:55:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7069:85:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31653138",
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7157:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														},
														"src": "7069:92:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"baseExpression": {
															"id": 1189,
															"name": "userRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "7164:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1191,
														"indexExpression": {
															"id": 1190,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "7176:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7164:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7069:116:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1175,
												"id": 1193,
												"nodeType": "Return",
												"src": "7062:123:5"
											}
										]
									},
									"functionSelector": "008cc262",
									"id": 1195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nameLocation": "6772:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "6787:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "6779:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6779:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6778:18:5"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "6817:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1173,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6817:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6816:6:5"
									},
									"scope": 1231,
									"src": "6763:430:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1229,
										"nodeType": "Block",
										"src": "7304:195:5",
										"statements": [
											{
												"assignments": [
													1203
												],
												"declarations": [
													{
														"constant": false,
														"id": 1203,
														"mutability": "mutable",
														"name": "rewards",
														"nameLocation": "7320:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1229,
														"src": "7315:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1202,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7315:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1208,
												"initialValue": {
													"baseExpression": {
														"id": 1204,
														"name": "userRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "7330:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1207,
													"indexExpression": {
														"expression": {
															"id": 1205,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7342:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1206,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7346:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7342:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7330:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7315:38:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1209,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1203,
														"src": "7367:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1210,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7377:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7367:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1228,
												"nodeType": "IfStatement",
												"src": "7364:126:5",
												"trueBody": {
													"id": 1227,
													"nodeType": "Block",
													"src": "7379:111:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1215,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7416:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7420:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7416:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1217,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1203,
																		"src": "7428:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1212,
																		"name": "rewardsToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 794,
																		"src": "7394:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7407:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 696,
																	"src": "7394:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7394:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1219,
															"nodeType": "ExpressionStatement",
															"src": "7394:42:5"
														},
														{
															"expression": {
																"id": 1225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1220,
																		"name": "userRewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 816,
																		"src": "7451:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1223,
																	"indexExpression": {
																		"expression": {
																			"id": 1221,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7463:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7467:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7463:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7451:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7477:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7451:27:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1226,
															"nodeType": "ExpressionStatement",
															"src": "7451:27:5"
														}
													]
												}
											}
										]
									},
									"functionSelector": "0572b0cc",
									"id": 1230,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1198,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7293:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7297:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "7293:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1200,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1197,
												"name": "updateRewards",
												"nameLocations": [
													"7279:13:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 910,
												"src": "7279:13:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "7279:25:5"
										}
									],
									"name": "getRewards",
									"nameLocation": "7257:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7267:2:5"
									},
									"returnParameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7304:0:5"
									},
									"scope": 1231,
									"src": "7248:251:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1232,
							"src": "119:7385:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:7471:5"
				},
				"id": 5
			}
		}
	}
}