{
	"id": "31aaea0be9ca08ff9849f80185a3401d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"BEACON/logicBeaconBox.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n// import \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\";\r\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\r\n// import \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.1.0/contracts/proxy/utils/Initializable.sol\";\r\nimport \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\";  // unnecessary, just for finding the src file to compile and deploy \r\nimport \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\";  // unnecessary, just for finding the src file to compile and deploy\r\n\r\ncontract BeaconBoxV1 is Initializable {\r\n    uint private _count;\r\n\r\n    receive() external payable { }\r\n    function initialize(uint _x) public initializer {\r\n        _count = _x;\r\n    } \r\n\r\n    function getCount() external view returns(uint){\r\n        return _count;\r\n    }\r\n\r\n    function cal() external returns(uint){\r\n        return _count += 1;\r\n    }\r\n\r\n    function getInitCalldata(uint _x) external  pure returns(bytes memory){\r\n        return abi.encodeWithSelector(this.initialize.selector, _x);\r\n    }\r\n}\r\n\r\ncontract BeaconBoxV2 is Initializable {\r\n    uint private _count;\r\n\r\n    receive() external payable { }\r\n    function initialize(uint _x) public initializer {\r\n        _count = _x;\r\n    } \r\n\r\n    function getCount() external view returns(uint){\r\n        return _count;\r\n    }\r\n\r\n    function cal() external returns(uint){\r\n        return _count *= 2;\r\n    }\r\n\r\n    function getInitCalldata(uint _x) external  pure returns(bytes memory){\r\n        return abi.encodeWithSelector(this.initialize.selector, _x);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/UpgradeableBeacon.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"./IBeacon.sol\";\nimport {Ownable} from \"../../access/Ownable.sol\";\n\n/**\n * @dev This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their\n * implementation contract, which is where they will delegate all function calls.\n *\n * An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.\n */\ncontract UpgradeableBeacon is IBeacon, Ownable {\n    address private _implementation;\n\n    /**\n     * @dev The `implementation` of the beacon is invalid.\n     */\n    error BeaconInvalidImplementation(address implementation);\n\n    /**\n     * @dev Emitted when the implementation returned by the beacon is changed.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Sets the address of the initial implementation, and the initial owner who can upgrade the beacon.\n     */\n    constructor(address implementation_, address initialOwner) Ownable(initialOwner) {\n        _setImplementation(implementation_);\n    }\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function implementation() public view virtual returns (address) {\n        return _implementation;\n    }\n\n    /**\n     * @dev Upgrades the beacon to a new implementation.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * Requirements:\n     *\n     * - msg.sender must be the owner of the contract.\n     * - `newImplementation` must be a contract.\n     */\n    function upgradeTo(address newImplementation) public virtual onlyOwner {\n        _setImplementation(newImplementation);\n    }\n\n    /**\n     * @dev Sets the implementation contract address for this beacon\n     *\n     * Requirements:\n     *\n     * - `newImplementation` must be a contract.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert BeaconInvalidImplementation(newImplementation);\n        }\n        _implementation = newImplementation;\n        emit Upgraded(newImplementation);\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (proxy/beacon/BeaconProxy.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"./IBeacon.sol\";\nimport {Proxy} from \"../Proxy.sol\";\nimport {ERC1967Utils} from \"../ERC1967/ERC1967Utils.sol\";\n\n/**\n * @dev This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}.\n *\n * The beacon address can only be set once during construction, and cannot be changed afterwards. It is stored in an\n * immutable variable to avoid unnecessary storage reads, and also in the beacon storage slot specified by\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] so that it can be accessed externally.\n *\n * CAUTION: Since the beacon address can never be changed, you must ensure that you either control the beacon, or trust\n * the beacon to not upgrade the implementation maliciously.\n *\n * IMPORTANT: Do not use the implementation logic to modify the beacon storage slot. Doing so would leave the proxy in\n * an inconsistent state where the beacon storage slot does not match the beacon address.\n */\ncontract BeaconProxy is Proxy {\n    // An immutable address for the beacon to avoid unnecessary SLOADs before each delegate call.\n    address private immutable _beacon;\n\n    /**\n     * @dev Initializes the proxy with `beacon`.\n     *\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\n     * will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity\n     * constructor.\n     *\n     * Requirements:\n     *\n     * - `beacon` must be a contract with the interface {IBeacon}.\n     * - If `data` is empty, `msg.value` must be zero.\n     */\n    constructor(address beacon, bytes memory data) payable {\n        ERC1967Utils.upgradeBeaconToAndCall(beacon, data);\n        _beacon = beacon;\n    }\n\n    /**\n     * @dev Returns the current implementation address of the associated beacon.\n     */\n    function _implementation() internal view virtual override returns (address) {\n        return IBeacon(_getBeacon()).implementation();\n    }\n\n    /**\n     * @dev Returns the beacon.\n     */\n    function _getBeacon() internal view virtual returns (address) {\n        return _beacon;\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.21;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n     * function and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"IERC1967": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220883961d9d5c474d2244afcb0147c18bbb7a37f3f38719fcf41c5080a2f2ecc0d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220883961d9d5c474d2244afcb0147c18bbb7a37f3f38719fcf41c5080a2f2ecc0d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 CODECOPY PUSH2 0xD9D5 0xC4 PUSH21 0xD2244AFCB0147C18BBB7A37F3F38719FCF41C5080A 0x2F 0x2E 0xCC 0xD PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "496:5741:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220883961d9d5c474d2244afcb0147c18bbb7a37f3f38719fcf41c5080a2f2ecc0d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 CODECOPY PUSH2 0xD9D5 0xC4 PUSH21 0xD2244AFCB0147C18BBB7A37F3F38719FCF41C5080A 0x2F 0x2E 0xCC 0xD PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "496:5741:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220883961d9d5c474d2244afcb0147c18bbb7a37f3f38719fcf41c5080a2f2ecc0d64736f6c634300081a0033",
									".code": [
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
								"@openzeppelin/contracts/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"BEACON/logicBeaconBox.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/Proxy.sol": {
				"Proxy": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol": {
				"BeaconProxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"details": "This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}. The beacon address can only be set once during construction, and cannot be changed afterwards. It is stored in an immutable variable to avoid unnecessary storage reads, and also in the beacon storage slot specified by https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] so that it can be accessed externally. CAUTION: Since the beacon address can never be changed, you must ensure that you either control the beacon, or trust the beacon to not upgrade the implementation maliciously. IMPORTANT: Do not use the implementation logic to modify the beacon storage slot. Doing so would leave the proxy in an inconsistent state where the beacon storage slot does not match the beacon address.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"events": {
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the proxy with `beacon`. If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: - `beacon` must be a contract with the interface {IBeacon}. - If `data` is empty, `msg.value` must be zero."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":1116:2310  contract BeaconProxy is Proxy {... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":1773:1920  constructor(address beacon, bytes memory data) payable {... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":1838:1887  ERC1967Utils.upgradeBeaconToAndCall(beacon, data) */\n  tag_5\n    /* \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":1874:1880  beacon */\n  dup3\n    /* \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":1882:1886  data */\n  dup3\n    /* \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":1838:1873  ERC1967Utils.upgradeBeaconToAndCall */\n  shl(0x20, tag_6)\n    /* \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":1838:1887  ERC1967Utils.upgradeBeaconToAndCall(beacon, data) */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":1907:1913  beacon */\n  dup2\n    /* \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":1897:1913  _beacon = beacon */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":1773:1920  constructor(address beacon, bytes memory data) payable {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":1116:2310  contract BeaconProxy is Proxy {... */\n  jump(tag_7)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":5582:5924  function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {... */\ntag_6:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":5671:5692  _setBeacon(newBeacon) */\n  tag_9\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":5682:5691  newBeacon */\n  dup3\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":5671:5681  _setBeacon */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":5671:5692  _setBeacon(newBeacon) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":5731:5740  newBeacon */\n  dup2\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":5707:5741  IERC1967.BeaconUpgraded(newBeacon) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log2\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":5770:5771  0 */\n  0x00\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":5756:5760  data */\n  dup2\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":5756:5767  data.length */\n  mload\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":5756:5771  data.length > 0 */\n  gt\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":5752:5918  if (data.length > 0) {... */\n  iszero\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":5787:5858  Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data) */\n  tag_12\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":5824:5833  newBeacon */\n  dup3\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":5816:5849  IBeacon(newBeacon).implementation */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x5c60da1b\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":5816:5851  IBeacon(newBeacon).implementation() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_14\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_14:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_15\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":5853:5857  data */\n  dup3\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":5787:5815  Address.functionDelegateCall */\n  shl(0x20, tag_17)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":5787:5858  Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n  pop\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":5752:5918  if (data.length > 0) {... */\n  jump(tag_18)\ntag_11:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":5889:5907  _checkNonPayable() */\n  tag_19\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":5889:5905  _checkNonPayable */\n  shl(0x20, tag_20)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":5889:5907  _checkNonPayable() */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":5752:5918  if (data.length > 0) {... */\ntag_18:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":5582:5924  function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4620:5057  function _setBeacon(address newBeacon) private {... */\ntag_10:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4706:4707  0 */\n  0x00\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4681:4690  newBeacon */\n  dup2\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4681:4702  newBeacon.code.length */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  extcodesize\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4681:4707  newBeacon.code.length == 0 */\n  sub\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4677:4772  if (newBeacon.code.length == 0) {... */\n  tag_22\n  jumpi\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4751:4760  newBeacon */\n  dup1\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4730:4761  ERC1967InvalidBeacon(newBeacon) */\n  mload(0x40)\n  0x64ced0ec00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_23\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4677:4772  if (newBeacon.code.length == 0) {... */\ntag_22:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4830:4839  newBeacon */\n  dup1\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4782:4821  StorageSlot.getAddressSlot(BEACON_SLOT) */\n  tag_25\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4286:4352  0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50 */\n  0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4809:4820  BEACON_SLOT */\n  0x00\n  shl\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4782:4808  StorageSlot.getAddressSlot */\n  shl(0x20, tag_26)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4782:4821  StorageSlot.getAddressSlot(BEACON_SLOT) */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4782:4827  StorageSlot.getAddressSlot(BEACON_SLOT).value */\n  0x00\n  add\n  0x00\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4782:4839  StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4850:4878  address beaconImplementation */\n  0x00\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4889:4898  newBeacon */\n  dup2\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4881:4914  IBeacon(newBeacon).implementation */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x5c60da1b\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4881:4916  IBeacon(newBeacon).implementation() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_28\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_28:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_29\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_29:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4850:4916  address beaconImplementation = IBeacon(newBeacon).implementation() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4966:4967  0 */\n  0x00\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4930:4950  beaconImplementation */\n  dup2\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4930:4962  beaconImplementation.code.length */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  extcodesize\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4930:4967  beaconImplementation.code.length == 0 */\n  sub\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4926:5051  if (beaconImplementation.code.length == 0) {... */\n  tag_30\n  jumpi\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":5019:5039  beaconImplementation */\n  dup1\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4990:5040  ERC1967InvalidImplementation(beaconImplementation) */\n  mload(0x40)\n  0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_31\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_31:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4926:5051  if (beaconImplementation.code.length == 0) {... */\ntag_30:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4667:5057  {... */\n  pop\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":4620:5057  function _setBeacon(address newBeacon) private {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":3900:4153  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\ntag_17:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":3983:3995  bytes memory */\n  0x60\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4008:4020  bool success */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4022:4045  bytes memory returndata */\n  dup1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4055  target */\n  dup5\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4068  target.delegatecall */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4069:4073  data */\n  dup5\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4074  target.delegatecall(data) */\n  mload(0x40)\n  tag_33\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  gas\n  delegatecall\n  swap2\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_37\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_36)\ntag_37:\n  0x60\n  swap2\n  pop\ntag_36:\n  pop\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4007:4074  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  swap2\n  pop\n  swap2\n  pop\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n  tag_38\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4118:4124  target */\n  dup6\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4126:4133  success */\n  dup4\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4135:4145  returndata */\n  dup4\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4117  verifyCallResultFromTarget */\n  shl(0x20, tag_39)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n  0x20\n  shr\n  jump\t// in\ntag_38:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4084:4146  return verifyCallResultFromTarget(target, success, returndata) */\n  swap3\n  pop\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/Address.sol\":3900:4153  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\ntag_20:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6175:6176  0 */\n  0x00\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6172  msg.value */\n  callvalue\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6176  msg.value > 0 */\n  gt\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n  iszero\n  tag_41\n  jumpi\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6199:6218  ERC1967NonPayable() */\n  mload(0x40)\n  0xb398979f00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\ntag_41:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1899:2062  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\ntag_26:\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1960:1981  AddressSlot storage r */\n  0x00\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":2042:2046  slot */\n  dup2\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":2032:2046  r.slot := slot */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1899:2062  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4421:5003  function verifyCallResultFromTarget(... */\ntag_39:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4565:4577  bytes memory */\n  0x60\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4594:4601  success */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n  tag_44\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4617:4636  _revert(returndata) */\n  tag_45\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4625:4635  returndata */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4617:4624  _revert */\n  shl(0x20, tag_46)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4617:4636  _revert(returndata) */\n  0x20\n  shr\n  jump\t// in\ntag_45:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n  jump(tag_47)\ntag_44:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4862:4863  0 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4851  returndata */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4858  returndata.length */\n  mload\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4863  returndata.length == 0 */\n  eq\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n  dup1\n  iszero\n  tag_48\n  jumpi\n  pop\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4889:4890  0 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4873  target */\n  dup5\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4885  target.code.length */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  extcodesize\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4890  target.code.length == 0 */\n  eq\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\ntag_48:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\n  iszero\n  tag_49\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4934:4940  target */\n  dup4\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n  mload(0x40)\n  0x9996b31500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_50\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_50:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\ntag_49:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4976:4986  returndata */\n  dup2\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4969:4986  return returndata */\n  swap1\n  pop\n  jump(tag_43)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\ntag_47:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4421:5003  function verifyCallResultFromTarget(... */\ntag_43:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5543:6030  function _revert(bytes memory returndata) private pure {... */\ntag_46:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5694:5695  0 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5684  returndata */\n  dup2\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5691  returndata.length */\n  mload\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5695  returndata.length > 0 */\n  gt\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5670:6024  if (returndata.length > 0) {... */\n  iszero\n  tag_52\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5871:5881  returndata */\n  dup1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5865:5882  mload(returndata) */\n  mload\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5927:5942  returndata_size */\n  dup1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5914:5924  returndata */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5910:5912  32 */\n  0x20\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5906:5925  add(32, returndata) */\n  add\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5899:5943  revert(add(32, returndata), returndata_size) */\n  revert\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5670:6024  if (returndata.length > 0) {... */\ntag_52:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5994:6013  Errors.FailedCall() */\n  mload(0x40)\n  0xd6bda27500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"#utility.yul\":7:82   */\ntag_54:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_55:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_56:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_57:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_58:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_81\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_57\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_59:\n    /* \"#utility.yul\":641:665   */\n  tag_83\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_58\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_84\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_84:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_60:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_86\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_59\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:962   */\ntag_61:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":951:952   */\n  dup1\n    /* \"#utility.yul\":944:956   */\n  revert\n    /* \"#utility.yul\":968:1085   */\ntag_62:\n    /* \"#utility.yul\":1077:1078   */\n  0x00\n    /* \"#utility.yul\":1074:1075   */\n  dup1\n    /* \"#utility.yul\":1067:1079   */\n  revert\n    /* \"#utility.yul\":1091:1193   */\ntag_63:\n    /* \"#utility.yul\":1132:1138   */\n  0x00\n    /* \"#utility.yul\":1183:1185   */\n  0x1f\n    /* \"#utility.yul\":1179:1186   */\n  not\n    /* \"#utility.yul\":1174:1176   */\n  0x1f\n    /* \"#utility.yul\":1167:1172   */\n  dup4\n    /* \"#utility.yul\":1163:1177   */\n  add\n    /* \"#utility.yul\":1159:1187   */\n  and\n    /* \"#utility.yul\":1149:1187   */\n  swap1\n  pop\n    /* \"#utility.yul\":1091:1193   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1199:1379   */\ntag_64:\n    /* \"#utility.yul\":1247:1324   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1244:1245   */\n  0x00\n    /* \"#utility.yul\":1237:1325   */\n  mstore\n    /* \"#utility.yul\":1344:1348   */\n  0x41\n    /* \"#utility.yul\":1341:1342   */\n  0x04\n    /* \"#utility.yul\":1334:1349   */\n  mstore\n    /* \"#utility.yul\":1368:1372   */\n  0x24\n    /* \"#utility.yul\":1365:1366   */\n  0x00\n    /* \"#utility.yul\":1358:1373   */\n  revert\n    /* \"#utility.yul\":1385:1666   */\ntag_65:\n    /* \"#utility.yul\":1468:1495   */\n  tag_92\n    /* \"#utility.yul\":1490:1494   */\n  dup3\n    /* \"#utility.yul\":1468:1495   */\n  tag_63\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":1460:1466   */\n  dup2\n    /* \"#utility.yul\":1456:1496   */\n  add\n    /* \"#utility.yul\":1598:1604   */\n  dup2\n    /* \"#utility.yul\":1586:1596   */\n  dup2\n    /* \"#utility.yul\":1583:1605   */\n  lt\n    /* \"#utility.yul\":1562:1580   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1550:1560   */\n  dup3\n    /* \"#utility.yul\":1547:1581   */\n  gt\n    /* \"#utility.yul\":1544:1606   */\n  or\n    /* \"#utility.yul\":1541:1629   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":1609:1627   */\n  tag_94\n  tag_64\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":1541:1629   */\ntag_93:\n    /* \"#utility.yul\":1649:1659   */\n  dup1\n    /* \"#utility.yul\":1645:1647   */\n  0x40\n    /* \"#utility.yul\":1638:1660   */\n  mstore\n    /* \"#utility.yul\":1428:1666   */\n  pop\n    /* \"#utility.yul\":1385:1666   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1672:1801   */\ntag_66:\n    /* \"#utility.yul\":1706:1712   */\n  0x00\n    /* \"#utility.yul\":1733:1753   */\n  tag_96\n  tag_54\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":1723:1753   */\n  swap1\n  pop\n    /* \"#utility.yul\":1762:1795   */\n  tag_97\n    /* \"#utility.yul\":1790:1794   */\n  dup3\n    /* \"#utility.yul\":1782:1788   */\n  dup3\n    /* \"#utility.yul\":1762:1795   */\n  tag_65\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":1672:1801   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1807:2114   */\ntag_67:\n    /* \"#utility.yul\":1868:1872   */\n  0x00\n    /* \"#utility.yul\":1958:1976   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1950:1956   */\n  dup3\n    /* \"#utility.yul\":1947:1977   */\n  gt\n    /* \"#utility.yul\":1944:2000   */\n  iszero\n  tag_99\n  jumpi\n    /* \"#utility.yul\":1980:1998   */\n  tag_100\n  tag_64\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":1944:2000   */\ntag_99:\n    /* \"#utility.yul\":2018:2047   */\n  tag_101\n    /* \"#utility.yul\":2040:2046   */\n  dup3\n    /* \"#utility.yul\":2018:2047   */\n  tag_63\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":2010:2047   */\n  swap1\n  pop\n    /* \"#utility.yul\":2102:2106   */\n  0x20\n    /* \"#utility.yul\":2096:2100   */\n  dup2\n    /* \"#utility.yul\":2092:2107   */\n  add\n    /* \"#utility.yul\":2084:2107   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:2114   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2120:2259   */\ntag_68:\n    /* \"#utility.yul\":2209:2215   */\n  dup3\n    /* \"#utility.yul\":2204:2207   */\n  dup2\n    /* \"#utility.yul\":2199:2202   */\n  dup4\n    /* \"#utility.yul\":2193:2216   */\n  mcopy\n    /* \"#utility.yul\":2250:2251   */\n  0x00\n    /* \"#utility.yul\":2241:2247   */\n  dup4\n    /* \"#utility.yul\":2236:2239   */\n  dup4\n    /* \"#utility.yul\":2232:2248   */\n  add\n    /* \"#utility.yul\":2225:2252   */\n  mstore\n    /* \"#utility.yul\":2120:2259   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2265:2697   */\ntag_69:\n    /* \"#utility.yul\":2353:2358   */\n  0x00\n    /* \"#utility.yul\":2378:2443   */\n  tag_104\n    /* \"#utility.yul\":2394:2442   */\n  tag_105\n    /* \"#utility.yul\":2435:2441   */\n  dup5\n    /* \"#utility.yul\":2394:2442   */\n  tag_67\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":2378:2443   */\n  tag_66\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":2369:2443   */\n  swap1\n  pop\n    /* \"#utility.yul\":2466:2472   */\n  dup3\n    /* \"#utility.yul\":2459:2464   */\n  dup2\n    /* \"#utility.yul\":2452:2473   */\n  mstore\n    /* \"#utility.yul\":2504:2508   */\n  0x20\n    /* \"#utility.yul\":2497:2502   */\n  dup2\n    /* \"#utility.yul\":2493:2509   */\n  add\n    /* \"#utility.yul\":2542:2545   */\n  dup5\n    /* \"#utility.yul\":2533:2539   */\n  dup5\n    /* \"#utility.yul\":2528:2531   */\n  dup5\n    /* \"#utility.yul\":2524:2540   */\n  add\n    /* \"#utility.yul\":2521:2546   */\n  gt\n    /* \"#utility.yul\":2518:2630   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":2549:2628   */\n  tag_107\n  tag_62\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":2518:2630   */\ntag_106:\n    /* \"#utility.yul\":2639:2691   */\n  tag_108\n    /* \"#utility.yul\":2684:2690   */\n  dup5\n    /* \"#utility.yul\":2679:2682   */\n  dup3\n    /* \"#utility.yul\":2674:2677   */\n  dup6\n    /* \"#utility.yul\":2639:2691   */\n  tag_68\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":2359:2697   */\n  pop\n    /* \"#utility.yul\":2265:2697   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2716:3069   */\ntag_70:\n    /* \"#utility.yul\":2782:2787   */\n  0x00\n    /* \"#utility.yul\":2831:2834   */\n  dup3\n    /* \"#utility.yul\":2824:2828   */\n  0x1f\n    /* \"#utility.yul\":2816:2822   */\n  dup4\n    /* \"#utility.yul\":2812:2829   */\n  add\n    /* \"#utility.yul\":2808:2835   */\n  slt\n    /* \"#utility.yul\":2798:2920   */\n  tag_110\n  jumpi\n    /* \"#utility.yul\":2839:2918   */\n  tag_111\n  tag_61\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":2798:2920   */\ntag_110:\n    /* \"#utility.yul\":2949:2955   */\n  dup2\n    /* \"#utility.yul\":2943:2956   */\n  mload\n    /* \"#utility.yul\":2974:3063   */\n  tag_112\n    /* \"#utility.yul\":3059:3062   */\n  dup5\n    /* \"#utility.yul\":3051:3057   */\n  dup3\n    /* \"#utility.yul\":3044:3048   */\n  0x20\n    /* \"#utility.yul\":3036:3042   */\n  dup7\n    /* \"#utility.yul\":3032:3049   */\n  add\n    /* \"#utility.yul\":2974:3063   */\n  tag_69\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":2965:3063   */\n  swap2\n  pop\n    /* \"#utility.yul\":2788:3069   */\n  pop\n    /* \"#utility.yul\":2716:3069   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3075:3753   */\ntag_2:\n    /* \"#utility.yul\":3163:3169   */\n  0x00\n    /* \"#utility.yul\":3171:3177   */\n  dup1\n    /* \"#utility.yul\":3220:3222   */\n  0x40\n    /* \"#utility.yul\":3208:3217   */\n  dup4\n    /* \"#utility.yul\":3199:3206   */\n  dup6\n    /* \"#utility.yul\":3195:3218   */\n  sub\n    /* \"#utility.yul\":3191:3223   */\n  slt\n    /* \"#utility.yul\":3188:3307   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":3226:3305   */\n  tag_115\n  tag_55\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":3188:3307   */\ntag_114:\n    /* \"#utility.yul\":3346:3347   */\n  0x00\n    /* \"#utility.yul\":3371:3435   */\n  tag_116\n    /* \"#utility.yul\":3427:3434   */\n  dup6\n    /* \"#utility.yul\":3418:3424   */\n  dup3\n    /* \"#utility.yul\":3407:3416   */\n  dup7\n    /* \"#utility.yul\":3403:3425   */\n  add\n    /* \"#utility.yul\":3371:3435   */\n  tag_60\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":3361:3435   */\n  swap3\n  pop\n    /* \"#utility.yul\":3317:3445   */\n  pop\n    /* \"#utility.yul\":3505:3507   */\n  0x20\n    /* \"#utility.yul\":3494:3503   */\n  dup4\n    /* \"#utility.yul\":3490:3508   */\n  add\n    /* \"#utility.yul\":3484:3509   */\n  mload\n    /* \"#utility.yul\":3536:3554   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3528:3534   */\n  dup2\n    /* \"#utility.yul\":3525:3555   */\n  gt\n    /* \"#utility.yul\":3522:3639   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":3558:3637   */\n  tag_118\n  tag_56\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":3522:3639   */\ntag_117:\n    /* \"#utility.yul\":3663:3736   */\n  tag_119\n    /* \"#utility.yul\":3728:3735   */\n  dup6\n    /* \"#utility.yul\":3719:3725   */\n  dup3\n    /* \"#utility.yul\":3708:3717   */\n  dup7\n    /* \"#utility.yul\":3704:3726   */\n  add\n    /* \"#utility.yul\":3663:3736   */\n  tag_70\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":3653:3736   */\n  swap2\n  pop\n    /* \"#utility.yul\":3455:3746   */\n  pop\n    /* \"#utility.yul\":3075:3753   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3759:4110   */\ntag_16:\n    /* \"#utility.yul\":3829:3835   */\n  0x00\n    /* \"#utility.yul\":3878:3880   */\n  0x20\n    /* \"#utility.yul\":3866:3875   */\n  dup3\n    /* \"#utility.yul\":3857:3864   */\n  dup5\n    /* \"#utility.yul\":3853:3876   */\n  sub\n    /* \"#utility.yul\":3849:3881   */\n  slt\n    /* \"#utility.yul\":3846:3965   */\n  iszero\n  tag_121\n  jumpi\n    /* \"#utility.yul\":3884:3963   */\n  tag_122\n  tag_55\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":3846:3965   */\ntag_121:\n    /* \"#utility.yul\":4004:4005   */\n  0x00\n    /* \"#utility.yul\":4029:4093   */\n  tag_123\n    /* \"#utility.yul\":4085:4092   */\n  dup5\n    /* \"#utility.yul\":4076:4082   */\n  dup3\n    /* \"#utility.yul\":4065:4074   */\n  dup6\n    /* \"#utility.yul\":4061:4083   */\n  add\n    /* \"#utility.yul\":4029:4093   */\n  tag_60\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":4019:4093   */\n  swap2\n  pop\n    /* \"#utility.yul\":3975:4103   */\n  pop\n    /* \"#utility.yul\":3759:4110   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4116:4234   */\ntag_71:\n    /* \"#utility.yul\":4203:4227   */\n  tag_125\n    /* \"#utility.yul\":4221:4226   */\n  dup2\n    /* \"#utility.yul\":4203:4227   */\n  tag_58\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":4198:4201   */\n  dup3\n    /* \"#utility.yul\":4191:4228   */\n  mstore\n    /* \"#utility.yul\":4116:4234   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4240:4462   */\ntag_24:\n    /* \"#utility.yul\":4333:4337   */\n  0x00\n    /* \"#utility.yul\":4371:4373   */\n  0x20\n    /* \"#utility.yul\":4360:4369   */\n  dup3\n    /* \"#utility.yul\":4356:4374   */\n  add\n    /* \"#utility.yul\":4348:4374   */\n  swap1\n  pop\n    /* \"#utility.yul\":4384:4455   */\n  tag_127\n    /* \"#utility.yul\":4452:4453   */\n  0x00\n    /* \"#utility.yul\":4441:4450   */\n  dup4\n    /* \"#utility.yul\":4437:4454   */\n  add\n    /* \"#utility.yul\":4428:4434   */\n  dup5\n    /* \"#utility.yul\":4384:4455   */\n  tag_71\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":4240:4462   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4468:4566   */\ntag_72:\n    /* \"#utility.yul\":4519:4525   */\n  0x00\n    /* \"#utility.yul\":4553:4558   */\n  dup2\n    /* \"#utility.yul\":4547:4559   */\n  mload\n    /* \"#utility.yul\":4537:4559   */\n  swap1\n  pop\n    /* \"#utility.yul\":4468:4566   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4572:4719   */\ntag_73:\n    /* \"#utility.yul\":4673:4684   */\n  0x00\n    /* \"#utility.yul\":4710:4713   */\n  dup2\n    /* \"#utility.yul\":4695:4713   */\n  swap1\n  pop\n    /* \"#utility.yul\":4572:4719   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4725:5111   */\ntag_74:\n    /* \"#utility.yul\":4829:4832   */\n  0x00\n    /* \"#utility.yul\":4857:4895   */\n  tag_131\n    /* \"#utility.yul\":4889:4894   */\n  dup3\n    /* \"#utility.yul\":4857:4895   */\n  tag_72\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":4911:4999   */\n  tag_132\n    /* \"#utility.yul\":4992:4998   */\n  dup2\n    /* \"#utility.yul\":4987:4990   */\n  dup6\n    /* \"#utility.yul\":4911:4999   */\n  tag_73\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":4904:4999   */\n  swap4\n  pop\n    /* \"#utility.yul\":5008:5073   */\n  tag_133\n    /* \"#utility.yul\":5066:5072   */\n  dup2\n    /* \"#utility.yul\":5061:5064   */\n  dup6\n    /* \"#utility.yul\":5054:5058   */\n  0x20\n    /* \"#utility.yul\":5047:5052   */\n  dup7\n    /* \"#utility.yul\":5043:5059   */\n  add\n    /* \"#utility.yul\":5008:5073   */\n  tag_68\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":5098:5104   */\n  dup1\n    /* \"#utility.yul\":5093:5096   */\n  dup5\n    /* \"#utility.yul\":5089:5105   */\n  add\n    /* \"#utility.yul\":5082:5105   */\n  swap2\n  pop\n    /* \"#utility.yul\":4833:5111   */\n  pop\n    /* \"#utility.yul\":4725:5111   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5117:5388   */\ntag_34:\n    /* \"#utility.yul\":5247:5250   */\n  0x00\n    /* \"#utility.yul\":5269:5362   */\n  tag_135\n    /* \"#utility.yul\":5358:5361   */\n  dup3\n    /* \"#utility.yul\":5349:5355   */\n  dup5\n    /* \"#utility.yul\":5269:5362   */\n  tag_74\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":5262:5362   */\n  swap2\n  pop\n    /* \"#utility.yul\":5379:5382   */\n  dup2\n    /* \"#utility.yul\":5372:5382   */\n  swap1\n  pop\n    /* \"#utility.yul\":5117:5388   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":1116:2310  contract BeaconProxy is Proxy {... */\ntag_7:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xb29d9ec377d474364657d5fcfda83c2b983e024965bb2a4a33428a8399889137\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":1116:2310  contract BeaconProxy is Proxy {... */\n      mstore(0x40, 0x80)\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2649:2660  _fallback() */\n      tag_5\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2649:2658  _fallback */\n      tag_6\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2649:2660  _fallback() */\n      jump\t// in\n    tag_5:\n        /* \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":1116:2310  contract BeaconProxy is Proxy {... */\n      stop\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2323:2406  function _fallback() internal virtual {... */\n    tag_6:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2371:2399  _delegate(_implementation()) */\n      tag_8\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2381:2398  _implementation() */\n      tag_9\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2381:2396  _implementation */\n      tag_10\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2381:2398  _implementation() */\n      jump\t// in\n    tag_9:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2371:2380  _delegate */\n      tag_11\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2371:2399  _delegate(_implementation()) */\n      jump\t// in\n    tag_8:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2323:2406  function _fallback() internal virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":2023:2161  function _implementation() internal view virtual override returns (address) {... */\n    tag_10:\n        /* \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":2090:2097  address */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":2124:2136  _getBeacon() */\n      tag_13\n        /* \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":2124:2134  _getBeacon */\n      tag_14\n        /* \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":2124:2136  _getBeacon() */\n      jump\t// in\n    tag_13:\n        /* \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":2116:2152  IBeacon(_getBeacon()).implementation */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5c60da1b\n        /* \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":2116:2154  IBeacon(_getBeacon()).implementation() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_16\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_16:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n        /* \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":2109:2154  return IBeacon(_getBeacon()).implementation() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":2023:2161  function _implementation() internal view virtual override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":949:1844  function _delegate(address implementation) internal virtual {... */\n    tag_11:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1287:1301  calldatasize() */\n      calldatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1284:1285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1281:1282  0 */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1268:1302  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1501:1502  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1498:1499  0 */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1482:1496  calldatasize() */\n      calldatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1479:1480  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1463:1477  implementation */\n      dup5\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1456:1461  gas() */\n      gas\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1443:1503  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1577:1593  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1574:1575  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1571:1572  0 */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1556:1594  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1615:1621  result */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1687:1688  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1682:1748  case 0 {... */\n      dup2\n      eq\n      tag_21\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1797:1813  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1794:1795  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1787:1814  return(0, returndatasize()) */\n      return\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1682:1748  case 0 {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1717:1733  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1714:1715  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1707:1734  revert(0, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":2215:2308  function _getBeacon() internal view virtual returns (address) {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":2268:2275  address */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":2294:2301  _beacon */\n      immutable(\"0xb29d9ec377d474364657d5fcfda83c2b983e024965bb2a4a33428a8399889137\")\n        /* \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":2287:2301  return _beacon */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":2215:2308  function _getBeacon() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_24:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_26:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_27:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_36\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_26\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_28:\n        /* \"#utility.yul\":641:665   */\n      tag_38\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_27\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_39\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_39:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:839   */\n    tag_29:\n        /* \"#utility.yul\":753:758   */\n      0x00\n        /* \"#utility.yul\":784:790   */\n      dup2\n        /* \"#utility.yul\":778:791   */\n      mload\n        /* \"#utility.yul\":769:791   */\n      swap1\n      pop\n        /* \"#utility.yul\":800:833   */\n      tag_41\n        /* \"#utility.yul\":827:832   */\n      dup2\n        /* \"#utility.yul\":800:833   */\n      tag_28\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":696:839   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":845:1196   */\n    tag_18:\n        /* \"#utility.yul\":915:921   */\n      0x00\n        /* \"#utility.yul\":964:966   */\n      0x20\n        /* \"#utility.yul\":952:961   */\n      dup3\n        /* \"#utility.yul\":943:950   */\n      dup5\n        /* \"#utility.yul\":939:962   */\n      sub\n        /* \"#utility.yul\":935:967   */\n      slt\n        /* \"#utility.yul\":932:1051   */\n      iszero\n      tag_43\n      jumpi\n        /* \"#utility.yul\":970:1049   */\n      tag_44\n      tag_24\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":932:1051   */\n    tag_43:\n        /* \"#utility.yul\":1090:1091   */\n      0x00\n        /* \"#utility.yul\":1115:1179   */\n      tag_45\n        /* \"#utility.yul\":1171:1178   */\n      dup5\n        /* \"#utility.yul\":1162:1168   */\n      dup3\n        /* \"#utility.yul\":1151:1160   */\n      dup6\n        /* \"#utility.yul\":1147:1169   */\n      add\n        /* \"#utility.yul\":1115:1179   */\n      tag_29\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":1105:1179   */\n      swap2\n      pop\n        /* \"#utility.yul\":1061:1189   */\n      pop\n        /* \"#utility.yul\":845:1196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ee11b61399bf39b9f1dc47334d906085f524077ac71c7f35381949991dcae91964736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_531": {
									"entryPoint": null,
									"id": 531,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkNonPayable_461": {
									"entryPoint": 897,
									"id": 461,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_1166": {
									"entryPoint": 1113,
									"id": 1166,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setBeacon_407": {
									"entryPoint": 352,
									"id": 407,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionDelegateCall_1084": {
									"entryPoint": 763,
									"id": 1084,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_1254": {
									"entryPoint": 957,
									"id": 1254,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@upgradeBeaconToAndCall_447": {
									"entryPoint": 112,
									"id": 447,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1124": {
									"entryPoint": 966,
									"id": 1124,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr_fromMemory": {
									"entryPoint": 1494,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr_fromMemory": {
									"entryPoint": 1559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1694,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory": {
									"entryPoint": 1604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1406,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1181,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 1432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 1777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1480,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 1357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1312,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1288,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1292,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1194,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1190,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 1246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5391:13",
										"nodeType": "YulBlock",
										"src": "0:5391:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:81:13",
													"nodeType": "YulBlock",
													"src": "379:81:13",
													"statements": [
														{
															"nativeSrc": "389:65:13",
															"nodeType": "YulAssignment",
															"src": "389:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:13",
																		"nodeType": "YulLiteral",
																		"src": "411:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:13"
																},
																"nativeSrc": "400:54:13",
																"nodeType": "YulFunctionCall",
																"src": "400:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:126:13"
											},
											{
												"body": {
													"nativeSrc": "511:51:13",
													"nodeType": "YulBlock",
													"src": "511:51:13",
													"statements": [
														{
															"nativeSrc": "521:35:13",
															"nodeType": "YulAssignment",
															"src": "521:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:13"
																},
																"nativeSrc": "532:24:13",
																"nodeType": "YulFunctionCall",
																"src": "532:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:13",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:13",
														"nodeType": "YulTypedName",
														"src": "503:7:13",
														"type": ""
													}
												],
												"src": "466:96:13"
											},
											{
												"body": {
													"nativeSrc": "611:79:13",
													"nodeType": "YulBlock",
													"src": "611:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:13",
																"nodeType": "YulBlock",
																"src": "668:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:13",
																					"nodeType": "YulLiteral",
																					"src": "677:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:13",
																					"nodeType": "YulLiteral",
																					"src": "680:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:13"
																			},
																			"nativeSrc": "670:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:13"
																		},
																		"nativeSrc": "670:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:13"
																				},
																				"nativeSrc": "641:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:13"
																		},
																		"nativeSrc": "631:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:13"
																},
																"nativeSrc": "624:43:13",
																"nodeType": "YulFunctionCall",
																"src": "624:43:13"
															},
															"nativeSrc": "621:63:13",
															"nodeType": "YulIf",
															"src": "621:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:13",
														"nodeType": "YulTypedName",
														"src": "604:5:13",
														"type": ""
													}
												],
												"src": "568:122:13"
											},
											{
												"body": {
													"nativeSrc": "759:80:13",
													"nodeType": "YulBlock",
													"src": "759:80:13",
													"statements": [
														{
															"nativeSrc": "769:22:13",
															"nodeType": "YulAssignment",
															"src": "769:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:13"
																},
																"nativeSrc": "778:13:13",
																"nodeType": "YulFunctionCall",
																"src": "778:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:13"
																},
																"nativeSrc": "800:33:13",
																"nodeType": "YulFunctionCall",
																"src": "800:33:13"
															},
															"nativeSrc": "800:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:13"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:13",
														"nodeType": "YulTypedName",
														"src": "737:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:13",
														"nodeType": "YulTypedName",
														"src": "745:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:13",
														"nodeType": "YulTypedName",
														"src": "753:5:13",
														"type": ""
													}
												],
												"src": "696:143:13"
											},
											{
												"body": {
													"nativeSrc": "934:28:13",
													"nodeType": "YulBlock",
													"src": "934:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "951:1:13",
																		"nodeType": "YulLiteral",
																		"src": "951:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "954:1:13",
																		"nodeType": "YulLiteral",
																		"src": "954:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "944:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "944:6:13"
																},
																"nativeSrc": "944:12:13",
																"nodeType": "YulFunctionCall",
																"src": "944:12:13"
															},
															"nativeSrc": "944:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "944:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "845:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "845:117:13"
											},
											{
												"body": {
													"nativeSrc": "1057:28:13",
													"nodeType": "YulBlock",
													"src": "1057:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1074:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1074:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1077:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1077:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1067:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1067:6:13"
																},
																"nativeSrc": "1067:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1067:12:13"
															},
															"nativeSrc": "1067:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "1067:12:13"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "968:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "968:117:13"
											},
											{
												"body": {
													"nativeSrc": "1139:54:13",
													"nodeType": "YulBlock",
													"src": "1139:54:13",
													"statements": [
														{
															"nativeSrc": "1149:38:13",
															"nodeType": "YulAssignment",
															"src": "1149:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1167:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1167:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1174:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1174:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1163:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1163:3:13"
																		},
																		"nativeSrc": "1163:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1163:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1183:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1183:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1179:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1179:3:13"
																		},
																		"nativeSrc": "1179:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1179:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1159:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1159:3:13"
																},
																"nativeSrc": "1159:28:13",
																"nodeType": "YulFunctionCall",
																"src": "1159:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1149:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1149:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1091:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1122:5:13",
														"nodeType": "YulTypedName",
														"src": "1122:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1132:6:13",
														"nodeType": "YulTypedName",
														"src": "1132:6:13",
														"type": ""
													}
												],
												"src": "1091:102:13"
											},
											{
												"body": {
													"nativeSrc": "1227:152:13",
													"nodeType": "YulBlock",
													"src": "1227:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1244:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1244:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1247:77:13",
																		"nodeType": "YulLiteral",
																		"src": "1247:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1237:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1237:6:13"
																},
																"nativeSrc": "1237:88:13",
																"nodeType": "YulFunctionCall",
																"src": "1237:88:13"
															},
															"nativeSrc": "1237:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "1237:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1341:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1344:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1344:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:13"
																},
																"nativeSrc": "1334:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1334:15:13"
															},
															"nativeSrc": "1334:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "1334:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1365:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1365:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1368:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1368:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1358:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1358:6:13"
																},
																"nativeSrc": "1358:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1358:15:13"
															},
															"nativeSrc": "1358:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "1358:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1199:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1199:180:13"
											},
											{
												"body": {
													"nativeSrc": "1428:238:13",
													"nodeType": "YulBlock",
													"src": "1428:238:13",
													"statements": [
														{
															"nativeSrc": "1438:58:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1438:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1460:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1460:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "1490:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "1490:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1468:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "1468:21:13"
																		},
																		"nativeSrc": "1468:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1468:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1456:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1456:3:13"
																},
																"nativeSrc": "1456:40:13",
																"nodeType": "YulFunctionCall",
																"src": "1456:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1442:10:13",
																	"nodeType": "YulTypedName",
																	"src": "1442:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1607:22:13",
																"nodeType": "YulBlock",
																"src": "1607:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1609:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "1609:16:13"
																			},
																			"nativeSrc": "1609:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1609:18:13"
																		},
																		"nativeSrc": "1609:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1609:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1550:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "1550:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1562:18:13",
																				"nodeType": "YulLiteral",
																				"src": "1562:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1547:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1547:2:13"
																		},
																		"nativeSrc": "1547:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1547:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1586:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "1586:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1598:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1598:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1583:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1583:2:13"
																		},
																		"nativeSrc": "1583:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1583:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1544:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1544:2:13"
																},
																"nativeSrc": "1544:62:13",
																"nodeType": "YulFunctionCall",
																"src": "1544:62:13"
															},
															"nativeSrc": "1541:88:13",
															"nodeType": "YulIf",
															"src": "1541:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1645:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1645:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1649:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "1649:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1638:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1638:6:13"
																},
																"nativeSrc": "1638:22:13",
																"nodeType": "YulFunctionCall",
																"src": "1638:22:13"
															},
															"nativeSrc": "1638:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "1638:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "1385:281:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1414:6:13",
														"nodeType": "YulTypedName",
														"src": "1414:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "1422:4:13",
														"nodeType": "YulTypedName",
														"src": "1422:4:13",
														"type": ""
													}
												],
												"src": "1385:281:13"
											},
											{
												"body": {
													"nativeSrc": "1713:88:13",
													"nodeType": "YulBlock",
													"src": "1713:88:13",
													"statements": [
														{
															"nativeSrc": "1723:30:13",
															"nodeType": "YulAssignment",
															"src": "1723:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1733:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "1733:18:13"
																},
																"nativeSrc": "1733:20:13",
																"nodeType": "YulFunctionCall",
																"src": "1733:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1723:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1723:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1782:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1782:6:13"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1790:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "1790:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1762:19:13",
																	"nodeType": "YulIdentifier",
																	"src": "1762:19:13"
																},
																"nativeSrc": "1762:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1762:33:13"
															},
															"nativeSrc": "1762:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "1762:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1672:129:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1697:4:13",
														"nodeType": "YulTypedName",
														"src": "1697:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1706:6:13",
														"nodeType": "YulTypedName",
														"src": "1706:6:13",
														"type": ""
													}
												],
												"src": "1672:129:13"
											},
											{
												"body": {
													"nativeSrc": "1873:241:13",
													"nodeType": "YulBlock",
													"src": "1873:241:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1978:22:13",
																"nodeType": "YulBlock",
																"src": "1978:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1980:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "1980:16:13"
																			},
																			"nativeSrc": "1980:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1980:18:13"
																		},
																		"nativeSrc": "1980:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1980:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1950:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1950:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1958:18:13",
																		"nodeType": "YulLiteral",
																		"src": "1958:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1947:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1947:2:13"
																},
																"nativeSrc": "1947:30:13",
																"nodeType": "YulFunctionCall",
																"src": "1947:30:13"
															},
															"nativeSrc": "1944:56:13",
															"nodeType": "YulIf",
															"src": "1944:56:13"
														},
														{
															"nativeSrc": "2010:37:13",
															"nodeType": "YulAssignment",
															"src": "2010:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2040:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2040:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "2018:21:13",
																	"nodeType": "YulIdentifier",
																	"src": "2018:21:13"
																},
																"nativeSrc": "2018:29:13",
																"nodeType": "YulFunctionCall",
																"src": "2018:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2010:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2010:4:13"
																}
															]
														},
														{
															"nativeSrc": "2084:23:13",
															"nodeType": "YulAssignment",
															"src": "2084:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "2096:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2096:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2102:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2102:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2092:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:13"
																},
																"nativeSrc": "2092:15:13",
																"nodeType": "YulFunctionCall",
																"src": "2092:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2084:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2084:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "1807:307:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1857:6:13",
														"nodeType": "YulTypedName",
														"src": "1857:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1868:4:13",
														"nodeType": "YulTypedName",
														"src": "1868:4:13",
														"type": ""
													}
												],
												"src": "1807:307:13"
											},
											{
												"body": {
													"nativeSrc": "2182:77:13",
													"nodeType": "YulBlock",
													"src": "2182:77:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2199:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2199:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2204:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2204:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2209:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2209:6:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2193:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2193:5:13"
																},
																"nativeSrc": "2193:23:13",
																"nodeType": "YulFunctionCall",
																"src": "2193:23:13"
															},
															"nativeSrc": "2193:23:13",
															"nodeType": "YulExpressionStatement",
															"src": "2193:23:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2236:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2236:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2241:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2241:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2232:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2232:3:13"
																		},
																		"nativeSrc": "2232:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2232:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2250:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2250:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2225:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2225:6:13"
																},
																"nativeSrc": "2225:27:13",
																"nodeType": "YulFunctionCall",
																"src": "2225:27:13"
															},
															"nativeSrc": "2225:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "2225:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2120:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2164:3:13",
														"nodeType": "YulTypedName",
														"src": "2164:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2169:3:13",
														"nodeType": "YulTypedName",
														"src": "2169:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2174:6:13",
														"nodeType": "YulTypedName",
														"src": "2174:6:13",
														"type": ""
													}
												],
												"src": "2120:139:13"
											},
											{
												"body": {
													"nativeSrc": "2359:338:13",
													"nodeType": "YulBlock",
													"src": "2359:338:13",
													"statements": [
														{
															"nativeSrc": "2369:74:13",
															"nodeType": "YulAssignment",
															"src": "2369:74:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2435:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2435:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "2394:40:13",
																			"nodeType": "YulIdentifier",
																			"src": "2394:40:13"
																		},
																		"nativeSrc": "2394:48:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2394:48:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2378:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "2378:15:13"
																},
																"nativeSrc": "2378:65:13",
																"nodeType": "YulFunctionCall",
																"src": "2378:65:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2369:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2369:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2459:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2459:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2466:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2466:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2452:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2452:6:13"
																},
																"nativeSrc": "2452:21:13",
																"nodeType": "YulFunctionCall",
																"src": "2452:21:13"
															},
															"nativeSrc": "2452:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "2452:21:13"
														},
														{
															"nativeSrc": "2482:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2482:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2497:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2497:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2504:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2504:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2493:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2493:3:13"
																},
																"nativeSrc": "2493:16:13",
																"nodeType": "YulFunctionCall",
																"src": "2493:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2486:3:13",
																	"nodeType": "YulTypedName",
																	"src": "2486:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2547:83:13",
																"nodeType": "YulBlock",
																"src": "2547:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2549:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "2549:77:13"
																			},
																			"nativeSrc": "2549:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2549:79:13"
																		},
																		"nativeSrc": "2549:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2549:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2528:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2528:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2533:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2533:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2524:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2524:3:13"
																		},
																		"nativeSrc": "2524:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2524:16:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2542:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2542:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2521:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2521:2:13"
																},
																"nativeSrc": "2521:25:13",
																"nodeType": "YulFunctionCall",
																"src": "2521:25:13"
															},
															"nativeSrc": "2518:112:13",
															"nodeType": "YulIf",
															"src": "2518:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2674:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2674:3:13"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2679:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2679:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2684:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2684:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2639:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "2639:34:13"
																},
																"nativeSrc": "2639:52:13",
																"nodeType": "YulFunctionCall",
																"src": "2639:52:13"
															},
															"nativeSrc": "2639:52:13",
															"nodeType": "YulExpressionStatement",
															"src": "2639:52:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr_fromMemory",
												"nativeSrc": "2265:432:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2332:3:13",
														"nodeType": "YulTypedName",
														"src": "2332:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2337:6:13",
														"nodeType": "YulTypedName",
														"src": "2337:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2345:3:13",
														"nodeType": "YulTypedName",
														"src": "2345:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2353:5:13",
														"nodeType": "YulTypedName",
														"src": "2353:5:13",
														"type": ""
													}
												],
												"src": "2265:432:13"
											},
											{
												"body": {
													"nativeSrc": "2788:281:13",
													"nodeType": "YulBlock",
													"src": "2788:281:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2837:83:13",
																"nodeType": "YulBlock",
																"src": "2837:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2839:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "2839:77:13"
																			},
																			"nativeSrc": "2839:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2839:79:13"
																		},
																		"nativeSrc": "2839:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2839:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2816:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2816:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2824:4:13",
																						"nodeType": "YulLiteral",
																						"src": "2824:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2812:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2812:3:13"
																				},
																				"nativeSrc": "2812:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2812:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2831:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2831:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2808:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:13"
																		},
																		"nativeSrc": "2808:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2808:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2801:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2801:6:13"
																},
																"nativeSrc": "2801:35:13",
																"nodeType": "YulFunctionCall",
																"src": "2801:35:13"
															},
															"nativeSrc": "2798:122:13",
															"nodeType": "YulIf",
															"src": "2798:122:13"
														},
														{
															"nativeSrc": "2929:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2929:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2949:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2949:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2943:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2943:5:13"
																},
																"nativeSrc": "2943:13:13",
																"nodeType": "YulFunctionCall",
																"src": "2943:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2933:6:13",
																	"nodeType": "YulTypedName",
																	"src": "2933:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2965:98:13",
															"nodeType": "YulAssignment",
															"src": "2965:98:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3036:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3036:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3044:4:13",
																				"nodeType": "YulLiteral",
																				"src": "3044:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3032:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3032:3:13"
																		},
																		"nativeSrc": "3032:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3032:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3051:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3051:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3059:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3059:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr_fromMemory",
																	"nativeSrc": "2974:57:13",
																	"nodeType": "YulIdentifier",
																	"src": "2974:57:13"
																},
																"nativeSrc": "2974:89:13",
																"nodeType": "YulFunctionCall",
																"src": "2974:89:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2965:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2965:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr_fromMemory",
												"nativeSrc": "2716:353:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2766:6:13",
														"nodeType": "YulTypedName",
														"src": "2766:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2774:3:13",
														"nodeType": "YulTypedName",
														"src": "2774:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2782:5:13",
														"nodeType": "YulTypedName",
														"src": "2782:5:13",
														"type": ""
													}
												],
												"src": "2716:353:13"
											},
											{
												"body": {
													"nativeSrc": "3178:575:13",
													"nodeType": "YulBlock",
													"src": "3178:575:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3224:83:13",
																"nodeType": "YulBlock",
																"src": "3224:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3226:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3226:77:13"
																			},
																			"nativeSrc": "3226:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3226:79:13"
																		},
																		"nativeSrc": "3226:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3226:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3199:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3199:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3208:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3208:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3195:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3195:3:13"
																		},
																		"nativeSrc": "3195:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3195:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3220:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3220:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3191:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3191:3:13"
																},
																"nativeSrc": "3191:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3191:32:13"
															},
															"nativeSrc": "3188:119:13",
															"nodeType": "YulIf",
															"src": "3188:119:13"
														},
														{
															"nativeSrc": "3317:128:13",
															"nodeType": "YulBlock",
															"src": "3317:128:13",
															"statements": [
																{
																	"nativeSrc": "3332:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3332:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3346:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3346:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3336:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3336:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3361:74:13",
																	"nodeType": "YulAssignment",
																	"src": "3361:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3407:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3407:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3418:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3418:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3403:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3403:3:13"
																				},
																				"nativeSrc": "3403:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3403:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3427:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3427:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "3371:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "3371:31:13"
																		},
																		"nativeSrc": "3371:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3371:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3361:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3361:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3455:291:13",
															"nodeType": "YulBlock",
															"src": "3455:291:13",
															"statements": [
																{
																	"nativeSrc": "3470:39:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3470:39:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3494:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3494:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3505:2:13",
																						"nodeType": "YulLiteral",
																						"src": "3505:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3490:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3490:3:13"
																				},
																				"nativeSrc": "3490:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3490:18:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3484:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "3484:5:13"
																		},
																		"nativeSrc": "3484:25:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3484:25:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3474:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3474:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3556:83:13",
																		"nodeType": "YulBlock",
																		"src": "3556:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3558:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "3558:77:13"
																					},
																					"nativeSrc": "3558:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "3558:79:13"
																				},
																				"nativeSrc": "3558:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "3558:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3528:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3528:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3536:18:13",
																				"nodeType": "YulLiteral",
																				"src": "3536:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3525:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3525:2:13"
																		},
																		"nativeSrc": "3525:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3525:30:13"
																	},
																	"nativeSrc": "3522:117:13",
																	"nodeType": "YulIf",
																	"src": "3522:117:13"
																},
																{
																	"nativeSrc": "3653:83:13",
																	"nodeType": "YulAssignment",
																	"src": "3653:83:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3708:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3708:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3719:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3719:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3704:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3704:3:13"
																				},
																				"nativeSrc": "3704:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3704:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3728:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3728:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr_fromMemory",
																			"nativeSrc": "3663:40:13",
																			"nodeType": "YulIdentifier",
																			"src": "3663:40:13"
																		},
																		"nativeSrc": "3663:73:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3663:73:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3653:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3653:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory",
												"nativeSrc": "3075:678:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3140:9:13",
														"nodeType": "YulTypedName",
														"src": "3140:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3151:7:13",
														"nodeType": "YulTypedName",
														"src": "3151:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3163:6:13",
														"nodeType": "YulTypedName",
														"src": "3163:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3171:6:13",
														"nodeType": "YulTypedName",
														"src": "3171:6:13",
														"type": ""
													}
												],
												"src": "3075:678:13"
											},
											{
												"body": {
													"nativeSrc": "3836:274:13",
													"nodeType": "YulBlock",
													"src": "3836:274:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3882:83:13",
																"nodeType": "YulBlock",
																"src": "3882:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3884:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3884:77:13"
																			},
																			"nativeSrc": "3884:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3884:79:13"
																		},
																		"nativeSrc": "3884:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3884:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3857:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3857:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3866:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3866:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3853:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3853:3:13"
																		},
																		"nativeSrc": "3853:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3853:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3878:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3878:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3849:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3849:3:13"
																},
																"nativeSrc": "3849:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3849:32:13"
															},
															"nativeSrc": "3846:119:13",
															"nodeType": "YulIf",
															"src": "3846:119:13"
														},
														{
															"nativeSrc": "3975:128:13",
															"nodeType": "YulBlock",
															"src": "3975:128:13",
															"statements": [
																{
																	"nativeSrc": "3990:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3990:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4004:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4004:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3994:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3994:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4019:74:13",
																	"nodeType": "YulAssignment",
																	"src": "4019:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4065:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4065:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4076:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4076:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4061:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4061:3:13"
																				},
																				"nativeSrc": "4061:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4061:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4085:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4085:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4029:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "4029:31:13"
																		},
																		"nativeSrc": "4029:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4029:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4019:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4019:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "3759:351:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3806:9:13",
														"nodeType": "YulTypedName",
														"src": "3806:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3817:7:13",
														"nodeType": "YulTypedName",
														"src": "3817:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3829:6:13",
														"nodeType": "YulTypedName",
														"src": "3829:6:13",
														"type": ""
													}
												],
												"src": "3759:351:13"
											},
											{
												"body": {
													"nativeSrc": "4181:53:13",
													"nodeType": "YulBlock",
													"src": "4181:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4198:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4198:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4221:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4221:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4203:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "4203:17:13"
																		},
																		"nativeSrc": "4203:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4203:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4191:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4191:6:13"
																},
																"nativeSrc": "4191:37:13",
																"nodeType": "YulFunctionCall",
																"src": "4191:37:13"
															},
															"nativeSrc": "4191:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "4191:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "4116:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4169:5:13",
														"nodeType": "YulTypedName",
														"src": "4169:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4176:3:13",
														"nodeType": "YulTypedName",
														"src": "4176:3:13",
														"type": ""
													}
												],
												"src": "4116:118:13"
											},
											{
												"body": {
													"nativeSrc": "4338:124:13",
													"nodeType": "YulBlock",
													"src": "4338:124:13",
													"statements": [
														{
															"nativeSrc": "4348:26:13",
															"nodeType": "YulAssignment",
															"src": "4348:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4360:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4360:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4371:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4371:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4356:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4356:3:13"
																},
																"nativeSrc": "4356:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4356:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4348:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4348:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4428:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4428:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4441:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4441:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4452:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4452:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4437:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4437:3:13"
																		},
																		"nativeSrc": "4437:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4437:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4384:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "4384:43:13"
																},
																"nativeSrc": "4384:71:13",
																"nodeType": "YulFunctionCall",
																"src": "4384:71:13"
															},
															"nativeSrc": "4384:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "4384:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4240:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4310:9:13",
														"nodeType": "YulTypedName",
														"src": "4310:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4322:6:13",
														"nodeType": "YulTypedName",
														"src": "4322:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4333:4:13",
														"nodeType": "YulTypedName",
														"src": "4333:4:13",
														"type": ""
													}
												],
												"src": "4240:222:13"
											},
											{
												"body": {
													"nativeSrc": "4526:40:13",
													"nodeType": "YulBlock",
													"src": "4526:40:13",
													"statements": [
														{
															"nativeSrc": "4537:22:13",
															"nodeType": "YulAssignment",
															"src": "4537:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4553:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4553:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4547:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "4547:5:13"
																},
																"nativeSrc": "4547:12:13",
																"nodeType": "YulFunctionCall",
																"src": "4547:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4537:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4537:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "4468:98:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4509:5:13",
														"nodeType": "YulTypedName",
														"src": "4509:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4519:6:13",
														"nodeType": "YulTypedName",
														"src": "4519:6:13",
														"type": ""
													}
												],
												"src": "4468:98:13"
											},
											{
												"body": {
													"nativeSrc": "4685:34:13",
													"nodeType": "YulBlock",
													"src": "4685:34:13",
													"statements": [
														{
															"nativeSrc": "4695:18:13",
															"nodeType": "YulAssignment",
															"src": "4695:18:13",
															"value": {
																"name": "pos",
																"nativeSrc": "4710:3:13",
																"nodeType": "YulIdentifier",
																"src": "4710:3:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4695:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "4695:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "4572:147:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4657:3:13",
														"nodeType": "YulTypedName",
														"src": "4657:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4662:6:13",
														"nodeType": "YulTypedName",
														"src": "4662:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4673:11:13",
														"nodeType": "YulTypedName",
														"src": "4673:11:13",
														"type": ""
													}
												],
												"src": "4572:147:13"
											},
											{
												"body": {
													"nativeSrc": "4833:278:13",
													"nodeType": "YulBlock",
													"src": "4833:278:13",
													"statements": [
														{
															"nativeSrc": "4843:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4843:52:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4889:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4889:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "4857:31:13",
																	"nodeType": "YulIdentifier",
																	"src": "4857:31:13"
																},
																"nativeSrc": "4857:38:13",
																"nodeType": "YulFunctionCall",
																"src": "4857:38:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4847:6:13",
																	"nodeType": "YulTypedName",
																	"src": "4847:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4904:95:13",
															"nodeType": "YulAssignment",
															"src": "4904:95:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4987:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4987:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4992:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4992:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "4911:75:13",
																	"nodeType": "YulIdentifier",
																	"src": "4911:75:13"
																},
																"nativeSrc": "4911:88:13",
																"nodeType": "YulFunctionCall",
																"src": "4911:88:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4904:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4904:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5047:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5047:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5054:4:13",
																				"nodeType": "YulLiteral",
																				"src": "5054:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5043:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5043:3:13"
																		},
																		"nativeSrc": "5043:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5043:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "5061:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5061:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5066:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5066:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "5008:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "5008:34:13"
																},
																"nativeSrc": "5008:65:13",
																"nodeType": "YulFunctionCall",
																"src": "5008:65:13"
															},
															"nativeSrc": "5008:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "5008:65:13"
														},
														{
															"nativeSrc": "5082:23:13",
															"nodeType": "YulAssignment",
															"src": "5082:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5093:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5093:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5098:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5098:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5089:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5089:3:13"
																},
																"nativeSrc": "5089:16:13",
																"nodeType": "YulFunctionCall",
																"src": "5089:16:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5082:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5082:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "4725:386:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4814:5:13",
														"nodeType": "YulTypedName",
														"src": "4814:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4821:3:13",
														"nodeType": "YulTypedName",
														"src": "4821:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4829:3:13",
														"nodeType": "YulTypedName",
														"src": "4829:3:13",
														"type": ""
													}
												],
												"src": "4725:386:13"
											},
											{
												"body": {
													"nativeSrc": "5251:137:13",
													"nodeType": "YulBlock",
													"src": "5251:137:13",
													"statements": [
														{
															"nativeSrc": "5262:100:13",
															"nodeType": "YulAssignment",
															"src": "5262:100:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5349:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5349:6:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "5358:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5358:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "5269:79:13",
																	"nodeType": "YulIdentifier",
																	"src": "5269:79:13"
																},
																"nativeSrc": "5269:93:13",
																"nodeType": "YulFunctionCall",
																"src": "5269:93:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5262:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5262:3:13"
																}
															]
														},
														{
															"nativeSrc": "5372:10:13",
															"nodeType": "YulAssignment",
															"src": "5372:10:13",
															"value": {
																"name": "pos",
																"nativeSrc": "5379:3:13",
																"nodeType": "YulIdentifier",
																"src": "5379:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5372:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5372:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "5117:271:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5230:3:13",
														"nodeType": "YulTypedName",
														"src": "5230:3:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5236:6:13",
														"nodeType": "YulTypedName",
														"src": "5236:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5247:3:13",
														"nodeType": "YulTypedName",
														"src": "5247:3:13",
														"type": ""
													}
												],
												"src": "5117:271:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405260405161090138038061090183398181016040528101906100259190610644565b610035828261007060201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050505061074b565b61007f8261016060201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff167f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e60405160405180910390a25f8151111561014d576101478273ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610117573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061013b919061069e565b826102fb60201b60201c565b5061015c565b61015b61038160201b60201c565b5b5050565b5f8173ffffffffffffffffffffffffffffffffffffffff163b036101bb57806040517f64ced0ec0000000000000000000000000000000000000000000000000000000081526004016101b291906106d8565b60405180910390fd5b806101ed7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d505f1b6103bd60201b60201c565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f8173ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610276573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061029a919061069e565b90505f8173ffffffffffffffffffffffffffffffffffffffff163b036102f757806040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016102ee91906106d8565b60405180910390fd5b5050565b60605f808473ffffffffffffffffffffffffffffffffffffffff16846040516103249190610735565b5f60405180830381855af49150503d805f811461035c576040519150601f19603f3d011682016040523d82523d5f602084013e610361565b606091505b50915091506103778583836103c660201b60201c565b9250505092915050565b5f3411156103bb576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f819050919050565b6060826103e1576103dc8261045960201b60201c565b610451565b5f825114801561040757505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561044957836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161044091906106d8565b60405180910390fd5b819050610452565b5b9392505050565b5f8151111561046b5780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104d7826104ae565b9050919050565b6104e7816104cd565b81146104f1575f80fd5b50565b5f81519050610502816104de565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61055682610510565b810181811067ffffffffffffffff8211171561057557610574610520565b5b80604052505050565b5f61058761049d565b9050610593828261054d565b919050565b5f67ffffffffffffffff8211156105b2576105b1610520565b5b6105bb82610510565b9050602081019050919050565b8281835e5f83830152505050565b5f6105e86105e384610598565b61057e565b9050828152602081018484840111156106045761060361050c565b5b61060f8482856105c8565b509392505050565b5f82601f83011261062b5761062a610508565b5b815161063b8482602086016105d6565b91505092915050565b5f806040838503121561065a576106596104a6565b5b5f610667858286016104f4565b925050602083015167ffffffffffffffff811115610688576106876104aa565b5b61069485828601610617565b9150509250929050565b5f602082840312156106b3576106b26104a6565b5b5f6106c0848285016104f4565b91505092915050565b6106d2816104cd565b82525050565b5f6020820190506106eb5f8301846106c9565b92915050565b5f81519050919050565b5f81905092915050565b5f61070f826106f1565b61071981856106fb565b93506107298185602086016105c8565b80840191505092915050565b5f6107408284610705565b915081905092915050565b60805161019f6107625f395f60bc015261019f5ff3fe608060405261000c61000e565b005b61001e610019610020565b61009a565b565b5f6100296100b9565b73ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610071573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610095919061013e565b905090565b365f80375f80365f845af43d5f803e805f81146100b5573d5ff35b3d5ffd5b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61010d826100e4565b9050919050565b61011d81610103565b8114610127575f80fd5b50565b5f8151905061013881610114565b92915050565b5f60208284031215610153576101526100e0565b5b5f6101608482850161012a565b9150509291505056fea2646970667358221220ee11b61399bf39b9f1dc47334d906085f524077ac71c7f35381949991dcae91964736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x901 CODESIZE SUB DUP1 PUSH2 0x901 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x25 SWAP2 SWAP1 PUSH2 0x644 JUMP JUMPDEST PUSH2 0x35 DUP3 DUP3 PUSH2 0x70 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH2 0x74B JUMP JUMPDEST PUSH2 0x7F DUP3 PUSH2 0x160 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x14D JUMPI PUSH2 0x147 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x117 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x69E JUMP JUMPDEST DUP3 PUSH2 0x2FB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x15C JUMP JUMPDEST PUSH2 0x15B PUSH2 0x381 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x1BB JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x64CED0EC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1ED PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 PUSH0 SHL PUSH2 0x3BD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x276 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x69E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x2F7 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x735 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x35C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x361 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x377 DUP6 DUP4 DUP4 PUSH2 0x3C6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT ISZERO PUSH2 0x3BB JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x3E1 JUMPI PUSH2 0x3DC DUP3 PUSH2 0x459 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x451 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x407 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x449 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x440 SWAP2 SWAP1 PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x452 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x46B JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4D7 DUP3 PUSH2 0x4AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E7 DUP2 PUSH2 0x4CD JUMP JUMPDEST DUP2 EQ PUSH2 0x4F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x502 DUP2 PUSH2 0x4DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x556 DUP3 PUSH2 0x510 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x575 JUMPI PUSH2 0x574 PUSH2 0x520 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x587 PUSH2 0x49D JUMP JUMPDEST SWAP1 POP PUSH2 0x593 DUP3 DUP3 PUSH2 0x54D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x5B2 JUMPI PUSH2 0x5B1 PUSH2 0x520 JUMP JUMPDEST JUMPDEST PUSH2 0x5BB DUP3 PUSH2 0x510 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5E8 PUSH2 0x5E3 DUP5 PUSH2 0x598 JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x604 JUMPI PUSH2 0x603 PUSH2 0x50C JUMP JUMPDEST JUMPDEST PUSH2 0x60F DUP5 DUP3 DUP6 PUSH2 0x5C8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x62B JUMPI PUSH2 0x62A PUSH2 0x508 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x63B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x5D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x65A JUMPI PUSH2 0x659 PUSH2 0x4A6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x667 DUP6 DUP3 DUP7 ADD PUSH2 0x4F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x688 JUMPI PUSH2 0x687 PUSH2 0x4AA JUMP JUMPDEST JUMPDEST PUSH2 0x694 DUP6 DUP3 DUP7 ADD PUSH2 0x617 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6B3 JUMPI PUSH2 0x6B2 PUSH2 0x4A6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6C0 DUP5 DUP3 DUP6 ADD PUSH2 0x4F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6D2 DUP2 PUSH2 0x4CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6EB PUSH0 DUP4 ADD DUP5 PUSH2 0x6C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x70F DUP3 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x719 DUP2 DUP6 PUSH2 0x6FB JUMP JUMPDEST SWAP4 POP PUSH2 0x729 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5C8 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x740 DUP3 DUP5 PUSH2 0x705 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x19F PUSH2 0x762 PUSH0 CODECOPY PUSH0 PUSH1 0xBC ADD MSTORE PUSH2 0x19F PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0xC PUSH2 0xE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E PUSH2 0x19 PUSH2 0x20 JUMP JUMPDEST PUSH2 0x9A JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x29 PUSH2 0xB9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x71 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x95 SWAP2 SWAP1 PUSH2 0x13E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH0 DUP1 CALLDATACOPY PUSH0 DUP1 CALLDATASIZE PUSH0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY DUP1 PUSH0 DUP2 EQ PUSH2 0xB5 JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10D DUP3 PUSH2 0xE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11D DUP2 PUSH2 0x103 JUMP JUMPDEST DUP2 EQ PUSH2 0x127 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x138 DUP2 PUSH2 0x114 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x153 JUMPI PUSH2 0x152 PUSH2 0xE0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x160 DUP5 DUP3 DUP6 ADD PUSH2 0x12A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE GT 0xB6 SGT SWAP10 0xBF CODECOPY 0xB9 CALL 0xDC SELFBALANCE CALLER 0x4D SWAP1 PUSH1 0x85 CREATE2 0x24 SMOD PUSH27 0xC71C7F35381949991DCAE91964736F6C634300081A003300000000 ",
							"sourceMap": "1116:1194:4:-:0;;;1773:147;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1838:49;1874:6;1882:4;1838:35;;;:49;;:::i;:::-;1907:6;1897:16;;;;;;;;;;1773:147;;1116:1194;;5582:342:2;5671:21;5682:9;5671:10;;;:21;;:::i;:::-;5731:9;5707:34;;;;;;;;;;;;5770:1;5756:4;:11;:15;5752:166;;;5787:71;5824:9;5816:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5853:4;5787:28;;;:71;;:::i;:::-;;5752:166;;;5889:18;:16;;;:18;;:::i;:::-;5752:166;5582:342;;:::o;4620:437::-;4706:1;4681:9;:21;;;:26;4677:95;;4751:9;4730:31;;;;;;;;;;;:::i;:::-;;;;;;;;4677:95;4830:9;4782:39;4286:66;4809:11;;4782:26;;;:39;;:::i;:::-;:45;;;:57;;;;;;;;;;;;;;;;;;4850:28;4889:9;4881:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4850:66;;4966:1;4930:20;:32;;;:37;4926:125;;5019:20;4990:50;;;;;;;;;;;:::i;:::-;;;;;;;;4926:125;4667:390;4620:437;:::o;3900:253:8:-;3983:12;4008;4022:23;4049:6;:19;;4069:4;4049:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4007:67;;;;4091:55;4118:6;4126:7;4135:10;4091:26;;;:55;;:::i;:::-;4084:62;;;;3900:253;;;;:::o;6113:122:2:-;6175:1;6163:9;:13;6159:70;;;6199:19;;;;;;;;;;;;;;6159:70;6113:122::o;1899:163:11:-;1960:21;2042:4;2032:14;;1899:163;;;:::o;4421:582:8:-;4565:12;4594:7;4589:408;;4617:19;4625:10;4617:7;;;:19;;:::i;:::-;4589:408;;;4862:1;4841:10;:17;:22;:49;;;;;4889:1;4867:6;:18;;;:23;4841:49;4837:119;;;4934:6;4917:24;;;;;;;;;;;:::i;:::-;;;;;;;;4837:119;4976:10;4969:17;;;;4589:408;4421:582;;;;;;:::o;5543:487::-;5694:1;5674:10;:17;:21;5670:354;;;5871:10;5865:17;5927:15;5914:10;5910:2;5906:19;5899:44;5670:354;5994:19;;;;;;;;;;;;;;7:75:13;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:117::-;954:1;951;944:12;968:117;1077:1;1074;1067:12;1091:102;1132:6;1183:2;1179:7;1174:2;1167:5;1163:14;1159:28;1149:38;;1091:102;;;:::o;1199:180::-;1247:77;1244:1;1237:88;1344:4;1341:1;1334:15;1368:4;1365:1;1358:15;1385:281;1468:27;1490:4;1468:27;:::i;:::-;1460:6;1456:40;1598:6;1586:10;1583:22;1562:18;1550:10;1547:34;1544:62;1541:88;;;1609:18;;:::i;:::-;1541:88;1649:10;1645:2;1638:22;1428:238;1385:281;;:::o;1672:129::-;1706:6;1733:20;;:::i;:::-;1723:30;;1762:33;1790:4;1782:6;1762:33;:::i;:::-;1672:129;;;:::o;1807:307::-;1868:4;1958:18;1950:6;1947:30;1944:56;;;1980:18;;:::i;:::-;1944:56;2018:29;2040:6;2018:29;:::i;:::-;2010:37;;2102:4;2096;2092:15;2084:23;;1807:307;;;:::o;2120:139::-;2209:6;2204:3;2199;2193:23;2250:1;2241:6;2236:3;2232:16;2225:27;2120:139;;;:::o;2265:432::-;2353:5;2378:65;2394:48;2435:6;2394:48;:::i;:::-;2378:65;:::i;:::-;2369:74;;2466:6;2459:5;2452:21;2504:4;2497:5;2493:16;2542:3;2533:6;2528:3;2524:16;2521:25;2518:112;;;2549:79;;:::i;:::-;2518:112;2639:52;2684:6;2679:3;2674;2639:52;:::i;:::-;2359:338;2265:432;;;;;:::o;2716:353::-;2782:5;2831:3;2824:4;2816:6;2812:17;2808:27;2798:122;;2839:79;;:::i;:::-;2798:122;2949:6;2943:13;2974:89;3059:3;3051:6;3044:4;3036:6;3032:17;2974:89;:::i;:::-;2965:98;;2788:281;2716:353;;;;:::o;3075:678::-;3163:6;3171;3220:2;3208:9;3199:7;3195:23;3191:32;3188:119;;;3226:79;;:::i;:::-;3188:119;3346:1;3371:64;3427:7;3418:6;3407:9;3403:22;3371:64;:::i;:::-;3361:74;;3317:128;3505:2;3494:9;3490:18;3484:25;3536:18;3528:6;3525:30;3522:117;;;3558:79;;:::i;:::-;3522:117;3663:73;3728:7;3719:6;3708:9;3704:22;3663:73;:::i;:::-;3653:83;;3455:291;3075:678;;;;;:::o;3759:351::-;3829:6;3878:2;3866:9;3857:7;3853:23;3849:32;3846:119;;;3884:79;;:::i;:::-;3846:119;4004:1;4029:64;4085:7;4076:6;4065:9;4061:22;4029:64;:::i;:::-;4019:74;;3975:128;3759:351;;;;:::o;4116:118::-;4203:24;4221:5;4203:24;:::i;:::-;4198:3;4191:37;4116:118;;:::o;4240:222::-;4333:4;4371:2;4360:9;4356:18;4348:26;;4384:71;4452:1;4441:9;4437:17;4428:6;4384:71;:::i;:::-;4240:222;;;;:::o;4468:98::-;4519:6;4553:5;4547:12;4537:22;;4468:98;;;:::o;4572:147::-;4673:11;4710:3;4695:18;;4572:147;;;;:::o;4725:386::-;4829:3;4857:38;4889:5;4857:38;:::i;:::-;4911:88;4992:6;4987:3;4911:88;:::i;:::-;4904:95;;5008:65;5066:6;5061:3;5054:4;5047:5;5043:16;5008:65;:::i;:::-;5098:6;5093:3;5089:16;5082:23;;4833:278;4725:386;;;;:::o;5117:271::-;5247:3;5269:93;5358:3;5349:6;5269:93;:::i;:::-;5262:100;;5379:3;5372:10;;5117:271;;;;:::o;1116:1194:4:-;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_497": {
									"entryPoint": null,
									"id": 497,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_delegate_473": {
									"entryPoint": 154,
									"id": 473,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_fallback_489": {
									"entryPoint": 14,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getBeacon_555": {
									"entryPoint": 185,
									"id": 555,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_implementation_546": {
									"entryPoint": 32,
									"id": 546,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 259,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 224,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:13",
										"nodeType": "YulBlock",
										"src": "0:1199:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:81:13",
													"nodeType": "YulBlock",
													"src": "379:81:13",
													"statements": [
														{
															"nativeSrc": "389:65:13",
															"nodeType": "YulAssignment",
															"src": "389:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:13",
																		"nodeType": "YulLiteral",
																		"src": "411:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:13"
																},
																"nativeSrc": "400:54:13",
																"nodeType": "YulFunctionCall",
																"src": "400:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:126:13"
											},
											{
												"body": {
													"nativeSrc": "511:51:13",
													"nodeType": "YulBlock",
													"src": "511:51:13",
													"statements": [
														{
															"nativeSrc": "521:35:13",
															"nodeType": "YulAssignment",
															"src": "521:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:13"
																},
																"nativeSrc": "532:24:13",
																"nodeType": "YulFunctionCall",
																"src": "532:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:13",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:13",
														"nodeType": "YulTypedName",
														"src": "503:7:13",
														"type": ""
													}
												],
												"src": "466:96:13"
											},
											{
												"body": {
													"nativeSrc": "611:79:13",
													"nodeType": "YulBlock",
													"src": "611:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:13",
																"nodeType": "YulBlock",
																"src": "668:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:13",
																					"nodeType": "YulLiteral",
																					"src": "677:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:13",
																					"nodeType": "YulLiteral",
																					"src": "680:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:13"
																			},
																			"nativeSrc": "670:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:13"
																		},
																		"nativeSrc": "670:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:13"
																				},
																				"nativeSrc": "641:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:13"
																		},
																		"nativeSrc": "631:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:13"
																},
																"nativeSrc": "624:43:13",
																"nodeType": "YulFunctionCall",
																"src": "624:43:13"
															},
															"nativeSrc": "621:63:13",
															"nodeType": "YulIf",
															"src": "621:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:13",
														"nodeType": "YulTypedName",
														"src": "604:5:13",
														"type": ""
													}
												],
												"src": "568:122:13"
											},
											{
												"body": {
													"nativeSrc": "759:80:13",
													"nodeType": "YulBlock",
													"src": "759:80:13",
													"statements": [
														{
															"nativeSrc": "769:22:13",
															"nodeType": "YulAssignment",
															"src": "769:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:13"
																},
																"nativeSrc": "778:13:13",
																"nodeType": "YulFunctionCall",
																"src": "778:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:13"
																},
																"nativeSrc": "800:33:13",
																"nodeType": "YulFunctionCall",
																"src": "800:33:13"
															},
															"nativeSrc": "800:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:13"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:13",
														"nodeType": "YulTypedName",
														"src": "737:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:13",
														"nodeType": "YulTypedName",
														"src": "745:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:13",
														"nodeType": "YulTypedName",
														"src": "753:5:13",
														"type": ""
													}
												],
												"src": "696:143:13"
											},
											{
												"body": {
													"nativeSrc": "922:274:13",
													"nodeType": "YulBlock",
													"src": "922:274:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:13",
																"nodeType": "YulBlock",
																"src": "968:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:13"
																			},
																			"nativeSrc": "970:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:13"
																		},
																		"nativeSrc": "970:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:13"
																		},
																		"nativeSrc": "939:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:13",
																		"nodeType": "YulLiteral",
																		"src": "964:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:13"
																},
																"nativeSrc": "935:32:13",
																"nodeType": "YulFunctionCall",
																"src": "935:32:13"
															},
															"nativeSrc": "932:119:13",
															"nodeType": "YulIf",
															"src": "932:119:13"
														},
														{
															"nativeSrc": "1061:128:13",
															"nodeType": "YulBlock",
															"src": "1061:128:13",
															"statements": [
																{
																	"nativeSrc": "1076:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:13"
																				},
																				"nativeSrc": "1147:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:13"
																		},
																		"nativeSrc": "1115:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:13",
														"nodeType": "YulTypedName",
														"src": "892:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:13",
														"nodeType": "YulTypedName",
														"src": "903:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:13",
														"nodeType": "YulTypedName",
														"src": "915:6:13",
														"type": ""
													}
												],
												"src": "845:351:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"511": [
									{
										"length": 32,
										"start": 188
									}
								]
							},
							"linkReferences": {},
							"object": "608060405261000c61000e565b005b61001e610019610020565b61009a565b565b5f6100296100b9565b73ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610071573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610095919061013e565b905090565b365f80375f80365f845af43d5f803e805f81146100b5573d5ff35b3d5ffd5b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61010d826100e4565b9050919050565b61011d81610103565b8114610127575f80fd5b50565b5f8151905061013881610114565b92915050565b5f60208284031215610153576101526100e0565b5b5f6101608482850161012a565b9150509291505056fea2646970667358221220ee11b61399bf39b9f1dc47334d906085f524077ac71c7f35381949991dcae91964736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0xC PUSH2 0xE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E PUSH2 0x19 PUSH2 0x20 JUMP JUMPDEST PUSH2 0x9A JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x29 PUSH2 0xB9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x71 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x95 SWAP2 SWAP1 PUSH2 0x13E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH0 DUP1 CALLDATACOPY PUSH0 DUP1 CALLDATASIZE PUSH0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY DUP1 PUSH0 DUP2 EQ PUSH2 0xB5 JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10D DUP3 PUSH2 0xE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11D DUP2 PUSH2 0x103 JUMP JUMPDEST DUP2 EQ PUSH2 0x127 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x138 DUP2 PUSH2 0x114 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x153 JUMPI PUSH2 0x152 PUSH2 0xE0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x160 DUP5 DUP3 DUP6 ADD PUSH2 0x12A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE GT 0xB6 SGT SWAP10 0xBF CODECOPY 0xB9 CALL 0xDC SELFBALANCE CALLER 0x4D SWAP1 PUSH1 0x85 CREATE2 0x24 SMOD PUSH27 0xC71C7F35381949991DCAE91964736F6C634300081A003300000000 ",
							"sourceMap": "1116:1194:4:-:0;;;2649:11:3;:9;:11::i;:::-;1116:1194:4;2323:83:3;2371:28;2381:17;:15;:17::i;:::-;2371:9;:28::i;:::-;2323:83::o;2023:138:4:-;2090:7;2124:12;:10;:12::i;:::-;2116:36;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2109:45;;2023:138;:::o;949:895:3:-;1287:14;1284:1;1281;1268:34;1501:1;1498;1482:14;1479:1;1463:14;1456:5;1443:60;1577:16;1574:1;1571;1556:38;1615:6;1687:1;1682:66;;;;1797:16;1794:1;1787:27;1682:66;1717:16;1714:1;1707:27;2215:93:4;2268:7;2294;2287:14;;2215:93;:::o;88:117:13:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "83000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite"
							},
							"internal": {
								"_getBeacon()": "infinite",
								"_implementation()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1116,
									"end": 2310,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 1116,
									"end": 2310,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1116,
									"end": 2310,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1773,
									"end": 1920,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1838,
									"end": 1887,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1874,
									"end": 1880,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1882,
									"end": 1886,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1838,
									"end": 1873,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1838,
									"end": 1873,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1838,
									"end": 1873,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1838,
									"end": 1887,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1838,
									"end": 1887,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 1838,
									"end": 1887,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1838,
									"end": 1887,
									"name": "tag",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1838,
									"end": 1887,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1907,
									"end": 1913,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1897,
									"end": 1913,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1897,
									"end": 1913,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1897,
									"end": 1913,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 1897,
									"end": 1913,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1897,
									"end": 1913,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1897,
									"end": 1913,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1897,
									"end": 1913,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1897,
									"end": 1913,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1897,
									"end": 1913,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1897,
									"end": 1913,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1116,
									"end": 2310,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1116,
									"end": 2310,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5582,
									"end": 5924,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 5582,
									"end": 5924,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5671,
									"end": 5692,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 5682,
									"end": 5691,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5671,
									"end": 5681,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 5671,
									"end": 5681,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5671,
									"end": 5681,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 5671,
									"end": 5692,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5671,
									"end": 5692,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 5671,
									"end": 5692,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5671,
									"end": 5692,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 5671,
									"end": 5692,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5731,
									"end": 5740,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5707,
									"end": 5741,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5707,
									"end": 5741,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5707,
									"end": 5741,
									"name": "PUSH",
									"source": 2,
									"value": "1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E"
								},
								{
									"begin": 5707,
									"end": 5741,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5707,
									"end": 5741,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5707,
									"end": 5741,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5707,
									"end": 5741,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5707,
									"end": 5741,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5707,
									"end": 5741,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5707,
									"end": 5741,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 5707,
									"end": 5741,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5707,
									"end": 5741,
									"name": "LOG2",
									"source": 2
								},
								{
									"begin": 5770,
									"end": 5771,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5756,
									"end": 5767,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5756,
									"end": 5771,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 5752,
									"end": 5918,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5752,
									"end": 5918,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 5752,
									"end": 5918,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5787,
									"end": 5858,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 5824,
									"end": 5833,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5816,
									"end": 5849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5849,
									"name": "PUSH",
									"source": 2,
									"value": "5C60DA1B"
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFF"
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "GAS",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "STATICCALL",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "RETURNDATACOPY",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 5816,
									"end": 5851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 5816,
									"end": 5851,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5853,
									"end": 5857,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5787,
									"end": 5815,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 5787,
									"end": 5815,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5787,
									"end": 5815,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 5787,
									"end": 5858,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5787,
									"end": 5858,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 5787,
									"end": 5858,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5787,
									"end": 5858,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 5787,
									"end": 5858,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5787,
									"end": 5858,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5752,
									"end": 5918,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 5752,
									"end": 5918,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5752,
									"end": 5918,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 5752,
									"end": 5918,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5889,
									"end": 5907,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 5889,
									"end": 5905,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5889,
									"end": 5905,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5889,
									"end": 5905,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 5889,
									"end": 5907,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5889,
									"end": 5907,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 5889,
									"end": 5907,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5889,
									"end": 5907,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 5889,
									"end": 5907,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5752,
									"end": 5918,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 5752,
									"end": 5918,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5582,
									"end": 5924,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5582,
									"end": 5924,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5582,
									"end": 5924,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4620,
									"end": 5057,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 4620,
									"end": 5057,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4706,
									"end": 4707,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4681,
									"end": 4690,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4681,
									"end": 4702,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4681,
									"end": 4702,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4681,
									"end": 4702,
									"name": "EXTCODESIZE",
									"source": 2
								},
								{
									"begin": 4681,
									"end": 4707,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 4677,
									"end": 4772,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 4677,
									"end": 4772,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4751,
									"end": 4760,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4730,
									"end": 4761,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 4730,
									"end": 4761,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4730,
									"end": 4761,
									"name": "PUSH",
									"source": 2,
									"value": "64CED0EC00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4730,
									"end": 4761,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4730,
									"end": 4761,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4730,
									"end": 4761,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 4730,
									"end": 4761,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4730,
									"end": 4761,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 4730,
									"end": 4761,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4730,
									"end": 4761,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4730,
									"end": 4761,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 4730,
									"end": 4761,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4730,
									"end": 4761,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 4730,
									"end": 4761,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4730,
									"end": 4761,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 4730,
									"end": 4761,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4730,
									"end": 4761,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4730,
									"end": 4761,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4730,
									"end": 4761,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 4730,
									"end": 4761,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4730,
									"end": 4761,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 4677,
									"end": 4772,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 4677,
									"end": 4772,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4830,
									"end": 4839,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4782,
									"end": 4821,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 4286,
									"end": 4352,
									"name": "PUSH",
									"source": 2,
									"value": "A3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50"
								},
								{
									"begin": 4809,
									"end": 4820,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4809,
									"end": 4820,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 4782,
									"end": 4808,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 4782,
									"end": 4808,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4782,
									"end": 4808,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 4782,
									"end": 4821,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4782,
									"end": 4821,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 4782,
									"end": 4821,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4782,
									"end": 4821,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 4782,
									"end": 4821,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4782,
									"end": 4827,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4782,
									"end": 4827,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4782,
									"end": 4827,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4782,
									"end": 4839,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 4782,
									"end": 4839,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 4782,
									"end": 4839,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4782,
									"end": 4839,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 4782,
									"end": 4839,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4782,
									"end": 4839,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4782,
									"end": 4839,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 4782,
									"end": 4839,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 4782,
									"end": 4839,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4782,
									"end": 4839,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4782,
									"end": 4839,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4782,
									"end": 4839,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4782,
									"end": 4839,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4782,
									"end": 4839,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 4782,
									"end": 4839,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 4782,
									"end": 4839,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4782,
									"end": 4839,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 4782,
									"end": 4839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4850,
									"end": 4878,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4889,
									"end": 4898,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4914,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4881,
									"end": 4914,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4914,
									"name": "PUSH",
									"source": 2,
									"value": "5C60DA1B"
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFF"
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "GAS",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "STATICCALL",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "RETURNDATACOPY",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 4881,
									"end": 4916,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 4881,
									"end": 4916,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4850,
									"end": 4916,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4850,
									"end": 4916,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4930,
									"end": 4950,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4930,
									"end": 4962,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4930,
									"end": 4962,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4930,
									"end": 4962,
									"name": "EXTCODESIZE",
									"source": 2
								},
								{
									"begin": 4930,
									"end": 4967,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 4926,
									"end": 5051,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 4926,
									"end": 5051,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5019,
									"end": 5039,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4990,
									"end": 5040,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 4990,
									"end": 5040,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4990,
									"end": 5040,
									"name": "PUSH",
									"source": 2,
									"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4990,
									"end": 5040,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4990,
									"end": 5040,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4990,
									"end": 5040,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 4990,
									"end": 5040,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4990,
									"end": 5040,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 4990,
									"end": 5040,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4990,
									"end": 5040,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4990,
									"end": 5040,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 4990,
									"end": 5040,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4990,
									"end": 5040,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 4990,
									"end": 5040,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4990,
									"end": 5040,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 4990,
									"end": 5040,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4990,
									"end": 5040,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4990,
									"end": 5040,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4990,
									"end": 5040,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 4990,
									"end": 5040,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4990,
									"end": 5040,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 4926,
									"end": 5051,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 4926,
									"end": 5051,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4667,
									"end": 5057,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4620,
									"end": 5057,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4620,
									"end": 5057,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3900,
									"end": 4153,
									"name": "tag",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 3900,
									"end": 4153,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3983,
									"end": 3995,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 4008,
									"end": 4020,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4022,
									"end": 4045,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4055,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4068,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4049,
									"end": 4068,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4069,
									"end": 4073,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 4049,
									"end": 4074,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "GAS",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DELEGATECALL",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "RETURNDATASIZE",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 8,
									"value": "3F"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "RETURNDATASIZE",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "RETURNDATASIZE",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "RETURNDATASIZE",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "RETURNDATACOPY",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4007,
									"end": 4074,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4007,
									"end": 4074,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4007,
									"end": 4074,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4007,
									"end": 4074,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4091,
									"end": 4146,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 4118,
									"end": 4124,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4126,
									"end": 4133,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4135,
									"end": 4145,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4091,
									"end": 4117,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 4091,
									"end": 4117,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4091,
									"end": 4117,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 4091,
									"end": 4146,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4091,
									"end": 4146,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 4091,
									"end": 4146,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4091,
									"end": 4146,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 4091,
									"end": 4146,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4084,
									"end": 4146,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4084,
									"end": 4146,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4084,
									"end": 4146,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4084,
									"end": 4146,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3900,
									"end": 4153,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3900,
									"end": 4153,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3900,
									"end": 4153,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3900,
									"end": 4153,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3900,
									"end": 4153,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6113,
									"end": 6235,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6113,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6175,
									"end": 6176,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6163,
									"end": 6172,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 6163,
									"end": 6176,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 6159,
									"end": 6229,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6159,
									"end": 6229,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 6159,
									"end": 6229,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "PUSH",
									"source": 2,
									"value": "B398979F00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6199,
									"end": 6218,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6159,
									"end": 6229,
									"name": "tag",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 6159,
									"end": 6229,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6113,
									"end": 6235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1899,
									"end": 2062,
									"name": "tag",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 1899,
									"end": 2062,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1960,
									"end": 1981,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2042,
									"end": 2046,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2032,
									"end": 2046,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2032,
									"end": 2046,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1899,
									"end": 2062,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1899,
									"end": 2062,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1899,
									"end": 2062,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1899,
									"end": 2062,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4421,
									"end": 5003,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 4421,
									"end": 5003,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4565,
									"end": 4577,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 4594,
									"end": 4601,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4589,
									"end": 4997,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 4589,
									"end": 4997,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4617,
									"end": 4636,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 4625,
									"end": 4635,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4617,
									"end": 4624,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 4617,
									"end": 4624,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4617,
									"end": 4624,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 4617,
									"end": 4636,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4617,
									"end": 4636,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 4617,
									"end": 4636,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4617,
									"end": 4636,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 4617,
									"end": 4636,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4589,
									"end": 4997,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 4589,
									"end": 4997,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4589,
									"end": 4997,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 4589,
									"end": 4997,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4862,
									"end": 4863,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4841,
									"end": 4851,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4841,
									"end": 4858,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 4841,
									"end": 4863,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 4841,
									"end": 4890,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4841,
									"end": 4890,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4841,
									"end": 4890,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 4841,
									"end": 4890,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4841,
									"end": 4890,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4889,
									"end": 4890,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4867,
									"end": 4873,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4867,
									"end": 4885,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4867,
									"end": 4885,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4867,
									"end": 4885,
									"name": "EXTCODESIZE",
									"source": 8
								},
								{
									"begin": 4867,
									"end": 4890,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 4841,
									"end": 4890,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 4841,
									"end": 4890,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4837,
									"end": 4956,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4837,
									"end": 4956,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 4837,
									"end": 4956,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4934,
									"end": 4940,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "PUSH",
									"source": 8,
									"value": "9996B31500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 4917,
									"end": 4941,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 4837,
									"end": 4956,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 4837,
									"end": 4956,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4976,
									"end": 4986,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4969,
									"end": 4986,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4969,
									"end": 4986,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4969,
									"end": 4986,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 4969,
									"end": 4986,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4589,
									"end": 4997,
									"name": "tag",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 4589,
									"end": 4997,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4421,
									"end": 5003,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 4421,
									"end": 5003,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4421,
									"end": 5003,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 4421,
									"end": 5003,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4421,
									"end": 5003,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4421,
									"end": 5003,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4421,
									"end": 5003,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4421,
									"end": 5003,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5543,
									"end": 6030,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 5543,
									"end": 6030,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5694,
									"end": 5695,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5674,
									"end": 5684,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5674,
									"end": 5691,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 5674,
									"end": 5695,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 5670,
									"end": 6024,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5670,
									"end": 6024,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 5670,
									"end": 6024,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5871,
									"end": 5881,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5865,
									"end": 5882,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 5927,
									"end": 5942,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5914,
									"end": 5924,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5906,
									"end": 5925,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5899,
									"end": 5943,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 5670,
									"end": 6024,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 5670,
									"end": 6024,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5994,
									"end": 6013,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 5994,
									"end": 6013,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 5994,
									"end": 6013,
									"name": "PUSH",
									"source": 8,
									"value": "D6BDA27500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5994,
									"end": 6013,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5994,
									"end": 6013,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5994,
									"end": 6013,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 5994,
									"end": 6013,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5994,
									"end": 6013,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 5994,
									"end": 6013,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 5994,
									"end": 6013,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5994,
									"end": 6013,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5994,
									"end": 6013,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 5994,
									"end": 6013,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5994,
									"end": 6013,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 13,
									"value": "58"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "83"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "58"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 13,
									"value": "83"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 962,
									"name": "tag",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 845,
									"end": 962,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 951,
									"end": 952,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 944,
									"end": 956,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 968,
									"end": 1085,
									"name": "tag",
									"source": 13,
									"value": "62"
								},
								{
									"begin": 968,
									"end": 1085,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1074,
									"end": 1075,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1067,
									"end": 1079,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "tag",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1132,
									"end": 1138,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1185,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 1179,
									"end": 1186,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 1174,
									"end": 1176,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 1167,
									"end": 1172,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1163,
									"end": 1177,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1159,
									"end": 1187,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1149,
									"end": 1187,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1149,
									"end": 1187,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1091,
									"end": 1193,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1199,
									"end": 1379,
									"name": "tag",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 1199,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1247,
									"end": 1324,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1244,
									"end": 1245,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1237,
									"end": 1325,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1344,
									"end": 1348,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 1341,
									"end": 1342,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1334,
									"end": 1349,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1368,
									"end": 1372,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1365,
									"end": 1366,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1373,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "tag",
									"source": 13,
									"value": "65"
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "92"
								},
								{
									"begin": 1490,
									"end": 1494,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 1468,
									"end": 1495,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "tag",
									"source": 13,
									"value": "92"
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1460,
									"end": 1466,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1456,
									"end": 1496,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1598,
									"end": 1604,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1586,
									"end": 1596,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1583,
									"end": 1605,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1562,
									"end": 1580,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1550,
									"end": 1560,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1547,
									"end": 1581,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1544,
									"end": 1606,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "94"
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 1609,
									"end": 1627,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "tag",
									"source": 13,
									"value": "94"
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "tag",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1649,
									"end": 1659,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1645,
									"end": 1647,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1638,
									"end": 1660,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1428,
									"end": 1666,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1385,
									"end": 1666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "tag",
									"source": 13,
									"value": "66"
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1706,
									"end": 1712,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 1733,
									"end": 1753,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "tag",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1723,
									"end": 1753,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1723,
									"end": 1753,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "97"
								},
								{
									"begin": 1790,
									"end": 1794,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1782,
									"end": 1788,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "65"
								},
								{
									"begin": 1762,
									"end": 1795,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "tag",
									"source": 13,
									"value": "97"
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1672,
									"end": 1801,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1807,
									"end": 2114,
									"name": "tag",
									"source": 13,
									"value": "67"
								},
								{
									"begin": 1807,
									"end": 2114,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1868,
									"end": 1872,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 1976,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1950,
									"end": 1956,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1947,
									"end": 1977,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1944,
									"end": 2000,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1944,
									"end": 2000,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "99"
								},
								{
									"begin": 1944,
									"end": 2000,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1980,
									"end": 1998,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 1980,
									"end": 1998,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 1980,
									"end": 1998,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1980,
									"end": 1998,
									"name": "tag",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 1980,
									"end": 1998,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1944,
									"end": 2000,
									"name": "tag",
									"source": 13,
									"value": "99"
								},
								{
									"begin": 1944,
									"end": 2000,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2018,
									"end": 2047,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 2040,
									"end": 2046,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2018,
									"end": 2047,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 2018,
									"end": 2047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2018,
									"end": 2047,
									"name": "tag",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 2018,
									"end": 2047,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2010,
									"end": 2047,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2010,
									"end": 2047,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2102,
									"end": 2106,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2100,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2092,
									"end": 2107,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2084,
									"end": 2107,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2084,
									"end": 2107,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1807,
									"end": 2114,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1807,
									"end": 2114,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1807,
									"end": 2114,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1807,
									"end": 2114,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2120,
									"end": 2259,
									"name": "tag",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 2120,
									"end": 2259,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2209,
									"end": 2215,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2204,
									"end": 2207,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2199,
									"end": 2202,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2193,
									"end": 2216,
									"name": "MCOPY",
									"source": 13
								},
								{
									"begin": 2250,
									"end": 2251,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2241,
									"end": 2247,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2236,
									"end": 2239,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2232,
									"end": 2248,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2225,
									"end": 2252,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2120,
									"end": 2259,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2120,
									"end": 2259,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2120,
									"end": 2259,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2120,
									"end": 2259,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2265,
									"end": 2697,
									"name": "tag",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 2265,
									"end": 2697,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2353,
									"end": 2358,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2443,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "104"
								},
								{
									"begin": 2394,
									"end": 2442,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "105"
								},
								{
									"begin": 2435,
									"end": 2441,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2394,
									"end": 2442,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "67"
								},
								{
									"begin": 2394,
									"end": 2442,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2394,
									"end": 2442,
									"name": "tag",
									"source": 13,
									"value": "105"
								},
								{
									"begin": 2394,
									"end": 2442,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2378,
									"end": 2443,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "66"
								},
								{
									"begin": 2378,
									"end": 2443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2378,
									"end": 2443,
									"name": "tag",
									"source": 13,
									"value": "104"
								},
								{
									"begin": 2378,
									"end": 2443,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2369,
									"end": 2443,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2369,
									"end": 2443,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2466,
									"end": 2472,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2459,
									"end": 2464,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2452,
									"end": 2473,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2504,
									"end": 2508,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2497,
									"end": 2502,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2493,
									"end": 2509,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2542,
									"end": 2545,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2533,
									"end": 2539,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2528,
									"end": 2531,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2524,
									"end": 2540,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2521,
									"end": 2546,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 2518,
									"end": 2630,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2518,
									"end": 2630,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "106"
								},
								{
									"begin": 2518,
									"end": 2630,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2549,
									"end": 2628,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "107"
								},
								{
									"begin": 2549,
									"end": 2628,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "62"
								},
								{
									"begin": 2549,
									"end": 2628,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2549,
									"end": 2628,
									"name": "tag",
									"source": 13,
									"value": "107"
								},
								{
									"begin": 2549,
									"end": 2628,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2518,
									"end": 2630,
									"name": "tag",
									"source": 13,
									"value": "106"
								},
								{
									"begin": 2518,
									"end": 2630,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2639,
									"end": 2691,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "108"
								},
								{
									"begin": 2684,
									"end": 2690,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2679,
									"end": 2682,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2674,
									"end": 2677,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 2639,
									"end": 2691,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 2639,
									"end": 2691,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2639,
									"end": 2691,
									"name": "tag",
									"source": 13,
									"value": "108"
								},
								{
									"begin": 2639,
									"end": 2691,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2359,
									"end": 2697,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2265,
									"end": 2697,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 2265,
									"end": 2697,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2265,
									"end": 2697,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2265,
									"end": 2697,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2265,
									"end": 2697,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2265,
									"end": 2697,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2716,
									"end": 3069,
									"name": "tag",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 2716,
									"end": 3069,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2782,
									"end": 2787,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2831,
									"end": 2834,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2824,
									"end": 2828,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 2816,
									"end": 2822,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2812,
									"end": 2829,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2808,
									"end": 2835,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 2798,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "110"
								},
								{
									"begin": 2798,
									"end": 2920,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "111"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 2839,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "tag",
									"source": 13,
									"value": "111"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2798,
									"end": 2920,
									"name": "tag",
									"source": 13,
									"value": "110"
								},
								{
									"begin": 2798,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2949,
									"end": 2955,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2943,
									"end": 2956,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2974,
									"end": 3063,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "112"
								},
								{
									"begin": 3059,
									"end": 3062,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3051,
									"end": 3057,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3044,
									"end": 3048,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3036,
									"end": 3042,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 3032,
									"end": 3049,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2974,
									"end": 3063,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 2974,
									"end": 3063,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2974,
									"end": 3063,
									"name": "tag",
									"source": 13,
									"value": "112"
								},
								{
									"begin": 2974,
									"end": 3063,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2965,
									"end": 3063,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2965,
									"end": 3063,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2788,
									"end": 3069,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2716,
									"end": 3069,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2716,
									"end": 3069,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2716,
									"end": 3069,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2716,
									"end": 3069,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2716,
									"end": 3069,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3075,
									"end": 3753,
									"name": "tag",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 3075,
									"end": 3753,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3163,
									"end": 3169,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3171,
									"end": 3177,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3220,
									"end": 3222,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 3208,
									"end": 3217,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3199,
									"end": 3206,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3195,
									"end": 3218,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 3191,
									"end": 3223,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 3188,
									"end": 3307,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3188,
									"end": 3307,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "114"
								},
								{
									"begin": 3188,
									"end": 3307,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3226,
									"end": 3305,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "115"
								},
								{
									"begin": 3226,
									"end": 3305,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 3226,
									"end": 3305,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3226,
									"end": 3305,
									"name": "tag",
									"source": 13,
									"value": "115"
								},
								{
									"begin": 3226,
									"end": 3305,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3188,
									"end": 3307,
									"name": "tag",
									"source": 13,
									"value": "114"
								},
								{
									"begin": 3188,
									"end": 3307,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3346,
									"end": 3347,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3371,
									"end": 3435,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "116"
								},
								{
									"begin": 3427,
									"end": 3434,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3418,
									"end": 3424,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3407,
									"end": 3416,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 3403,
									"end": 3425,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3371,
									"end": 3435,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 3371,
									"end": 3435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3371,
									"end": 3435,
									"name": "tag",
									"source": 13,
									"value": "116"
								},
								{
									"begin": 3371,
									"end": 3435,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3361,
									"end": 3435,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3361,
									"end": 3435,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3317,
									"end": 3445,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3505,
									"end": 3507,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3494,
									"end": 3503,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3490,
									"end": 3508,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3484,
									"end": 3509,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 3536,
									"end": 3554,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3528,
									"end": 3534,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3525,
									"end": 3555,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 3522,
									"end": 3639,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3522,
									"end": 3639,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 3522,
									"end": 3639,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3558,
									"end": 3637,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 3558,
									"end": 3637,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 3558,
									"end": 3637,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3558,
									"end": 3637,
									"name": "tag",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 3558,
									"end": 3637,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3522,
									"end": 3639,
									"name": "tag",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 3522,
									"end": 3639,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3663,
									"end": 3736,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "119"
								},
								{
									"begin": 3728,
									"end": 3735,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3719,
									"end": 3725,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3708,
									"end": 3717,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 3704,
									"end": 3726,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3663,
									"end": 3736,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 3663,
									"end": 3736,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3663,
									"end": 3736,
									"name": "tag",
									"source": 13,
									"value": "119"
								},
								{
									"begin": 3663,
									"end": 3736,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3653,
									"end": 3736,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3653,
									"end": 3736,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3455,
									"end": 3746,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3075,
									"end": 3753,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3075,
									"end": 3753,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3075,
									"end": 3753,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3075,
									"end": 3753,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3075,
									"end": 3753,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3075,
									"end": 3753,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3759,
									"end": 4110,
									"name": "tag",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 3759,
									"end": 4110,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3829,
									"end": 3835,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3878,
									"end": 3880,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3866,
									"end": 3875,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3857,
									"end": 3864,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3853,
									"end": 3876,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 3849,
									"end": 3881,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 3846,
									"end": 3965,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3846,
									"end": 3965,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "121"
								},
								{
									"begin": 3846,
									"end": 3965,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3884,
									"end": 3963,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "122"
								},
								{
									"begin": 3884,
									"end": 3963,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 3884,
									"end": 3963,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3884,
									"end": 3963,
									"name": "tag",
									"source": 13,
									"value": "122"
								},
								{
									"begin": 3884,
									"end": 3963,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3846,
									"end": 3965,
									"name": "tag",
									"source": 13,
									"value": "121"
								},
								{
									"begin": 3846,
									"end": 3965,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4004,
									"end": 4005,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4029,
									"end": 4093,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 4085,
									"end": 4092,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4076,
									"end": 4082,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4065,
									"end": 4074,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4061,
									"end": 4083,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4029,
									"end": 4093,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 4029,
									"end": 4093,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4029,
									"end": 4093,
									"name": "tag",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 4029,
									"end": 4093,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4019,
									"end": 4093,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4019,
									"end": 4093,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3975,
									"end": 4103,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3759,
									"end": 4110,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3759,
									"end": 4110,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3759,
									"end": 4110,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3759,
									"end": 4110,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3759,
									"end": 4110,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4116,
									"end": 4234,
									"name": "tag",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 4116,
									"end": 4234,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4203,
									"end": 4227,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "125"
								},
								{
									"begin": 4221,
									"end": 4226,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4203,
									"end": 4227,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "58"
								},
								{
									"begin": 4203,
									"end": 4227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4203,
									"end": 4227,
									"name": "tag",
									"source": 13,
									"value": "125"
								},
								{
									"begin": 4203,
									"end": 4227,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4198,
									"end": 4201,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4191,
									"end": 4228,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 4116,
									"end": 4234,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4116,
									"end": 4234,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4116,
									"end": 4234,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4240,
									"end": 4462,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 4240,
									"end": 4462,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4333,
									"end": 4337,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4371,
									"end": 4373,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4360,
									"end": 4369,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4356,
									"end": 4374,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4348,
									"end": 4374,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4348,
									"end": 4374,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4384,
									"end": 4455,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "127"
								},
								{
									"begin": 4452,
									"end": 4453,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4441,
									"end": 4450,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4437,
									"end": 4454,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4428,
									"end": 4434,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4384,
									"end": 4455,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 4384,
									"end": 4455,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4384,
									"end": 4455,
									"name": "tag",
									"source": 13,
									"value": "127"
								},
								{
									"begin": 4384,
									"end": 4455,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4240,
									"end": 4462,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4240,
									"end": 4462,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4240,
									"end": 4462,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4240,
									"end": 4462,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4240,
									"end": 4462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4468,
									"end": 4566,
									"name": "tag",
									"source": 13,
									"value": "72"
								},
								{
									"begin": 4468,
									"end": 4566,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4519,
									"end": 4525,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4553,
									"end": 4558,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4547,
									"end": 4559,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4537,
									"end": 4559,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4537,
									"end": 4559,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4468,
									"end": 4566,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4468,
									"end": 4566,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4468,
									"end": 4566,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4468,
									"end": 4566,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4572,
									"end": 4719,
									"name": "tag",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 4572,
									"end": 4719,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4673,
									"end": 4684,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4710,
									"end": 4713,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4695,
									"end": 4713,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4695,
									"end": 4713,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4572,
									"end": 4719,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4572,
									"end": 4719,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4572,
									"end": 4719,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4572,
									"end": 4719,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4572,
									"end": 4719,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4725,
									"end": 5111,
									"name": "tag",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 4725,
									"end": 5111,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4829,
									"end": 4832,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4857,
									"end": 4895,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "131"
								},
								{
									"begin": 4889,
									"end": 4894,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4857,
									"end": 4895,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "72"
								},
								{
									"begin": 4857,
									"end": 4895,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4857,
									"end": 4895,
									"name": "tag",
									"source": 13,
									"value": "131"
								},
								{
									"begin": 4857,
									"end": 4895,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4911,
									"end": 4999,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "132"
								},
								{
									"begin": 4992,
									"end": 4998,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4987,
									"end": 4990,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4911,
									"end": 4999,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 4911,
									"end": 4999,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4911,
									"end": 4999,
									"name": "tag",
									"source": 13,
									"value": "132"
								},
								{
									"begin": 4911,
									"end": 4999,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4904,
									"end": 4999,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 4904,
									"end": 4999,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5008,
									"end": 5073,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 5066,
									"end": 5072,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5061,
									"end": 5064,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 5054,
									"end": 5058,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5047,
									"end": 5052,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 5043,
									"end": 5059,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5008,
									"end": 5073,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 5008,
									"end": 5073,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5008,
									"end": 5073,
									"name": "tag",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 5008,
									"end": 5073,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5098,
									"end": 5104,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5093,
									"end": 5096,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5089,
									"end": 5105,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5082,
									"end": 5105,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5082,
									"end": 5105,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4833,
									"end": 5111,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4725,
									"end": 5111,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4725,
									"end": 5111,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4725,
									"end": 5111,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4725,
									"end": 5111,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4725,
									"end": 5111,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5117,
									"end": 5388,
									"name": "tag",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 5117,
									"end": 5388,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5247,
									"end": 5250,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5269,
									"end": 5362,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "135"
								},
								{
									"begin": 5358,
									"end": 5361,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5349,
									"end": 5355,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5269,
									"end": 5362,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 5269,
									"end": 5362,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5269,
									"end": 5362,
									"name": "tag",
									"source": 13,
									"value": "135"
								},
								{
									"begin": 5269,
									"end": 5362,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5262,
									"end": 5362,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5262,
									"end": 5362,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5379,
									"end": 5382,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5372,
									"end": 5382,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5372,
									"end": 5382,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5117,
									"end": 5388,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 5117,
									"end": 5388,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5117,
									"end": 5388,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5117,
									"end": 5388,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5117,
									"end": 5388,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1116,
									"end": 2310,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1116,
									"end": 2310,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1116,
									"end": 2310,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 1116,
									"end": 2310,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1116,
									"end": 2310,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1116,
									"end": 2310,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1116,
									"end": 2310,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1116,
									"end": 2310,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1116,
									"end": 2310,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1116,
									"end": 2310,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "511"
								},
								{
									"begin": 1116,
									"end": 2310,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1116,
									"end": 2310,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1116,
									"end": 2310,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ee11b61399bf39b9f1dc47334d906085f524077ac71c7f35381949991dcae91964736f6c634300081a0033",
									".code": [
										{
											"begin": 1116,
											"end": 2310,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1116,
											"end": 2310,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 2310,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2649,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2649,
											"end": 2660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1116,
											"end": 2310,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2323,
											"end": 2406,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2323,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 2381,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2381,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2381,
											"end": 2398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2381,
											"end": 2398,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2381,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2371,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2399,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 2371,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2323,
											"end": 2406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2023,
											"end": 2161,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2023,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2090,
											"end": 2097,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2124,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 2124,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2124,
											"end": 2136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2124,
											"end": 2136,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 2124,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2152,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2116,
											"end": 2152,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2152,
											"name": "PUSH",
											"source": 4,
											"value": "5C60DA1B"
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2116,
											"end": 2154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2109,
											"end": 2154,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2109,
											"end": 2154,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2023,
											"end": 2161,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2023,
											"end": 2161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 949,
											"end": 1844,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 949,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1287,
											"end": 1301,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1284,
											"end": 1285,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1281,
											"end": 1282,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1268,
											"end": 1302,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1502,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1499,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1496,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1479,
											"end": 1480,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1477,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1456,
											"end": 1461,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1443,
											"end": 1503,
											"name": "DELEGATECALL",
											"source": 3
										},
										{
											"begin": 1577,
											"end": 1593,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1574,
											"end": 1575,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1571,
											"end": 1572,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1594,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1621,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1687,
											"end": 1688,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1813,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1794,
											"end": 1795,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1787,
											"end": 1814,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1717,
											"end": 1733,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1715,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1707,
											"end": 1734,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2215,
											"end": 2308,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2215,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2275,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2294,
											"end": 2301,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "511"
										},
										{
											"begin": 2287,
											"end": 2301,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2301,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2308,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 839,
											"name": "tag",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 696,
											"end": 839,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 753,
											"end": 758,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 784,
											"end": 790,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 778,
											"end": 791,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 769,
											"end": 791,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 769,
											"end": 791,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 800,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 827,
											"end": 832,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 800,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 800,
											"end": 833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 800,
											"end": 833,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 800,
											"end": 833,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 696,
											"end": 839,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 696,
											"end": 839,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 696,
											"end": 839,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 839,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 845,
											"end": 1196,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 845,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 915,
											"end": 921,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 964,
											"end": 966,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 952,
											"end": 961,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 943,
											"end": 950,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 939,
											"end": 962,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 935,
											"end": 967,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 932,
											"end": 1051,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 932,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 932,
											"end": 1051,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 970,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 970,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 970,
											"end": 1049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 970,
											"end": 1049,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 970,
											"end": 1049,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 932,
											"end": 1051,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 932,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1090,
											"end": 1091,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1115,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 1171,
											"end": 1178,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1162,
											"end": 1168,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1151,
											"end": 1160,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1147,
											"end": 1169,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1115,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 1115,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1115,
											"end": 1179,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 1115,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1105,
											"end": 1179,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1105,
											"end": 1179,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1061,
											"end": 1189,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 845,
											"end": 1196,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 845,
											"end": 1196,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 845,
											"end": 1196,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 845,
											"end": 1196,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 845,
											"end": 1196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
								"@openzeppelin/contracts/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"BEACON/logicBeaconBox.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}. The beacon address can only be set once during construction, and cannot be changed afterwards. It is stored in an immutable variable to avoid unnecessary storage reads, and also in the beacon storage slot specified by https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] so that it can be accessed externally. CAUTION: Since the beacon address can never be changed, you must ensure that you either control the beacon, or trust the beacon to not upgrade the implementation maliciously. IMPORTANT: Do not use the implementation logic to modify the beacon storage slot. Doing so would leave the proxy in an inconsistent state where the beacon storage slot does not match the beacon address.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"events\":{\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the proxy with `beacon`. If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: - `beacon` must be a contract with the interface {IBeacon}. - If `data` is empty, `msg.value` must be zero.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":\"BeaconProxy\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0xb719fe6bd47177169ae56e3a6300ca21cc966c649412a1d1156f02862e81beac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5207f4c145e0504ee8c81088b0eadbf9500c31ecbf26c46443f1f5076cafbf4\",\"dweb:/ipfs/QmevxdJoPzBHtcRtEQ9wtkSqhfYvqD4S4BmfEFxDrfYk3G\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol": {
				"UpgradeableBeacon": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "BeaconInvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their implementation contract, which is where they will delegate all function calls. An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.",
						"errors": {
							"BeaconInvalidImplementation(address)": [
								{
									"details": "The `implementation` of the beacon is invalid."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Upgraded(address)": {
								"details": "Emitted when the implementation returned by the beacon is changed."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Sets the address of the initial implementation, and the initial owner who can upgrade the beacon."
							},
							"implementation()": {
								"details": "Returns the current implementation address."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeTo(address)": {
								"details": "Upgrades the beacon to a new implementation. Emits an {Upgraded} event. Requirements: - msg.sender must be the owner of the contract. - `newImplementation` must be a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":555:2218  contract UpgradeableBeacon is IBeacon, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":1059:1192  constructor(address implementation_, address initialOwner) Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":1126:1138  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":1150:1185  _setImplementation(implementation_) */\n  tag_13\n    /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":1169:1184  implementation_ */\n  dup3\n    /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":1150:1168  _setImplementation */\n  shl(0x20, tag_14)\n    /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":1150:1185  _setImplementation(implementation_) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":1059:1192  constructor(address implementation_, address initialOwner) Ownable(initialOwner) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":555:2218  contract UpgradeableBeacon is IBeacon, Ownable {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":1932:2216  function _setImplementation(address newImplementation) private {... */\ntag_14:\n    /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":2042:2043  0 */\n  0x00\n    /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":2009:2026  newImplementation */\n  dup2\n    /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":2009:2038  newImplementation.code.length */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  extcodesize\n    /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":2009:2043  newImplementation.code.length == 0 */\n  sub\n    /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":2005:2123  if (newImplementation.code.length == 0) {... */\n  tag_18\n  jumpi\n    /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":2094:2111  newImplementation */\n  dup1\n    /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":2066:2112  BeaconInvalidImplementation(newImplementation) */\n  mload(0x40)\n  0x847ac56400000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":2005:2123  if (newImplementation.code.length == 0) {... */\ntag_18:\n    /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":2150:2167  newImplementation */\n  dup1\n    /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":2132:2147  _implementation */\n  0x01\n  0x00\n    /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":2132:2167  _implementation = newImplementation */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":2191:2208  newImplementation */\n  dup1\n    /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":2182:2209  Upgraded(newImplementation) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log2\n    /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":1932:2216  function _setImplementation(address newImplementation) private {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_21:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_23:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_24:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_34\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_23\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_25:\n    /* \"#utility.yul\":641:665   */\n  tag_36\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_24\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_37:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_26:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_39\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_25\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_42\n  tag_21\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":949:1068   */\ntag_41:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_43\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_26\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_44\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_26\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1476   */\ntag_27:\n    /* \"#utility.yul\":1445:1469   */\n  tag_46\n    /* \"#utility.yul\":1463:1468   */\n  dup2\n    /* \"#utility.yul\":1445:1469   */\n  tag_24\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1440:1443   */\n  dup3\n    /* \"#utility.yul\":1433:1470   */\n  mstore\n    /* \"#utility.yul\":1358:1476   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1482:1704   */\ntag_9:\n    /* \"#utility.yul\":1575:1579   */\n  0x00\n    /* \"#utility.yul\":1613:1615   */\n  0x20\n    /* \"#utility.yul\":1602:1611   */\n  dup3\n    /* \"#utility.yul\":1598:1616   */\n  add\n    /* \"#utility.yul\":1590:1616   */\n  swap1\n  pop\n    /* \"#utility.yul\":1626:1697   */\n  tag_48\n    /* \"#utility.yul\":1694:1695   */\n  0x00\n    /* \"#utility.yul\":1683:1692   */\n  dup4\n    /* \"#utility.yul\":1679:1696   */\n  add\n    /* \"#utility.yul\":1670:1676   */\n  dup5\n    /* \"#utility.yul\":1626:1697   */\n  tag_27\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1482:1704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":555:2218  contract UpgradeableBeacon is IBeacon, Ownable {... */\ntag_15:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":555:2218  contract UpgradeableBeacon is IBeacon, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3659cfe6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5c60da1b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":1632:1757  function upgradeTo(address newImplementation) public virtual onlyOwner {... */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      stop\n        /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":1270:1373  function implementation() public view virtual returns (address) {... */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_6:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_7:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_22:\n      tag_23\n      jump\t// in\n    tag_21:\n      stop\n        /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":1632:1757  function upgradeTo(address newImplementation) public virtual onlyOwner {... */\n    tag_11:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_25\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_26\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_25:\n        /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":1713:1750  _setImplementation(newImplementation) */\n      tag_28\n        /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":1732:1749  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":1713:1731  _setImplementation */\n      tag_29\n        /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":1713:1750  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_28:\n        /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":1632:1757  function upgradeTo(address newImplementation) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":1270:1373  function implementation() public view virtual returns (address) {... */\n    tag_13:\n        /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":1325:1332  address */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":1351:1366  _implementation */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":1344:1366  return _implementation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":1270:1373  function implementation() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_32\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_26\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_32:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_34\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_35\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_34:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_19:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_38\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_26\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_40\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_35\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_44\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_46\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_19\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_46:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_47\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_48\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_49\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":1932:2216  function _setImplementation(address newImplementation) private {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":2042:2043  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":2009:2026  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":2009:2038  newImplementation.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":2009:2043  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":2005:2123  if (newImplementation.code.length == 0) {... */\n      tag_51\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":2094:2111  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":2066:2112  BeaconInvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x847ac56400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":2005:2123  if (newImplementation.code.length == 0) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":2150:2167  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":2132:2147  _implementation */\n      0x01\n      0x00\n        /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":2132:2167  _implementation = newImplementation */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":2191:2208  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":2182:2209  Upgraded(newImplementation) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":1932:2216  function _setImplementation(address newImplementation) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_56:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_58:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_59:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_69\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_58\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_60:\n        /* \"#utility.yul\":641:665   */\n      tag_71\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_59\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_72\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_72:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_61:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_74\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_60\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_10:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_76\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_77\n      tag_56\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":917:1036   */\n    tag_76:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_78\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_61\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1294   */\n    tag_62:\n        /* \"#utility.yul\":1263:1287   */\n      tag_80\n        /* \"#utility.yul\":1281:1286   */\n      dup2\n        /* \"#utility.yul\":1263:1287   */\n      tag_59\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":1258:1261   */\n      dup3\n        /* \"#utility.yul\":1251:1288   */\n      mstore\n        /* \"#utility.yul\":1176:1294   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1300:1522   */\n    tag_15:\n        /* \"#utility.yul\":1393:1397   */\n      0x00\n        /* \"#utility.yul\":1431:1433   */\n      0x20\n        /* \"#utility.yul\":1420:1429   */\n      dup3\n        /* \"#utility.yul\":1416:1434   */\n      add\n        /* \"#utility.yul\":1408:1434   */\n      swap1\n      pop\n        /* \"#utility.yul\":1444:1515   */\n      tag_82\n        /* \"#utility.yul\":1512:1513   */\n      0x00\n        /* \"#utility.yul\":1501:1510   */\n      dup4\n        /* \"#utility.yul\":1497:1514   */\n      add\n        /* \"#utility.yul\":1488:1494   */\n      dup5\n        /* \"#utility.yul\":1444:1515   */\n      tag_62\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":1300:1522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200b70d06e50b6fa06644fdd4ae612447f3daebeeb2d0659d9319447d27c2e967064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_605": {
									"entryPoint": null,
									"id": 605,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setImplementation_653": {
									"entryPoint": 393,
									"id": 653,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 200,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 618,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1707:13",
										"nodeType": "YulBlock",
										"src": "0:1707:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:81:13",
													"nodeType": "YulBlock",
													"src": "379:81:13",
													"statements": [
														{
															"nativeSrc": "389:65:13",
															"nodeType": "YulAssignment",
															"src": "389:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:13",
																		"nodeType": "YulLiteral",
																		"src": "411:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:13"
																},
																"nativeSrc": "400:54:13",
																"nodeType": "YulFunctionCall",
																"src": "400:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:126:13"
											},
											{
												"body": {
													"nativeSrc": "511:51:13",
													"nodeType": "YulBlock",
													"src": "511:51:13",
													"statements": [
														{
															"nativeSrc": "521:35:13",
															"nodeType": "YulAssignment",
															"src": "521:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:13"
																},
																"nativeSrc": "532:24:13",
																"nodeType": "YulFunctionCall",
																"src": "532:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:13",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:13",
														"nodeType": "YulTypedName",
														"src": "503:7:13",
														"type": ""
													}
												],
												"src": "466:96:13"
											},
											{
												"body": {
													"nativeSrc": "611:79:13",
													"nodeType": "YulBlock",
													"src": "611:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:13",
																"nodeType": "YulBlock",
																"src": "668:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:13",
																					"nodeType": "YulLiteral",
																					"src": "677:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:13",
																					"nodeType": "YulLiteral",
																					"src": "680:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:13"
																			},
																			"nativeSrc": "670:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:13"
																		},
																		"nativeSrc": "670:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:13"
																				},
																				"nativeSrc": "641:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:13"
																		},
																		"nativeSrc": "631:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:13"
																},
																"nativeSrc": "624:43:13",
																"nodeType": "YulFunctionCall",
																"src": "624:43:13"
															},
															"nativeSrc": "621:63:13",
															"nodeType": "YulIf",
															"src": "621:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:13",
														"nodeType": "YulTypedName",
														"src": "604:5:13",
														"type": ""
													}
												],
												"src": "568:122:13"
											},
											{
												"body": {
													"nativeSrc": "759:80:13",
													"nodeType": "YulBlock",
													"src": "759:80:13",
													"statements": [
														{
															"nativeSrc": "769:22:13",
															"nodeType": "YulAssignment",
															"src": "769:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:13"
																},
																"nativeSrc": "778:13:13",
																"nodeType": "YulFunctionCall",
																"src": "778:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:13"
																},
																"nativeSrc": "800:33:13",
																"nodeType": "YulFunctionCall",
																"src": "800:33:13"
															},
															"nativeSrc": "800:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:13"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:13",
														"nodeType": "YulTypedName",
														"src": "737:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:13",
														"nodeType": "YulTypedName",
														"src": "745:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:13",
														"nodeType": "YulTypedName",
														"src": "753:5:13",
														"type": ""
													}
												],
												"src": "696:143:13"
											},
											{
												"body": {
													"nativeSrc": "939:413:13",
													"nodeType": "YulBlock",
													"src": "939:413:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:13",
																"nodeType": "YulBlock",
																"src": "985:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:13"
																			},
																			"nativeSrc": "987:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:13"
																		},
																		"nativeSrc": "987:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:13"
																		},
																		"nativeSrc": "956:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:13",
																		"nodeType": "YulLiteral",
																		"src": "981:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:13"
																},
																"nativeSrc": "952:32:13",
																"nodeType": "YulFunctionCall",
																"src": "952:32:13"
															},
															"nativeSrc": "949:119:13",
															"nodeType": "YulIf",
															"src": "949:119:13"
														},
														{
															"nativeSrc": "1078:128:13",
															"nodeType": "YulBlock",
															"src": "1078:128:13",
															"statements": [
																{
																	"nativeSrc": "1093:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:13"
																				},
																				"nativeSrc": "1164:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:13"
																		},
																		"nativeSrc": "1132:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:13",
															"nodeType": "YulBlock",
															"src": "1216:129:13",
															"statements": [
																{
																	"nativeSrc": "1231:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:13"
																				},
																				"nativeSrc": "1303:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:13"
																		},
																		"nativeSrc": "1271:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:13",
														"nodeType": "YulTypedName",
														"src": "901:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:13",
														"nodeType": "YulTypedName",
														"src": "912:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:13",
														"nodeType": "YulTypedName",
														"src": "924:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:13",
														"nodeType": "YulTypedName",
														"src": "932:6:13",
														"type": ""
													}
												],
												"src": "845:507:13"
											},
											{
												"body": {
													"nativeSrc": "1423:53:13",
													"nodeType": "YulBlock",
													"src": "1423:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1440:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1440:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1463:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1463:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1445:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "1445:17:13"
																		},
																		"nativeSrc": "1445:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1445:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1433:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:13"
																},
																"nativeSrc": "1433:37:13",
																"nodeType": "YulFunctionCall",
																"src": "1433:37:13"
															},
															"nativeSrc": "1433:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "1433:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1358:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1411:5:13",
														"nodeType": "YulTypedName",
														"src": "1411:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1418:3:13",
														"nodeType": "YulTypedName",
														"src": "1418:3:13",
														"type": ""
													}
												],
												"src": "1358:118:13"
											},
											{
												"body": {
													"nativeSrc": "1580:124:13",
													"nodeType": "YulBlock",
													"src": "1580:124:13",
													"statements": [
														{
															"nativeSrc": "1590:26:13",
															"nodeType": "YulAssignment",
															"src": "1590:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1602:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1602:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1613:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1613:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1598:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1598:3:13"
																},
																"nativeSrc": "1598:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1598:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1590:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1590:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1670:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1670:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1683:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1694:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1694:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1679:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:13"
																		},
																		"nativeSrc": "1679:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1679:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1626:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "1626:43:13"
																},
																"nativeSrc": "1626:71:13",
																"nodeType": "YulFunctionCall",
																"src": "1626:71:13"
															},
															"nativeSrc": "1626:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "1626:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1482:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1552:9:13",
														"nodeType": "YulTypedName",
														"src": "1552:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1564:6:13",
														"nodeType": "YulTypedName",
														"src": "1564:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1575:4:13",
														"nodeType": "YulTypedName",
														"src": "1575:4:13",
														"type": ""
													}
												],
												"src": "1482:222:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610823380380610823833981810160405281019061003191906102c8565b805f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100999190610315565b60405180910390fd5b6100b1816100c860201b60201c565b506100c18261018960201b60201c565b505061032e565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f8173ffffffffffffffffffffffffffffffffffffffff163b036101e457806040517f847ac5640000000000000000000000000000000000000000000000000000000081526004016101db9190610315565b60405180910390fd5b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102978261026e565b9050919050565b6102a78161028d565b81146102b1575f80fd5b50565b5f815190506102c28161029e565b92915050565b5f80604083850312156102de576102dd61026a565b5b5f6102eb858286016102b4565b92505060206102fc858286016102b4565b9150509250929050565b61030f8161028d565b82525050565b5f6020820190506103285f830184610306565b92915050565b6104e88061033b5f395ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c80633659cfe6146100595780635c60da1b14610075578063715018a6146100935780638da5cb5b1461009d578063f2fde38b146100bb575b5f80fd5b610073600480360381019061006e919061045f565b6100d7565b005b61007d6100eb565b60405161008a9190610499565b60405180910390f35b61009b610113565b005b6100a5610126565b6040516100b29190610499565b60405180910390f35b6100d560048036038101906100d0919061045f565b61014d565b005b6100df6101d1565b6100e881610258565b50565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61011b6101d1565b6101245f610339565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101556101d1565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101c5575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101bc9190610499565b60405180910390fd5b6101ce81610339565b50565b6101d96103fa565b73ffffffffffffffffffffffffffffffffffffffff166101f7610126565b73ffffffffffffffffffffffffffffffffffffffff16146102565761021a6103fa565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161024d9190610499565b60405180910390fd5b565b5f8173ffffffffffffffffffffffffffffffffffffffff163b036102b357806040517f847ac5640000000000000000000000000000000000000000000000000000000081526004016102aa9190610499565b60405180910390fd5b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61042e82610405565b9050919050565b61043e81610424565b8114610448575f80fd5b50565b5f8135905061045981610435565b92915050565b5f6020828403121561047457610473610401565b5b5f6104818482850161044b565b91505092915050565b61049381610424565b82525050565b5f6020820190506104ac5f83018461048a565b9291505056fea26469706673582212200b70d06e50b6fa06644fdd4ae612447f3daebeeb2d0659d9319447d27c2e967064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x823 CODESIZE SUB DUP1 PUSH2 0x823 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x2C8 JUMP JUMPDEST DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x315 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0xC8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xC1 DUP3 PUSH2 0x189 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x32E JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x1E4 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x847AC56400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x315 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x297 DUP3 PUSH2 0x26E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A7 DUP2 PUSH2 0x28D JUMP JUMPDEST DUP2 EQ PUSH2 0x2B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2C2 DUP2 PUSH2 0x29E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2DE JUMPI PUSH2 0x2DD PUSH2 0x26A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2EB DUP6 DUP3 DUP7 ADD PUSH2 0x2B4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2FC DUP6 DUP3 DUP7 ADD PUSH2 0x2B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x30F DUP2 PUSH2 0x28D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x328 PUSH0 DUP4 ADD DUP5 PUSH2 0x306 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4E8 DUP1 PUSH2 0x33B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xBB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x45F JUMP JUMPDEST PUSH2 0xD7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7D PUSH2 0xEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8A SWAP2 SWAP1 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9B PUSH2 0x113 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA5 PUSH2 0x126 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0x45F JUMP JUMPDEST PUSH2 0x14D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDF PUSH2 0x1D1 JUMP JUMPDEST PUSH2 0xE8 DUP2 PUSH2 0x258 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x11B PUSH2 0x1D1 JUMP JUMPDEST PUSH2 0x124 PUSH0 PUSH2 0x339 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x1D1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CE DUP2 PUSH2 0x339 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x3FA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F7 PUSH2 0x126 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x256 JUMPI PUSH2 0x21A PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x2B3 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x847AC56400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x42E DUP3 PUSH2 0x405 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x43E DUP2 PUSH2 0x424 JUMP JUMPDEST DUP2 EQ PUSH2 0x448 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x459 DUP2 PUSH2 0x435 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x474 JUMPI PUSH2 0x473 PUSH2 0x401 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x481 DUP5 DUP3 DUP6 ADD PUSH2 0x44B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x493 DUP2 PUSH2 0x424 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4AC PUSH0 DUP4 ADD DUP5 PUSH2 0x48A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND PUSH17 0xD06E50B6FA06644FDD4AE612447F3DAEBE 0xEB 0x2D MOD MSIZE 0xD9 BALANCE SWAP5 SELFBALANCE 0xD2 PUSH29 0x2E967064736F6C634300081A0033000000000000000000000000000000 ",
							"sourceMap": "555:1663:6:-:0;;;1059:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1126:12;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1150:35:6::1;1169:15;1150:18;;;:35;;:::i;:::-;1059:133:::0;;555:1663;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1932:284:6:-;2042:1;2009:17;:29;;;:34;2005:118;;2094:17;2066:46;;;;;;;;;;;:::i;:::-;;;;;;;;2005:118;2150:17;2132:15;;:35;;;;;;;;;;;;;;;;;;2191:17;2182:27;;;;;;;;;;;;1932:284;:::o;88:117:13:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:118::-;1445:24;1463:5;1445:24;:::i;:::-;1440:3;1433:37;1358:118;;:::o;1482:222::-;1575:4;1613:2;1602:9;1598:18;1590:26;;1626:71;1694:1;1683:9;1679:17;1670:6;1626:71;:::i;:::-;1482:222;;;;:::o;555:1663:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 465,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1179": {
									"entryPoint": 1018,
									"id": 1179,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setImplementation_653": {
									"entryPoint": 600,
									"id": 653,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 825,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@implementation_614": {
									"entryPoint": 235,
									"id": 614,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 294,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 275,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 333,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@upgradeTo_627": {
									"entryPoint": 215,
									"id": 627,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1177,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1025,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1525:13",
										"nodeType": "YulBlock",
										"src": "0:1525:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:81:13",
													"nodeType": "YulBlock",
													"src": "379:81:13",
													"statements": [
														{
															"nativeSrc": "389:65:13",
															"nodeType": "YulAssignment",
															"src": "389:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:13",
																		"nodeType": "YulLiteral",
																		"src": "411:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:13"
																},
																"nativeSrc": "400:54:13",
																"nodeType": "YulFunctionCall",
																"src": "400:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:126:13"
											},
											{
												"body": {
													"nativeSrc": "511:51:13",
													"nodeType": "YulBlock",
													"src": "511:51:13",
													"statements": [
														{
															"nativeSrc": "521:35:13",
															"nodeType": "YulAssignment",
															"src": "521:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:13"
																},
																"nativeSrc": "532:24:13",
																"nodeType": "YulFunctionCall",
																"src": "532:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:13",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:13",
														"nodeType": "YulTypedName",
														"src": "503:7:13",
														"type": ""
													}
												],
												"src": "466:96:13"
											},
											{
												"body": {
													"nativeSrc": "611:79:13",
													"nodeType": "YulBlock",
													"src": "611:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:13",
																"nodeType": "YulBlock",
																"src": "668:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:13",
																					"nodeType": "YulLiteral",
																					"src": "677:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:13",
																					"nodeType": "YulLiteral",
																					"src": "680:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:13"
																			},
																			"nativeSrc": "670:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:13"
																		},
																		"nativeSrc": "670:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:13"
																				},
																				"nativeSrc": "641:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:13"
																		},
																		"nativeSrc": "631:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:13"
																},
																"nativeSrc": "624:43:13",
																"nodeType": "YulFunctionCall",
																"src": "624:43:13"
															},
															"nativeSrc": "621:63:13",
															"nodeType": "YulIf",
															"src": "621:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:13",
														"nodeType": "YulTypedName",
														"src": "604:5:13",
														"type": ""
													}
												],
												"src": "568:122:13"
											},
											{
												"body": {
													"nativeSrc": "748:87:13",
													"nodeType": "YulBlock",
													"src": "748:87:13",
													"statements": [
														{
															"nativeSrc": "758:29:13",
															"nodeType": "YulAssignment",
															"src": "758:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:13"
																},
																"nativeSrc": "767:20:13",
																"nodeType": "YulFunctionCall",
																"src": "767:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:13"
																},
																"nativeSrc": "796:33:13",
																"nodeType": "YulFunctionCall",
																"src": "796:33:13"
															},
															"nativeSrc": "796:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:13",
														"nodeType": "YulTypedName",
														"src": "726:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:13",
														"nodeType": "YulTypedName",
														"src": "734:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:13",
														"nodeType": "YulTypedName",
														"src": "742:5:13",
														"type": ""
													}
												],
												"src": "696:139:13"
											},
											{
												"body": {
													"nativeSrc": "907:263:13",
													"nodeType": "YulBlock",
													"src": "907:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:13",
																"nodeType": "YulBlock",
																"src": "953:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:13"
																			},
																			"nativeSrc": "955:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:13"
																		},
																		"nativeSrc": "955:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:13"
																		},
																		"nativeSrc": "924:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:13",
																		"nodeType": "YulLiteral",
																		"src": "949:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:13"
																},
																"nativeSrc": "920:32:13",
																"nodeType": "YulFunctionCall",
																"src": "920:32:13"
															},
															"nativeSrc": "917:119:13",
															"nodeType": "YulIf",
															"src": "917:119:13"
														},
														{
															"nativeSrc": "1046:117:13",
															"nodeType": "YulBlock",
															"src": "1046:117:13",
															"statements": [
																{
																	"nativeSrc": "1061:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:13",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:13"
																				},
																				"nativeSrc": "1121:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:13"
																		},
																		"nativeSrc": "1100:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:13",
														"nodeType": "YulTypedName",
														"src": "877:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:13",
														"nodeType": "YulTypedName",
														"src": "888:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:13",
														"nodeType": "YulTypedName",
														"src": "900:6:13",
														"type": ""
													}
												],
												"src": "841:329:13"
											},
											{
												"body": {
													"nativeSrc": "1241:53:13",
													"nodeType": "YulBlock",
													"src": "1241:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1258:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1258:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1281:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1281:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1263:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "1263:17:13"
																		},
																		"nativeSrc": "1263:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1263:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1251:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1251:6:13"
																},
																"nativeSrc": "1251:37:13",
																"nodeType": "YulFunctionCall",
																"src": "1251:37:13"
															},
															"nativeSrc": "1251:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "1251:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1176:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1229:5:13",
														"nodeType": "YulTypedName",
														"src": "1229:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1236:3:13",
														"nodeType": "YulTypedName",
														"src": "1236:3:13",
														"type": ""
													}
												],
												"src": "1176:118:13"
											},
											{
												"body": {
													"nativeSrc": "1398:124:13",
													"nodeType": "YulBlock",
													"src": "1398:124:13",
													"statements": [
														{
															"nativeSrc": "1408:26:13",
															"nodeType": "YulAssignment",
															"src": "1408:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1420:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1420:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1431:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1431:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1416:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1416:3:13"
																},
																"nativeSrc": "1416:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1416:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1408:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1408:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1488:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1488:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1501:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1501:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1512:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1512:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1497:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:13"
																		},
																		"nativeSrc": "1497:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1444:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "1444:43:13"
																},
																"nativeSrc": "1444:71:13",
																"nodeType": "YulFunctionCall",
																"src": "1444:71:13"
															},
															"nativeSrc": "1444:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "1444:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1300:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1370:9:13",
														"nodeType": "YulTypedName",
														"src": "1370:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1382:6:13",
														"nodeType": "YulTypedName",
														"src": "1382:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1393:4:13",
														"nodeType": "YulTypedName",
														"src": "1393:4:13",
														"type": ""
													}
												],
												"src": "1300:222:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610055575f3560e01c80633659cfe6146100595780635c60da1b14610075578063715018a6146100935780638da5cb5b1461009d578063f2fde38b146100bb575b5f80fd5b610073600480360381019061006e919061045f565b6100d7565b005b61007d6100eb565b60405161008a9190610499565b60405180910390f35b61009b610113565b005b6100a5610126565b6040516100b29190610499565b60405180910390f35b6100d560048036038101906100d0919061045f565b61014d565b005b6100df6101d1565b6100e881610258565b50565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61011b6101d1565b6101245f610339565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101556101d1565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101c5575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101bc9190610499565b60405180910390fd5b6101ce81610339565b50565b6101d96103fa565b73ffffffffffffffffffffffffffffffffffffffff166101f7610126565b73ffffffffffffffffffffffffffffffffffffffff16146102565761021a6103fa565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161024d9190610499565b60405180910390fd5b565b5f8173ffffffffffffffffffffffffffffffffffffffff163b036102b357806040517f847ac5640000000000000000000000000000000000000000000000000000000081526004016102aa9190610499565b60405180910390fd5b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61042e82610405565b9050919050565b61043e81610424565b8114610448575f80fd5b50565b5f8135905061045981610435565b92915050565b5f6020828403121561047457610473610401565b5b5f6104818482850161044b565b91505092915050565b61049381610424565b82525050565b5f6020820190506104ac5f83018461048a565b9291505056fea26469706673582212200b70d06e50b6fa06644fdd4ae612447f3daebeeb2d0659d9319447d27c2e967064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xBB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x45F JUMP JUMPDEST PUSH2 0xD7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7D PUSH2 0xEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8A SWAP2 SWAP1 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9B PUSH2 0x113 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA5 PUSH2 0x126 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0x45F JUMP JUMPDEST PUSH2 0x14D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDF PUSH2 0x1D1 JUMP JUMPDEST PUSH2 0xE8 DUP2 PUSH2 0x258 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x11B PUSH2 0x1D1 JUMP JUMPDEST PUSH2 0x124 PUSH0 PUSH2 0x339 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x1D1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CE DUP2 PUSH2 0x339 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x3FA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F7 PUSH2 0x126 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x256 JUMPI PUSH2 0x21A PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x2B3 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x847AC56400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x42E DUP3 PUSH2 0x405 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x43E DUP2 PUSH2 0x424 JUMP JUMPDEST DUP2 EQ PUSH2 0x448 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x459 DUP2 PUSH2 0x435 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x474 JUMPI PUSH2 0x473 PUSH2 0x401 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x481 DUP5 DUP3 DUP6 ADD PUSH2 0x44B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x493 DUP2 PUSH2 0x424 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4AC PUSH0 DUP4 ADD DUP5 PUSH2 0x48A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND PUSH17 0xD06E50B6FA06644FDD4AE612447F3DAEBE 0xEB 0x2D MOD MSIZE 0xD9 BALANCE SWAP5 SELFBALANCE 0xD2 PUSH29 0x2E967064736F6C634300081A0033000000000000000000000000000000 ",
							"sourceMap": "555:1663:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1632:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1270:103;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1632:125:6;1531:13:0;:11;:13::i;:::-;1713:37:6::1;1732:17;1713:18;:37::i;:::-;1632:125:::0;:::o;1270:103::-;1325:7;1351:15;;;;;;;;;;;1344:22;;1270:103;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2543:215::-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;1932:284:6:-;2042:1;2009:17;:29;;;:34;2005:118;;2094:17;2066:46;;;;;;;;;;;:::i;:::-;;;;;;;;2005:118;2150:17;2132:15;;:35;;;;;;;;;;;;;;;;;;2191:17;2182:27;;;;;;;;;;;;1932:284;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:9:-;709:7;735:10;728:17;;656:96;:::o;88:117:13:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:118::-;1263:24;1281:5;1263:24;:::i;:::-;1258:3;1251:37;1176:118;;:::o;1300:222::-;1393:4;1431:2;1420:9;1416:18;1408:26;;1444:71;1512:1;1501:9;1497:17;1488:6;1444:71;:::i;:::-;1300:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "251200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"implementation()": "2515",
								"owner()": "2559",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"upgradeTo(address)": "infinite"
							},
							"internal": {
								"_setImplementation(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 555,
									"end": 2218,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 555,
									"end": 2218,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 555,
									"end": 2218,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1192,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1192,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1192,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1192,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1059,
									"end": 1192,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1192,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1059,
									"end": 1192,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1192,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1192,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1059,
									"end": 1192,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1192,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1192,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1059,
									"end": 1192,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1192,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1192,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1192,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1192,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1192,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1192,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1192,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1192,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1192,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1192,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1192,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1059,
									"end": 1192,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1192,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1192,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1192,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1192,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1059,
									"end": 1192,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1192,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1192,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1059,
									"end": 1192,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1192,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1059,
									"end": 1192,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1126,
									"end": 1138,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1150,
									"end": 1185,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1169,
									"end": 1184,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1150,
									"end": 1168,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1150,
									"end": 1168,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1150,
									"end": 1168,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1150,
									"end": 1185,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1150,
									"end": 1185,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1150,
									"end": 1185,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1150,
									"end": 1185,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1150,
									"end": 1185,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1192,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1192,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 555,
									"end": 2218,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 555,
									"end": 2218,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1932,
									"end": 2216,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1932,
									"end": 2216,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2042,
									"end": 2043,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2009,
									"end": 2026,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2009,
									"end": 2038,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2009,
									"end": 2038,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2009,
									"end": 2038,
									"name": "EXTCODESIZE",
									"source": 6
								},
								{
									"begin": 2009,
									"end": 2043,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2005,
									"end": 2123,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 2005,
									"end": 2123,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2094,
									"end": 2111,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2066,
									"end": 2112,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2066,
									"end": 2112,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2066,
									"end": 2112,
									"name": "PUSH",
									"source": 6,
									"value": "847AC56400000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2066,
									"end": 2112,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2066,
									"end": 2112,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2066,
									"end": 2112,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2066,
									"end": 2112,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2066,
									"end": 2112,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 2066,
									"end": 2112,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2066,
									"end": 2112,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2066,
									"end": 2112,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 2066,
									"end": 2112,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2066,
									"end": 2112,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 2066,
									"end": 2112,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2066,
									"end": 2112,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2066,
									"end": 2112,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2066,
									"end": 2112,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2066,
									"end": 2112,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2066,
									"end": 2112,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2066,
									"end": 2112,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2066,
									"end": 2112,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2005,
									"end": 2123,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 2005,
									"end": 2123,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2150,
									"end": 2167,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2132,
									"end": 2147,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2132,
									"end": 2147,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2132,
									"end": 2167,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 2132,
									"end": 2167,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 2132,
									"end": 2167,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2132,
									"end": 2167,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2132,
									"end": 2167,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2132,
									"end": 2167,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2132,
									"end": 2167,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2132,
									"end": 2167,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2132,
									"end": 2167,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2132,
									"end": 2167,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2132,
									"end": 2167,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2132,
									"end": 2167,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2132,
									"end": 2167,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2132,
									"end": 2167,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2132,
									"end": 2167,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2132,
									"end": 2167,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2132,
									"end": 2167,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2132,
									"end": 2167,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2191,
									"end": 2208,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2182,
									"end": 2209,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2182,
									"end": 2209,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2182,
									"end": 2209,
									"name": "PUSH",
									"source": 6,
									"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
								},
								{
									"begin": 2182,
									"end": 2209,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2182,
									"end": 2209,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2182,
									"end": 2209,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2182,
									"end": 2209,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2182,
									"end": 2209,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2182,
									"end": 2209,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2182,
									"end": 2209,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2182,
									"end": 2209,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2182,
									"end": 2209,
									"name": "LOG2",
									"source": 6
								},
								{
									"begin": 1932,
									"end": 2216,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1932,
									"end": 2216,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "tag",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 1463,
									"end": 1468,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1445,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "tag",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1440,
									"end": 1443,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1433,
									"end": 1470,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1358,
									"end": 1476,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "tag",
									"source": 13,
									"value": "9"
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1575,
									"end": 1579,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1613,
									"end": 1615,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1602,
									"end": 1611,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1598,
									"end": 1616,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1683,
									"end": 1692,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1679,
									"end": 1696,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1670,
									"end": 1676,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 1626,
									"end": 1697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "tag",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1482,
									"end": 1704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 555,
									"end": 2218,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 555,
									"end": 2218,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 555,
									"end": 2218,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 555,
									"end": 2218,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 555,
									"end": 2218,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 555,
									"end": 2218,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 2218,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 555,
									"end": 2218,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 2218,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200b70d06e50b6fa06644fdd4ae612447f3daebeeb2d0659d9319447d27c2e967064736f6c634300081a0033",
									".code": [
										{
											"begin": 555,
											"end": 2218,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "PUSH",
											"source": 6,
											"value": "3659CFE6"
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "PUSH",
											"source": 6,
											"value": "5C60DA1B"
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 555,
											"end": 2218,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1757,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1632,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1632,
											"end": 1757,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1632,
											"end": 1757,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1757,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1757,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1757,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1757,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1757,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1632,
											"end": 1757,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1757,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1632,
											"end": 1757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1757,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1632,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1632,
											"end": 1757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1757,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1632,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1757,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1373,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1270,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1270,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1270,
											"end": 1373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1373,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1270,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1373,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1270,
											"end": 1373,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1270,
											"end": 1373,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1373,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1270,
											"end": 1373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1373,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1270,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1373,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1270,
											"end": 1373,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1373,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1373,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1373,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1373,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1373,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1632,
											"end": 1757,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1632,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1713,
											"end": 1750,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1732,
											"end": 1749,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1713,
											"end": 1750,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1750,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1713,
											"end": 1750,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1757,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1373,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1270,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1325,
											"end": 1332,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1351,
											"end": 1366,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1351,
											"end": 1366,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1351,
											"end": 1366,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1351,
											"end": 1366,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1351,
											"end": 1366,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1351,
											"end": 1366,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1351,
											"end": 1366,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1351,
											"end": 1366,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1351,
											"end": 1366,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1351,
											"end": 1366,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1366,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1366,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1344,
											"end": 1366,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1373,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1932,
											"end": 2216,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1932,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2042,
											"end": 2043,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2009,
											"end": 2026,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2009,
											"end": 2038,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2009,
											"end": 2038,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2009,
											"end": 2038,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 2009,
											"end": 2043,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 2005,
											"end": 2123,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2094,
											"end": 2111,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2112,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2066,
											"end": 2112,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2112,
											"name": "PUSH",
											"source": 6,
											"value": "847AC56400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2066,
											"end": 2112,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2112,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2112,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2066,
											"end": 2112,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 2066,
											"end": 2112,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2112,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 2066,
											"end": 2112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2112,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 2066,
											"end": 2112,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2112,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2066,
											"end": 2112,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2112,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2112,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2112,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2112,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2112,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2005,
											"end": 2123,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 2005,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2150,
											"end": 2167,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2132,
											"end": 2167,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2132,
											"end": 2167,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2167,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2167,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2167,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2167,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2132,
											"end": 2167,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2167,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2167,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2167,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2167,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2167,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2132,
											"end": 2167,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2167,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2167,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2167,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2167,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2167,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2191,
											"end": 2208,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2209,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2182,
											"end": 2209,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2209,
											"name": "PUSH",
											"source": 6,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2182,
											"end": 2209,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2182,
											"end": 2209,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2209,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2182,
											"end": 2209,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2209,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2209,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2209,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2209,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 1932,
											"end": 2216,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1932,
											"end": 2216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 1281,
											"end": 1286,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 1263,
											"end": 1287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1258,
											"end": 1261,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1288,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1176,
											"end": 1294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "tag",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1393,
											"end": 1397,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1433,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1420,
											"end": 1429,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1416,
											"end": 1434,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 1512,
											"end": 1513,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1497,
											"end": 1514,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 1444,
											"end": 1515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1300,
											"end": 1522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
								"@openzeppelin/contracts/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"BEACON/logicBeaconBox.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"implementation()": "5c60da1b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"upgradeTo(address)": "3659cfe6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"BeaconInvalidImplementation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their implementation contract, which is where they will delegate all function calls. An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.\",\"errors\":{\"BeaconInvalidImplementation(address)\":[{\"details\":\"The `implementation` of the beacon is invalid.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the implementation returned by the beacon is changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Sets the address of the initial implementation, and the initial owner who can upgrade the beacon.\"},\"implementation()\":{\"details\":\"Returns the current implementation address.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"details\":\"Upgrades the beacon to a new implementation. Emits an {Upgraded} event. Requirements: - msg.sender must be the owner of the contract. - `newImplementation` must be a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":\"UpgradeableBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x5920bac7215d12961e23b207f6e81a1d64aa4935a4469abe95b64a96a3c3007b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34bb828c45c3a4ebf6c2c585971abf5089e61357a3818a2900c7e85b74a1299\",\"dweb:/ipfs/QmewGAzKsPXYfSjCKxuH1SekKxtdyzhdbdyxjF5gohLigt\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 579,
								"contract": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon",
								"label": "_implementation",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 BLOBBASEFEE DUP4 PUSH10 0x6988BC629D9EEFB813A7 OR 0x2A 0xCC BLOCKHASH OR MSTORE 0xBD 0xAE PUSH5 0x952801479B 0xEC 0xE8 0xCB 0xDE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 BLOBBASEFEE DUP4 PUSH10 0x6988BC629D9EEFB813A7 OR 0x2A 0xCC BLOCKHASH OR MSTORE 0xBD 0xAE PUSH5 0x952801479B 0xEC 0xE8 0xCB 0xDE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
									".code": [
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
								"@openzeppelin/contracts/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"BEACON/logicBeaconBox.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
								"@openzeppelin/contracts/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"BEACON/logicBeaconBox.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220dfa70b79dde3a68be008ad909eceb9714b0a021b843d5091dcc7df482d7070c364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220dfa70b79dde3a68be008ad909eceb9714b0a021b843d5091dcc7df482d7070c364736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xA7 SIGNEXTEND PUSH26 0xDDE3A68BE008AD909ECEB9714B0A021B843D5091DCC7DF482D70 PUSH17 0xC364736F6C634300081A00330000000000 ",
							"sourceMap": "1407:2774:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220dfa70b79dde3a68be008ad909eceb9714b0a021b843d5091dcc7df482d7070c364736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xA7 SIGNEXTEND PUSH26 0xDDE3A68BE008AD909ECEB9714B0A021B843D5091DCC7DF482D70 PUSH17 0xC364736F6C634300081A00330000000000 ",
							"sourceMap": "1407:2774:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getInt256Slot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dfa70b79dde3a68be008ad909eceb9714b0a021b843d5091dcc7df482d7070c364736f6c634300081a0033",
									".code": [
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
								"@openzeppelin/contracts/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"BEACON/logicBeaconBox.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"BEACON/logicBeaconBox.sol": {
				"BeaconBoxV1": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "cal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_x",
									"type": "uint256"
								}
							],
							"name": "getInitCalldata",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_x",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"BEACON/logicBeaconBox.sol\":607:1123  contract BeaconBoxV1 is Initializable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"BEACON/logicBeaconBox.sol\":607:1123  contract BeaconBoxV1 is Initializable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1d54036f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa87d942c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xb7c738f4\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xfe4b84df\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"BEACON/logicBeaconBox.sol\":972:1120  function getInitCalldata(uint _x) external  pure returns(bytes memory){... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n      pop\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      tag_13\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEACON/logicBeaconBox.sol\":803:882  function getCount() external view returns(uint){... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEACON/logicBeaconBox.sol\":890:964  function cal() external returns(uint){... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEACON/logicBeaconBox.sol\":716:794  function initialize(uint _x) public initializer {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_27:\n      tag_28\n      jump\t// in\n    tag_26:\n      stop\n        /* \"BEACON/logicBeaconBox.sol\":972:1120  function getInitCalldata(uint _x) external  pure returns(bytes memory){... */\n    tag_13:\n        /* \"BEACON/logicBeaconBox.sol\":1029:1041  bytes memory */\n      0x60\n        /* \"BEACON/logicBeaconBox.sol\":1083:1107  this.initialize.selector */\n      shl(0xe0, 0xfe4b84df)\n        /* \"BEACON/logicBeaconBox.sol\":1109:1111  _x */\n      dup3\n        /* \"BEACON/logicBeaconBox.sol\":1060:1112  abi.encodeWithSelector(this.initialize.selector, _x) */\n      add(0x24, mload(0x40))\n      tag_30\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"BEACON/logicBeaconBox.sol\":1053:1112  return abi.encodeWithSelector(this.initialize.selector, _x) */\n      swap1\n      pop\n        /* \"BEACON/logicBeaconBox.sol\":972:1120  function getInitCalldata(uint _x) external  pure returns(bytes memory){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"BEACON/logicBeaconBox.sol\":803:882  function getCount() external view returns(uint){... */\n    tag_18:\n        /* \"BEACON/logicBeaconBox.sol\":845:849  uint */\n      0x00\n        /* \"BEACON/logicBeaconBox.sol\":868:874  _count */\n      dup1\n      sload\n        /* \"BEACON/logicBeaconBox.sol\":861:874  return _count */\n      swap1\n      pop\n        /* \"BEACON/logicBeaconBox.sol\":803:882  function getCount() external view returns(uint){... */\n      swap1\n      jump\t// out\n        /* \"BEACON/logicBeaconBox.sol\":890:964  function cal() external returns(uint){... */\n    tag_23:\n        /* \"BEACON/logicBeaconBox.sol\":922:926  uint */\n      0x00\n        /* \"BEACON/logicBeaconBox.sol\":955:956  1 */\n      0x01\n        /* \"BEACON/logicBeaconBox.sol\":945:951  _count */\n      0x00\n      dup1\n        /* \"BEACON/logicBeaconBox.sol\":945:956  _count += 1 */\n      dup3\n      dup3\n      sload\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n        /* \"BEACON/logicBeaconBox.sol\":938:956  return _count += 1 */\n      swap1\n      pop\n        /* \"BEACON/logicBeaconBox.sol\":890:964  function cal() external returns(uint){... */\n      swap1\n      jump\t// out\n        /* \"BEACON/logicBeaconBox.sol\":716:794  function initialize(uint _x) public initializer {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_36\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_37\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_36:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4706:4723  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4741:4742  0 */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4726:4737  initialized */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_38\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_38:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_39\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4839:4840  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_39:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_40\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_40:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_41\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4951:4952  $ */\n      dup6\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4951:4965  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4983:4997  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      iszero\n      tag_42\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5031:5035  true */\n      0x01\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5013:5014  $ */\n      dup6\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5013:5028  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_42:\n        /* \"BEACON/logicBeaconBox.sol\":784:786  _x */\n      dup6\n        /* \"BEACON/logicBeaconBox.sol\":775:781  _count */\n      0x00\n        /* \"BEACON/logicBeaconBox.sol\":775:786  _count = _x */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_44\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5118:5123  false */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5100:5101  $ */\n      dup6\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5100:5115  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5154:5155  1 */\n      0x01\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"BEACON/logicBeaconBox.sol\":716:794  function initialize(uint _x) public initializer {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_49:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_51:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_52:\n        /* \"#utility.yul\":490:514   */\n      tag_72\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_51\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_73\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_73:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_53:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_75\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_52\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_12:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_77\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_78\n      tag_49\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":766:885   */\n    tag_77:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_79\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_53\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1123   */\n    tag_54:\n        /* \"#utility.yul\":1076:1082   */\n      0x00\n        /* \"#utility.yul\":1110:1115   */\n      dup2\n        /* \"#utility.yul\":1104:1116   */\n      mload\n        /* \"#utility.yul\":1094:1116   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1123   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1129:1297   */\n    tag_55:\n        /* \"#utility.yul\":1212:1223   */\n      0x00\n        /* \"#utility.yul\":1246:1252   */\n      dup3\n        /* \"#utility.yul\":1241:1244   */\n      dup3\n        /* \"#utility.yul\":1234:1253   */\n      mstore\n        /* \"#utility.yul\":1286:1290   */\n      0x20\n        /* \"#utility.yul\":1281:1284   */\n      dup3\n        /* \"#utility.yul\":1277:1291   */\n      add\n        /* \"#utility.yul\":1262:1291   */\n      swap1\n      pop\n        /* \"#utility.yul\":1129:1297   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1303:1442   */\n    tag_56:\n        /* \"#utility.yul\":1392:1398   */\n      dup3\n        /* \"#utility.yul\":1387:1390   */\n      dup2\n        /* \"#utility.yul\":1382:1385   */\n      dup4\n        /* \"#utility.yul\":1376:1399   */\n      mcopy\n        /* \"#utility.yul\":1433:1434   */\n      0x00\n        /* \"#utility.yul\":1424:1430   */\n      dup4\n        /* \"#utility.yul\":1419:1422   */\n      dup4\n        /* \"#utility.yul\":1415:1431   */\n      add\n        /* \"#utility.yul\":1408:1435   */\n      mstore\n        /* \"#utility.yul\":1303:1442   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1448:1550   */\n    tag_57:\n        /* \"#utility.yul\":1489:1495   */\n      0x00\n        /* \"#utility.yul\":1540:1542   */\n      0x1f\n        /* \"#utility.yul\":1536:1543   */\n      not\n        /* \"#utility.yul\":1531:1533   */\n      0x1f\n        /* \"#utility.yul\":1524:1529   */\n      dup4\n        /* \"#utility.yul\":1520:1534   */\n      add\n        /* \"#utility.yul\":1516:1544   */\n      and\n        /* \"#utility.yul\":1506:1544   */\n      swap1\n      pop\n        /* \"#utility.yul\":1448:1550   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1556:1929   */\n    tag_58:\n        /* \"#utility.yul\":1642:1645   */\n      0x00\n        /* \"#utility.yul\":1670:1708   */\n      tag_85\n        /* \"#utility.yul\":1702:1707   */\n      dup3\n        /* \"#utility.yul\":1670:1708   */\n      tag_54\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":1724:1794   */\n      tag_86\n        /* \"#utility.yul\":1787:1793   */\n      dup2\n        /* \"#utility.yul\":1782:1785   */\n      dup6\n        /* \"#utility.yul\":1724:1794   */\n      tag_55\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":1717:1794   */\n      swap4\n      pop\n        /* \"#utility.yul\":1803:1868   */\n      tag_87\n        /* \"#utility.yul\":1861:1867   */\n      dup2\n        /* \"#utility.yul\":1856:1859   */\n      dup6\n        /* \"#utility.yul\":1849:1853   */\n      0x20\n        /* \"#utility.yul\":1842:1847   */\n      dup7\n        /* \"#utility.yul\":1838:1854   */\n      add\n        /* \"#utility.yul\":1803:1868   */\n      tag_56\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":1893:1922   */\n      tag_88\n        /* \"#utility.yul\":1915:1921   */\n      dup2\n        /* \"#utility.yul\":1893:1922   */\n      tag_57\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":1888:1891   */\n      dup5\n        /* \"#utility.yul\":1884:1923   */\n      add\n        /* \"#utility.yul\":1877:1923   */\n      swap2\n      pop\n        /* \"#utility.yul\":1646:1929   */\n      pop\n        /* \"#utility.yul\":1556:1929   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1935:2244   */\n    tag_15:\n        /* \"#utility.yul\":2046:2050   */\n      0x00\n        /* \"#utility.yul\":2084:2086   */\n      0x20\n        /* \"#utility.yul\":2073:2082   */\n      dup3\n        /* \"#utility.yul\":2069:2087   */\n      add\n        /* \"#utility.yul\":2061:2087   */\n      swap1\n      pop\n        /* \"#utility.yul\":2133:2142   */\n      dup2\n        /* \"#utility.yul\":2127:2131   */\n      dup2\n        /* \"#utility.yul\":2123:2143   */\n      sub\n        /* \"#utility.yul\":2119:2120   */\n      0x00\n        /* \"#utility.yul\":2108:2117   */\n      dup4\n        /* \"#utility.yul\":2104:2121   */\n      add\n        /* \"#utility.yul\":2097:2144   */\n      mstore\n        /* \"#utility.yul\":2161:2237   */\n      tag_90\n        /* \"#utility.yul\":2232:2236   */\n      dup2\n        /* \"#utility.yul\":2223:2229   */\n      dup5\n        /* \"#utility.yul\":2161:2237   */\n      tag_58\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":2153:2237   */\n      swap1\n      pop\n        /* \"#utility.yul\":1935:2244   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2250:2368   */\n    tag_59:\n        /* \"#utility.yul\":2337:2361   */\n      tag_92\n        /* \"#utility.yul\":2355:2360   */\n      dup2\n        /* \"#utility.yul\":2337:2361   */\n      tag_51\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":2332:2335   */\n      dup3\n        /* \"#utility.yul\":2325:2362   */\n      mstore\n        /* \"#utility.yul\":2250:2368   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2374:2596   */\n    tag_20:\n        /* \"#utility.yul\":2467:2471   */\n      0x00\n        /* \"#utility.yul\":2505:2507   */\n      0x20\n        /* \"#utility.yul\":2494:2503   */\n      dup3\n        /* \"#utility.yul\":2490:2508   */\n      add\n        /* \"#utility.yul\":2482:2508   */\n      swap1\n      pop\n        /* \"#utility.yul\":2518:2589   */\n      tag_94\n        /* \"#utility.yul\":2586:2587   */\n      0x00\n        /* \"#utility.yul\":2575:2584   */\n      dup4\n        /* \"#utility.yul\":2571:2588   */\n      add\n        /* \"#utility.yul\":2562:2568   */\n      dup5\n        /* \"#utility.yul\":2518:2589   */\n      tag_59\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":2374:2596   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2602:2782   */\n    tag_60:\n        /* \"#utility.yul\":2650:2727   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2647:2648   */\n      0x00\n        /* \"#utility.yul\":2640:2728   */\n      mstore\n        /* \"#utility.yul\":2747:2751   */\n      0x11\n        /* \"#utility.yul\":2744:2745   */\n      0x04\n        /* \"#utility.yul\":2737:2752   */\n      mstore\n        /* \"#utility.yul\":2771:2775   */\n      0x24\n        /* \"#utility.yul\":2768:2769   */\n      0x00\n        /* \"#utility.yul\":2761:2776   */\n      revert\n        /* \"#utility.yul\":2788:2979   */\n    tag_34:\n        /* \"#utility.yul\":2828:2831   */\n      0x00\n        /* \"#utility.yul\":2847:2867   */\n      tag_97\n        /* \"#utility.yul\":2865:2866   */\n      dup3\n        /* \"#utility.yul\":2847:2867   */\n      tag_51\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":2842:2867   */\n      swap2\n      pop\n        /* \"#utility.yul\":2881:2901   */\n      tag_98\n        /* \"#utility.yul\":2899:2900   */\n      dup4\n        /* \"#utility.yul\":2881:2901   */\n      tag_51\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":2876:2901   */\n      swap3\n      pop\n        /* \"#utility.yul\":2924:2925   */\n      dup3\n        /* \"#utility.yul\":2921:2922   */\n      dup3\n        /* \"#utility.yul\":2917:2926   */\n      add\n        /* \"#utility.yul\":2910:2926   */\n      swap1\n      pop\n        /* \"#utility.yul\":2945:2948   */\n      dup1\n        /* \"#utility.yul\":2942:2943   */\n      dup3\n        /* \"#utility.yul\":2939:2949   */\n      gt\n        /* \"#utility.yul\":2936:2972   */\n      iszero\n      tag_99\n      jumpi\n        /* \"#utility.yul\":2952:2970   */\n      tag_100\n      tag_60\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":2936:2972   */\n    tag_99:\n        /* \"#utility.yul\":2788:2979   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2985:3070   */\n    tag_61:\n        /* \"#utility.yul\":3030:3037   */\n      0x00\n        /* \"#utility.yul\":3059:3064   */\n      dup2\n        /* \"#utility.yul\":3048:3064   */\n      swap1\n      pop\n        /* \"#utility.yul\":2985:3070   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3076:3177   */\n    tag_62:\n        /* \"#utility.yul\":3112:3119   */\n      0x00\n        /* \"#utility.yul\":3152:3170   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3145:3150   */\n      dup3\n        /* \"#utility.yul\":3141:3171   */\n      and\n        /* \"#utility.yul\":3130:3171   */\n      swap1\n      pop\n        /* \"#utility.yul\":3076:3177   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3183:3243   */\n    tag_63:\n        /* \"#utility.yul\":3211:3214   */\n      0x00\n        /* \"#utility.yul\":3232:3237   */\n      dup2\n        /* \"#utility.yul\":3225:3237   */\n      swap1\n      pop\n        /* \"#utility.yul\":3183:3243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3249:3405   */\n    tag_64:\n        /* \"#utility.yul\":3306:3315   */\n      0x00\n        /* \"#utility.yul\":3339:3399   */\n      tag_105\n        /* \"#utility.yul\":3356:3398   */\n      tag_106\n        /* \"#utility.yul\":3365:3397   */\n      tag_107\n        /* \"#utility.yul\":3391:3396   */\n      dup5\n        /* \"#utility.yul\":3365:3397   */\n      tag_61\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":3356:3398   */\n      tag_63\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":3339:3399   */\n      tag_62\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":3326:3399   */\n      swap1\n      pop\n        /* \"#utility.yul\":3249:3405   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3411:3556   */\n    tag_65:\n        /* \"#utility.yul\":3505:3549   */\n      tag_109\n        /* \"#utility.yul\":3543:3548   */\n      dup2\n        /* \"#utility.yul\":3505:3549   */\n      tag_64\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":3500:3503   */\n      dup3\n        /* \"#utility.yul\":3493:3550   */\n      mstore\n        /* \"#utility.yul\":3411:3556   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3562:3798   */\n    tag_46:\n        /* \"#utility.yul\":3662:3666   */\n      0x00\n        /* \"#utility.yul\":3700:3702   */\n      0x20\n        /* \"#utility.yul\":3689:3698   */\n      dup3\n        /* \"#utility.yul\":3685:3703   */\n      add\n        /* \"#utility.yul\":3677:3703   */\n      swap1\n      pop\n        /* \"#utility.yul\":3713:3791   */\n      tag_111\n        /* \"#utility.yul\":3788:3789   */\n      0x00\n        /* \"#utility.yul\":3777:3786   */\n      dup4\n        /* \"#utility.yul\":3773:3790   */\n      add\n        /* \"#utility.yul\":3764:3770   */\n      dup5\n        /* \"#utility.yul\":3713:3791   */\n      tag_65\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":3562:3798   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122002d1dfd2e0506689cd35aafdaa9f2d4c41b39d4a541706d6071fc7b766b556ea64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b5061056c8061001c5f395ff3fe608060405260043610610042575f3560e01c80631d54036f1461004d578063a87d942c14610089578063b7c738f4146100b3578063fe4b84df146100dd57610049565b3661004957005b5f80fd5b348015610058575f80fd5b50610073600480360381019061006e9190610385565b610105565b6040516100809190610420565b60405180910390f35b348015610094575f80fd5b5061009d610184565b6040516100aa919061044f565b60405180910390f35b3480156100be575f80fd5b506100c761018c565b6040516100d4919061044f565b60405180910390f35b3480156100e8575f80fd5b5061010360048036038101906100fe9190610385565b6101a9565b005b606063fe4b84df60e01b82604051602401610120919061044f565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050919050565b5f8054905090565b5f60015f8082825461019e9190610495565b925050819055905090565b5f6101b2610327565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff161480156101fa5750825b90505f60018367ffffffffffffffff1614801561022d57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b90508115801561023b575080155b15610272576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156102bf576001855f0160086101000a81548160ff0219169083151502179055505b855f81905550831561031f575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610316919061051d565b60405180910390a15b505050505050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b5f80fd5b5f819050919050565b61036481610352565b811461036e575f80fd5b50565b5f8135905061037f8161035b565b92915050565b5f6020828403121561039a5761039961034e565b5b5f6103a784828501610371565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6103f2826103b0565b6103fc81856103ba565b935061040c8185602086016103ca565b610415816103d8565b840191505092915050565b5f6020820190508181035f83015261043881846103e8565b905092915050565b61044981610352565b82525050565b5f6020820190506104625f830184610440565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61049f82610352565b91506104aa83610352565b92508282019050808211156104c2576104c1610468565b5b92915050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f6105076105026104fd846104c8565b6104e4565b6104d1565b9050919050565b610517816104ed565b82525050565b5f6020820190506105305f83018461050e565b9291505056fea264697066735822122002d1dfd2e0506689cd35aafdaa9f2d4c41b39d4a541706d6071fc7b766b556ea64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x56C DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x42 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D54036F EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0xA87D942C EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0xB7C738F4 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0xFE4B84DF EQ PUSH2 0xDD JUMPI PUSH2 0x49 JUMP JUMPDEST CALLDATASIZE PUSH2 0x49 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x385 JUMP JUMPDEST PUSH2 0x105 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x420 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH2 0x184 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xC7 PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x103 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x385 JUMP JUMPDEST PUSH2 0x1A9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH4 0xFE4B84DF PUSH1 0xE0 SHL DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x495 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x1B2 PUSH2 0x327 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1FA JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x22D JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x23B JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x272 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x2BF JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP6 PUSH0 DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x31F JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x51D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x364 DUP2 PUSH2 0x352 JUMP JUMPDEST DUP2 EQ PUSH2 0x36E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x37F DUP2 PUSH2 0x35B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x39A JUMPI PUSH2 0x399 PUSH2 0x34E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3A7 DUP5 DUP3 DUP6 ADD PUSH2 0x371 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3F2 DUP3 PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0x3FC DUP2 DUP6 PUSH2 0x3BA JUMP JUMPDEST SWAP4 POP PUSH2 0x40C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3CA JUMP JUMPDEST PUSH2 0x415 DUP2 PUSH2 0x3D8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x438 DUP2 DUP5 PUSH2 0x3E8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x449 DUP2 PUSH2 0x352 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x462 PUSH0 DUP4 ADD DUP5 PUSH2 0x440 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x49F DUP3 PUSH2 0x352 JUMP JUMPDEST SWAP2 POP PUSH2 0x4AA DUP4 PUSH2 0x352 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x4C2 JUMPI PUSH2 0x4C1 PUSH2 0x468 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x507 PUSH2 0x502 PUSH2 0x4FD DUP5 PUSH2 0x4C8 JUMP JUMPDEST PUSH2 0x4E4 JUMP JUMPDEST PUSH2 0x4D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x517 DUP2 PUSH2 0x4ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x530 PUSH0 DUP4 ADD DUP5 PUSH2 0x50E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0xD1 0xDF 0xD2 0xE0 POP PUSH7 0x89CD35AAFDAA9F 0x2D 0x4C COINBASE 0xB3 SWAP14 BLOBBASEFEE SLOAD OR MOD 0xD6 SMOD 0x1F 0xC7 0xB7 PUSH7 0xB556EA64736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "607:516:12:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1356": {
									"entryPoint": null,
									"id": 1356,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_907": {
									"entryPoint": 807,
									"id": 907,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@cal_1386": {
									"entryPoint": 396,
									"id": 1386,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getCount_1376": {
									"entryPoint": 388,
									"id": 1376,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getInitCalldata_1402": {
									"entryPoint": 261,
									"id": 1402,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@initialize_1368": {
									"entryPoint": 425,
									"id": 1368,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 1000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 1294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 1056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 1309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 1224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 850,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 1233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 1261,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 970,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1128,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 846,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_uint256": {
									"entryPoint": 859,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3801:13",
										"nodeType": "YulBlock",
										"src": "0:3801:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:32:13",
													"nodeType": "YulBlock",
													"src": "379:32:13",
													"statements": [
														{
															"nativeSrc": "389:16:13",
															"nodeType": "YulAssignment",
															"src": "389:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:13",
																"nodeType": "YulIdentifier",
																"src": "400:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:77:13"
											},
											{
												"body": {
													"nativeSrc": "460:79:13",
													"nodeType": "YulBlock",
													"src": "460:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:13",
																"nodeType": "YulBlock",
																"src": "517:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:13",
																					"nodeType": "YulLiteral",
																					"src": "526:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:13",
																					"nodeType": "YulLiteral",
																					"src": "529:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:13"
																			},
																			"nativeSrc": "519:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:13"
																		},
																		"nativeSrc": "519:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:13"
																				},
																				"nativeSrc": "490:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:13"
																		},
																		"nativeSrc": "480:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:13"
																},
																"nativeSrc": "473:43:13",
																"nodeType": "YulFunctionCall",
																"src": "473:43:13"
															},
															"nativeSrc": "470:63:13",
															"nodeType": "YulIf",
															"src": "470:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:13",
														"nodeType": "YulTypedName",
														"src": "453:5:13",
														"type": ""
													}
												],
												"src": "417:122:13"
											},
											{
												"body": {
													"nativeSrc": "597:87:13",
													"nodeType": "YulBlock",
													"src": "597:87:13",
													"statements": [
														{
															"nativeSrc": "607:29:13",
															"nodeType": "YulAssignment",
															"src": "607:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:13"
																},
																"nativeSrc": "616:20:13",
																"nodeType": "YulFunctionCall",
																"src": "616:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:13"
																},
																"nativeSrc": "645:33:13",
																"nodeType": "YulFunctionCall",
																"src": "645:33:13"
															},
															"nativeSrc": "645:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:13",
														"nodeType": "YulTypedName",
														"src": "575:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:13",
														"nodeType": "YulTypedName",
														"src": "583:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:13",
														"nodeType": "YulTypedName",
														"src": "591:5:13",
														"type": ""
													}
												],
												"src": "545:139:13"
											},
											{
												"body": {
													"nativeSrc": "756:263:13",
													"nodeType": "YulBlock",
													"src": "756:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:13",
																"nodeType": "YulBlock",
																"src": "802:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:13"
																			},
																			"nativeSrc": "804:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:13"
																		},
																		"nativeSrc": "804:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:13"
																		},
																		"nativeSrc": "773:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:13",
																		"nodeType": "YulLiteral",
																		"src": "798:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:13"
																},
																"nativeSrc": "769:32:13",
																"nodeType": "YulFunctionCall",
																"src": "769:32:13"
															},
															"nativeSrc": "766:119:13",
															"nodeType": "YulIf",
															"src": "766:119:13"
														},
														{
															"nativeSrc": "895:117:13",
															"nodeType": "YulBlock",
															"src": "895:117:13",
															"statements": [
																{
																	"nativeSrc": "910:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:13",
																		"nodeType": "YulLiteral",
																		"src": "924:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:13",
																			"nodeType": "YulTypedName",
																			"src": "914:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:13",
																	"nodeType": "YulAssignment",
																	"src": "939:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:13"
																				},
																				"nativeSrc": "970:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:13"
																		},
																		"nativeSrc": "949:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:13",
														"nodeType": "YulTypedName",
														"src": "726:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:13",
														"nodeType": "YulTypedName",
														"src": "737:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:13",
														"nodeType": "YulTypedName",
														"src": "749:6:13",
														"type": ""
													}
												],
												"src": "690:329:13"
											},
											{
												"body": {
													"nativeSrc": "1083:40:13",
													"nodeType": "YulBlock",
													"src": "1083:40:13",
													"statements": [
														{
															"nativeSrc": "1094:22:13",
															"nodeType": "YulAssignment",
															"src": "1094:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1110:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1110:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1104:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1104:5:13"
																},
																"nativeSrc": "1104:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1104:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1094:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1094:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "1025:98:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1066:5:13",
														"nodeType": "YulTypedName",
														"src": "1066:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1076:6:13",
														"nodeType": "YulTypedName",
														"src": "1076:6:13",
														"type": ""
													}
												],
												"src": "1025:98:13"
											},
											{
												"body": {
													"nativeSrc": "1224:73:13",
													"nodeType": "YulBlock",
													"src": "1224:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1241:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1241:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1246:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1246:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1234:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1234:6:13"
																},
																"nativeSrc": "1234:19:13",
																"nodeType": "YulFunctionCall",
																"src": "1234:19:13"
															},
															"nativeSrc": "1234:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "1234:19:13"
														},
														{
															"nativeSrc": "1262:29:13",
															"nodeType": "YulAssignment",
															"src": "1262:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1281:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1281:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1286:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1286:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1277:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1277:3:13"
																},
																"nativeSrc": "1277:14:13",
																"nodeType": "YulFunctionCall",
																"src": "1277:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1262:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "1262:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "1129:168:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1196:3:13",
														"nodeType": "YulTypedName",
														"src": "1196:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1201:6:13",
														"nodeType": "YulTypedName",
														"src": "1201:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1212:11:13",
														"nodeType": "YulTypedName",
														"src": "1212:11:13",
														"type": ""
													}
												],
												"src": "1129:168:13"
											},
											{
												"body": {
													"nativeSrc": "1365:77:13",
													"nodeType": "YulBlock",
													"src": "1365:77:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1382:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1382:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1387:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1387:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1392:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1392:6:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1376:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1376:5:13"
																},
																"nativeSrc": "1376:23:13",
																"nodeType": "YulFunctionCall",
																"src": "1376:23:13"
															},
															"nativeSrc": "1376:23:13",
															"nodeType": "YulExpressionStatement",
															"src": "1376:23:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1419:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1419:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1424:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1424:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1415:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1415:3:13"
																		},
																		"nativeSrc": "1415:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1415:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1433:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1433:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1408:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1408:6:13"
																},
																"nativeSrc": "1408:27:13",
																"nodeType": "YulFunctionCall",
																"src": "1408:27:13"
															},
															"nativeSrc": "1408:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "1408:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1303:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1347:3:13",
														"nodeType": "YulTypedName",
														"src": "1347:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1352:3:13",
														"nodeType": "YulTypedName",
														"src": "1352:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1357:6:13",
														"nodeType": "YulTypedName",
														"src": "1357:6:13",
														"type": ""
													}
												],
												"src": "1303:139:13"
											},
											{
												"body": {
													"nativeSrc": "1496:54:13",
													"nodeType": "YulBlock",
													"src": "1496:54:13",
													"statements": [
														{
															"nativeSrc": "1506:38:13",
															"nodeType": "YulAssignment",
															"src": "1506:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1524:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1524:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1531:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1531:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1520:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1520:3:13"
																		},
																		"nativeSrc": "1520:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1520:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1540:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1540:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1536:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:13"
																		},
																		"nativeSrc": "1536:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1516:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1516:3:13"
																},
																"nativeSrc": "1516:28:13",
																"nodeType": "YulFunctionCall",
																"src": "1516:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1506:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1506:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1448:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1479:5:13",
														"nodeType": "YulTypedName",
														"src": "1479:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1489:6:13",
														"nodeType": "YulTypedName",
														"src": "1489:6:13",
														"type": ""
													}
												],
												"src": "1448:102:13"
											},
											{
												"body": {
													"nativeSrc": "1646:283:13",
													"nodeType": "YulBlock",
													"src": "1646:283:13",
													"statements": [
														{
															"nativeSrc": "1656:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1656:52:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1702:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1702:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "1670:31:13",
																	"nodeType": "YulIdentifier",
																	"src": "1670:31:13"
																},
																"nativeSrc": "1670:38:13",
																"nodeType": "YulFunctionCall",
																"src": "1670:38:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1660:6:13",
																	"nodeType": "YulTypedName",
																	"src": "1660:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1717:77:13",
															"nodeType": "YulAssignment",
															"src": "1717:77:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1782:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1782:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1787:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1787:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "1724:57:13",
																	"nodeType": "YulIdentifier",
																	"src": "1724:57:13"
																},
																"nativeSrc": "1724:70:13",
																"nodeType": "YulFunctionCall",
																"src": "1724:70:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1717:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1717:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1842:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1842:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1849:4:13",
																				"nodeType": "YulLiteral",
																				"src": "1849:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1838:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1838:3:13"
																		},
																		"nativeSrc": "1838:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1838:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1856:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1856:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1861:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1861:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1803:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "1803:34:13"
																},
																"nativeSrc": "1803:65:13",
																"nodeType": "YulFunctionCall",
																"src": "1803:65:13"
															},
															"nativeSrc": "1803:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "1803:65:13"
														},
														{
															"nativeSrc": "1877:46:13",
															"nodeType": "YulAssignment",
															"src": "1877:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1888:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1888:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1915:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1915:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1893:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "1893:21:13"
																		},
																		"nativeSrc": "1893:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1893:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1884:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1884:3:13"
																},
																"nativeSrc": "1884:39:13",
																"nodeType": "YulFunctionCall",
																"src": "1884:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1877:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1877:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "1556:373:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1627:5:13",
														"nodeType": "YulTypedName",
														"src": "1627:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1634:3:13",
														"nodeType": "YulTypedName",
														"src": "1634:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1642:3:13",
														"nodeType": "YulTypedName",
														"src": "1642:3:13",
														"type": ""
													}
												],
												"src": "1556:373:13"
											},
											{
												"body": {
													"nativeSrc": "2051:193:13",
													"nodeType": "YulBlock",
													"src": "2051:193:13",
													"statements": [
														{
															"nativeSrc": "2061:26:13",
															"nodeType": "YulAssignment",
															"src": "2061:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2073:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2073:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2084:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2084:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2069:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2069:3:13"
																},
																"nativeSrc": "2069:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2069:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2061:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2061:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2108:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2108:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2119:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2119:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2104:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2104:3:13"
																		},
																		"nativeSrc": "2104:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2104:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2127:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2127:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2133:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2133:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2123:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:13"
																		},
																		"nativeSrc": "2123:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2123:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2097:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2097:6:13"
																},
																"nativeSrc": "2097:47:13",
																"nodeType": "YulFunctionCall",
																"src": "2097:47:13"
															},
															"nativeSrc": "2097:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "2097:47:13"
														},
														{
															"nativeSrc": "2153:84:13",
															"nodeType": "YulAssignment",
															"src": "2153:84:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2223:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2223:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2232:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2232:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "2161:61:13",
																	"nodeType": "YulIdentifier",
																	"src": "2161:61:13"
																},
																"nativeSrc": "2161:76:13",
																"nodeType": "YulFunctionCall",
																"src": "2161:76:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2153:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2153:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "1935:309:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2023:9:13",
														"nodeType": "YulTypedName",
														"src": "2023:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2035:6:13",
														"nodeType": "YulTypedName",
														"src": "2035:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2046:4:13",
														"nodeType": "YulTypedName",
														"src": "2046:4:13",
														"type": ""
													}
												],
												"src": "1935:309:13"
											},
											{
												"body": {
													"nativeSrc": "2315:53:13",
													"nodeType": "YulBlock",
													"src": "2315:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2332:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2332:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2355:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2355:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2337:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "2337:17:13"
																		},
																		"nativeSrc": "2337:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2325:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2325:6:13"
																},
																"nativeSrc": "2325:37:13",
																"nodeType": "YulFunctionCall",
																"src": "2325:37:13"
															},
															"nativeSrc": "2325:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "2325:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2250:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2303:5:13",
														"nodeType": "YulTypedName",
														"src": "2303:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2310:3:13",
														"nodeType": "YulTypedName",
														"src": "2310:3:13",
														"type": ""
													}
												],
												"src": "2250:118:13"
											},
											{
												"body": {
													"nativeSrc": "2472:124:13",
													"nodeType": "YulBlock",
													"src": "2472:124:13",
													"statements": [
														{
															"nativeSrc": "2482:26:13",
															"nodeType": "YulAssignment",
															"src": "2482:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2494:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2494:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2505:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2505:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2490:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:13"
																},
																"nativeSrc": "2490:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2490:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2482:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2482:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2562:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2562:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2575:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2575:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2586:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2586:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2571:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2571:3:13"
																		},
																		"nativeSrc": "2571:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2571:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2518:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "2518:43:13"
																},
																"nativeSrc": "2518:71:13",
																"nodeType": "YulFunctionCall",
																"src": "2518:71:13"
															},
															"nativeSrc": "2518:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "2518:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2374:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2444:9:13",
														"nodeType": "YulTypedName",
														"src": "2444:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2456:6:13",
														"nodeType": "YulTypedName",
														"src": "2456:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2467:4:13",
														"nodeType": "YulTypedName",
														"src": "2467:4:13",
														"type": ""
													}
												],
												"src": "2374:222:13"
											},
											{
												"body": {
													"nativeSrc": "2630:152:13",
													"nodeType": "YulBlock",
													"src": "2630:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2647:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2647:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2650:77:13",
																		"nodeType": "YulLiteral",
																		"src": "2650:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2640:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2640:6:13"
																},
																"nativeSrc": "2640:88:13",
																"nodeType": "YulFunctionCall",
																"src": "2640:88:13"
															},
															"nativeSrc": "2640:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "2640:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2744:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2744:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2747:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2747:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2737:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2737:6:13"
																},
																"nativeSrc": "2737:15:13",
																"nodeType": "YulFunctionCall",
																"src": "2737:15:13"
															},
															"nativeSrc": "2737:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "2737:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2768:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2768:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2771:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2771:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2761:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2761:6:13"
																},
																"nativeSrc": "2761:15:13",
																"nodeType": "YulFunctionCall",
																"src": "2761:15:13"
															},
															"nativeSrc": "2761:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "2761:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2602:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "2602:180:13"
											},
											{
												"body": {
													"nativeSrc": "2832:147:13",
													"nodeType": "YulBlock",
													"src": "2832:147:13",
													"statements": [
														{
															"nativeSrc": "2842:25:13",
															"nodeType": "YulAssignment",
															"src": "2842:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2865:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "2865:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2847:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "2847:17:13"
																},
																"nativeSrc": "2847:20:13",
																"nodeType": "YulFunctionCall",
																"src": "2847:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2842:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "2842:1:13"
																}
															]
														},
														{
															"nativeSrc": "2876:25:13",
															"nodeType": "YulAssignment",
															"src": "2876:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2899:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "2899:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2881:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "2881:17:13"
																},
																"nativeSrc": "2881:20:13",
																"nodeType": "YulFunctionCall",
																"src": "2881:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2876:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "2876:1:13"
																}
															]
														},
														{
															"nativeSrc": "2910:16:13",
															"nodeType": "YulAssignment",
															"src": "2910:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2921:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "2921:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2924:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "2924:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2917:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2917:3:13"
																},
																"nativeSrc": "2917:9:13",
																"nodeType": "YulFunctionCall",
																"src": "2917:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2910:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2910:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2950:22:13",
																"nodeType": "YulBlock",
																"src": "2950:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2952:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "2952:16:13"
																			},
																			"nativeSrc": "2952:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2952:18:13"
																		},
																		"nativeSrc": "2952:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2952:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2942:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "2942:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2945:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2945:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2939:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2939:2:13"
																},
																"nativeSrc": "2939:10:13",
																"nodeType": "YulFunctionCall",
																"src": "2939:10:13"
															},
															"nativeSrc": "2936:36:13",
															"nodeType": "YulIf",
															"src": "2936:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2788:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2819:1:13",
														"nodeType": "YulTypedName",
														"src": "2819:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2822:1:13",
														"nodeType": "YulTypedName",
														"src": "2822:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2828:3:13",
														"nodeType": "YulTypedName",
														"src": "2828:3:13",
														"type": ""
													}
												],
												"src": "2788:191:13"
											},
											{
												"body": {
													"nativeSrc": "3038:32:13",
													"nodeType": "YulBlock",
													"src": "3038:32:13",
													"statements": [
														{
															"nativeSrc": "3048:16:13",
															"nodeType": "YulAssignment",
															"src": "3048:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "3059:5:13",
																"nodeType": "YulIdentifier",
																"src": "3059:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3048:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "3048:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "2985:85:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3020:5:13",
														"nodeType": "YulTypedName",
														"src": "3020:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3030:7:13",
														"nodeType": "YulTypedName",
														"src": "3030:7:13",
														"type": ""
													}
												],
												"src": "2985:85:13"
											},
											{
												"body": {
													"nativeSrc": "3120:57:13",
													"nodeType": "YulBlock",
													"src": "3120:57:13",
													"statements": [
														{
															"nativeSrc": "3130:41:13",
															"nodeType": "YulAssignment",
															"src": "3130:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3145:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3145:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3152:18:13",
																		"nodeType": "YulLiteral",
																		"src": "3152:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3141:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3141:3:13"
																},
																"nativeSrc": "3141:30:13",
																"nodeType": "YulFunctionCall",
																"src": "3141:30:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3130:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "3130:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "3076:101:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3102:5:13",
														"nodeType": "YulTypedName",
														"src": "3102:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3112:7:13",
														"nodeType": "YulTypedName",
														"src": "3112:7:13",
														"type": ""
													}
												],
												"src": "3076:101:13"
											},
											{
												"body": {
													"nativeSrc": "3215:28:13",
													"nodeType": "YulBlock",
													"src": "3215:28:13",
													"statements": [
														{
															"nativeSrc": "3225:12:13",
															"nodeType": "YulAssignment",
															"src": "3225:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "3232:5:13",
																"nodeType": "YulIdentifier",
																"src": "3232:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3225:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3225:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3183:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3201:5:13",
														"nodeType": "YulTypedName",
														"src": "3201:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3211:3:13",
														"nodeType": "YulTypedName",
														"src": "3211:3:13",
														"type": ""
													}
												],
												"src": "3183:60:13"
											},
											{
												"body": {
													"nativeSrc": "3316:89:13",
													"nodeType": "YulBlock",
													"src": "3316:89:13",
													"statements": [
														{
															"nativeSrc": "3326:73:13",
															"nodeType": "YulAssignment",
															"src": "3326:73:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3391:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3391:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "3365:25:13",
																					"nodeType": "YulIdentifier",
																					"src": "3365:25:13"
																				},
																				"nativeSrc": "3365:32:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3365:32:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3356:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "3356:8:13"
																		},
																		"nativeSrc": "3356:42:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3356:42:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "3339:16:13",
																	"nodeType": "YulIdentifier",
																	"src": "3339:16:13"
																},
																"nativeSrc": "3339:60:13",
																"nodeType": "YulFunctionCall",
																"src": "3339:60:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3326:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "3326:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "3249:156:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3296:5:13",
														"nodeType": "YulTypedName",
														"src": "3296:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3306:9:13",
														"nodeType": "YulTypedName",
														"src": "3306:9:13",
														"type": ""
													}
												],
												"src": "3249:156:13"
											},
											{
												"body": {
													"nativeSrc": "3483:73:13",
													"nodeType": "YulBlock",
													"src": "3483:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3500:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3500:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3543:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3543:5:13"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "3505:37:13",
																			"nodeType": "YulIdentifier",
																			"src": "3505:37:13"
																		},
																		"nativeSrc": "3505:44:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3505:44:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3493:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3493:6:13"
																},
																"nativeSrc": "3493:57:13",
																"nodeType": "YulFunctionCall",
																"src": "3493:57:13"
															},
															"nativeSrc": "3493:57:13",
															"nodeType": "YulExpressionStatement",
															"src": "3493:57:13"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "3411:145:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3471:5:13",
														"nodeType": "YulTypedName",
														"src": "3471:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3478:3:13",
														"nodeType": "YulTypedName",
														"src": "3478:3:13",
														"type": ""
													}
												],
												"src": "3411:145:13"
											},
											{
												"body": {
													"nativeSrc": "3667:131:13",
													"nodeType": "YulBlock",
													"src": "3667:131:13",
													"statements": [
														{
															"nativeSrc": "3677:26:13",
															"nodeType": "YulAssignment",
															"src": "3677:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3689:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3689:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3700:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3700:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3685:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3685:3:13"
																},
																"nativeSrc": "3685:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3685:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3677:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3677:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3764:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3764:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3777:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3777:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3788:1:13",
																				"nodeType": "YulLiteral",
																				"src": "3788:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3773:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3773:3:13"
																		},
																		"nativeSrc": "3773:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3773:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "3713:50:13",
																	"nodeType": "YulIdentifier",
																	"src": "3713:50:13"
																},
																"nativeSrc": "3713:78:13",
																"nodeType": "YulFunctionCall",
																"src": "3713:78:13"
															},
															"nativeSrc": "3713:78:13",
															"nodeType": "YulExpressionStatement",
															"src": "3713:78:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "3562:236:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3639:9:13",
														"nodeType": "YulTypedName",
														"src": "3639:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3651:6:13",
														"nodeType": "YulTypedName",
														"src": "3651:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3662:4:13",
														"nodeType": "YulTypedName",
														"src": "3662:4:13",
														"type": ""
													}
												],
												"src": "3562:236:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610042575f3560e01c80631d54036f1461004d578063a87d942c14610089578063b7c738f4146100b3578063fe4b84df146100dd57610049565b3661004957005b5f80fd5b348015610058575f80fd5b50610073600480360381019061006e9190610385565b610105565b6040516100809190610420565b60405180910390f35b348015610094575f80fd5b5061009d610184565b6040516100aa919061044f565b60405180910390f35b3480156100be575f80fd5b506100c761018c565b6040516100d4919061044f565b60405180910390f35b3480156100e8575f80fd5b5061010360048036038101906100fe9190610385565b6101a9565b005b606063fe4b84df60e01b82604051602401610120919061044f565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050919050565b5f8054905090565b5f60015f8082825461019e9190610495565b925050819055905090565b5f6101b2610327565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff161480156101fa5750825b90505f60018367ffffffffffffffff1614801561022d57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b90508115801561023b575080155b15610272576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156102bf576001855f0160086101000a81548160ff0219169083151502179055505b855f81905550831561031f575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610316919061051d565b60405180910390a15b505050505050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b5f80fd5b5f819050919050565b61036481610352565b811461036e575f80fd5b50565b5f8135905061037f8161035b565b92915050565b5f6020828403121561039a5761039961034e565b5b5f6103a784828501610371565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6103f2826103b0565b6103fc81856103ba565b935061040c8185602086016103ca565b610415816103d8565b840191505092915050565b5f6020820190508181035f83015261043881846103e8565b905092915050565b61044981610352565b82525050565b5f6020820190506104625f830184610440565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61049f82610352565b91506104aa83610352565b92508282019050808211156104c2576104c1610468565b5b92915050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f6105076105026104fd846104c8565b6104e4565b6104d1565b9050919050565b610517816104ed565b82525050565b5f6020820190506105305f83018461050e565b9291505056fea264697066735822122002d1dfd2e0506689cd35aafdaa9f2d4c41b39d4a541706d6071fc7b766b556ea64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x42 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D54036F EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0xA87D942C EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0xB7C738F4 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0xFE4B84DF EQ PUSH2 0xDD JUMPI PUSH2 0x49 JUMP JUMPDEST CALLDATASIZE PUSH2 0x49 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x385 JUMP JUMPDEST PUSH2 0x105 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x420 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH2 0x184 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xC7 PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x103 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x385 JUMP JUMPDEST PUSH2 0x1A9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH4 0xFE4B84DF PUSH1 0xE0 SHL DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x495 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x1B2 PUSH2 0x327 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1FA JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x22D JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x23B JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x272 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x2BF JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP6 PUSH0 DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x31F JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x51D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x364 DUP2 PUSH2 0x352 JUMP JUMPDEST DUP2 EQ PUSH2 0x36E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x37F DUP2 PUSH2 0x35B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x39A JUMPI PUSH2 0x399 PUSH2 0x34E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3A7 DUP5 DUP3 DUP6 ADD PUSH2 0x371 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3F2 DUP3 PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0x3FC DUP2 DUP6 PUSH2 0x3BA JUMP JUMPDEST SWAP4 POP PUSH2 0x40C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3CA JUMP JUMPDEST PUSH2 0x415 DUP2 PUSH2 0x3D8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x438 DUP2 DUP5 PUSH2 0x3E8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x449 DUP2 PUSH2 0x352 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x462 PUSH0 DUP4 ADD DUP5 PUSH2 0x440 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x49F DUP3 PUSH2 0x352 JUMP JUMPDEST SWAP2 POP PUSH2 0x4AA DUP4 PUSH2 0x352 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x4C2 JUMPI PUSH2 0x4C1 PUSH2 0x468 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x507 PUSH2 0x502 PUSH2 0x4FD DUP5 PUSH2 0x4C8 JUMP JUMPDEST PUSH2 0x4E4 JUMP JUMPDEST PUSH2 0x4D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x517 DUP2 PUSH2 0x4ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x530 PUSH0 DUP4 ADD DUP5 PUSH2 0x50E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0xD1 0xDF 0xD2 0xE0 POP PUSH7 0x89CD35AAFDAA9F 0x2D 0x4C COINBASE 0xB3 SWAP14 BLOBBASEFEE SLOAD OR MOD 0xD6 SMOD 0x1F 0xC7 0xB7 PUSH7 0xB556EA64736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "607:516:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;972:148;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;803:79;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;890:74;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;716:78;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;972:148;1029:12;1083:24;;;1109:2;1060:52;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1053:59;;972:148;;;:::o;803:79::-;845:4;868:6;;861:13;;803:79;:::o;890:74::-;922:4;955:1;945:6;;:11;;;;;;;:::i;:::-;;;;;;;938:18;;890:74;:::o;716:78::-;4158:30:7;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;784:2:12::1;775:6;:11;;;;5070:14:7::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;716:78:12;:::o;8737:170:7:-;8795:30;8870:21;8860:31;;8737:170;:::o;88:117:13:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:98::-;1076:6;1110:5;1104:12;1094:22;;1025:98;;;:::o;1129:168::-;1212:11;1246:6;1241:3;1234:19;1286:4;1281:3;1277:14;1262:29;;1129:168;;;;:::o;1303:139::-;1392:6;1387:3;1382;1376:23;1433:1;1424:6;1419:3;1415:16;1408:27;1303:139;;;:::o;1448:102::-;1489:6;1540:2;1536:7;1531:2;1524:5;1520:14;1516:28;1506:38;;1448:102;;;:::o;1556:373::-;1642:3;1670:38;1702:5;1670:38;:::i;:::-;1724:70;1787:6;1782:3;1724:70;:::i;:::-;1717:77;;1803:65;1861:6;1856:3;1849:4;1842:5;1838:16;1803:65;:::i;:::-;1893:29;1915:6;1893:29;:::i;:::-;1888:3;1884:39;1877:46;;1646:283;1556:373;;;;:::o;1935:309::-;2046:4;2084:2;2073:9;2069:18;2061:26;;2133:9;2127:4;2123:20;2119:1;2108:9;2104:17;2097:47;2161:76;2232:4;2223:6;2161:76;:::i;:::-;2153:84;;1935:309;;;;:::o;2250:118::-;2337:24;2355:5;2337:24;:::i;:::-;2332:3;2325:37;2250:118;;:::o;2374:222::-;2467:4;2505:2;2494:9;2490:18;2482:26;;2518:71;2586:1;2575:9;2571:17;2562:6;2518:71;:::i;:::-;2374:222;;;;:::o;2602:180::-;2650:77;2647:1;2640:88;2747:4;2744:1;2737:15;2771:4;2768:1;2761:15;2788:191;2828:3;2847:20;2865:1;2847:20;:::i;:::-;2842:25;;2881:20;2899:1;2881:20;:::i;:::-;2876:25;;2924:1;2921;2917:9;2910:16;;2945:3;2942:1;2939:10;2936:36;;;2952:18;;:::i;:::-;2936:36;2788:191;;;;:::o;2985:85::-;3030:7;3059:5;3048:16;;2985:85;;;:::o;3076:101::-;3112:7;3152:18;3145:5;3141:30;3130:41;;3076:101;;;:::o;3183:60::-;3211:3;3232:5;3225:12;;3183:60;;;:::o;3249:156::-;3306:9;3339:60;3356:42;3365:32;3391:5;3365:32;:::i;:::-;3356:42;:::i;:::-;3339:60;:::i;:::-;3326:73;;3249:156;;;:::o;3411:145::-;3505:44;3543:5;3505:44;:::i;:::-;3500:3;3493:57;3411:145;;:::o;3562:236::-;3662:4;3700:2;3689:9;3685:18;3677:26;;3713:78;3788:1;3777:9;3773:17;3764:6;3713:78;:::i;:::-;3562:236;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "277600",
								"executionCost": "316",
								"totalCost": "277916"
							},
							"external": {
								"cal()": "infinite",
								"getCount()": "2432",
								"getInitCalldata(uint256)": "infinite",
								"initialize(uint256)": "103995"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 607,
									"end": 1123,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 607,
									"end": 1123,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 607,
									"end": 1123,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 607,
									"end": 1123,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 607,
									"end": 1123,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 607,
									"end": 1123,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 607,
									"end": 1123,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 607,
									"end": 1123,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 607,
									"end": 1123,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 607,
									"end": 1123,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 607,
									"end": 1123,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 607,
									"end": 1123,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 607,
									"end": 1123,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 607,
									"end": 1123,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 607,
									"end": 1123,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 607,
									"end": 1123,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 607,
									"end": 1123,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 607,
									"end": 1123,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 607,
									"end": 1123,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 607,
									"end": 1123,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 607,
									"end": 1123,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122002d1dfd2e0506689cd35aafdaa9f2d4c41b39d4a541706d6071fc7b766b556ea64736f6c634300081a0033",
									".code": [
										{
											"begin": 607,
											"end": 1123,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "PUSH",
											"source": 12,
											"value": "1D54036F"
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "PUSH",
											"source": 12,
											"value": "A87D942C"
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "PUSH",
											"source": 12,
											"value": "B7C738F4"
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "PUSH",
											"source": 12,
											"value": "FE4B84DF"
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 607,
											"end": 1123,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "tag",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "tag",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 972,
											"end": 1120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 972,
											"end": 1120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "tag",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 972,
											"end": 1120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 803,
											"end": 882,
											"name": "tag",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 803,
											"end": 882,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 803,
											"end": 882,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 803,
											"end": 882,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 803,
											"end": 882,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 803,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 803,
											"end": 882,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 803,
											"end": 882,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 803,
											"end": 882,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 803,
											"end": 882,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 803,
											"end": 882,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 803,
											"end": 882,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 803,
											"end": 882,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 803,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 803,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 803,
											"end": 882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 803,
											"end": 882,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 803,
											"end": 882,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 803,
											"end": 882,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 882,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 803,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 803,
											"end": 882,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 803,
											"end": 882,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 803,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 803,
											"end": 882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 803,
											"end": 882,
											"name": "tag",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 803,
											"end": 882,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 803,
											"end": 882,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 882,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 803,
											"end": 882,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 803,
											"end": 882,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 803,
											"end": 882,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 803,
											"end": 882,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 803,
											"end": 882,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 890,
											"end": 964,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 890,
											"end": 964,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 890,
											"end": 964,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 890,
											"end": 964,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 890,
											"end": 964,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 890,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 890,
											"end": 964,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 890,
											"end": 964,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 964,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 890,
											"end": 964,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 890,
											"end": 964,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 890,
											"end": 964,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 890,
											"end": 964,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 890,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 890,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 890,
											"end": 964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 890,
											"end": 964,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 890,
											"end": 964,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 890,
											"end": 964,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 890,
											"end": 964,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 890,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 890,
											"end": 964,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 890,
											"end": 964,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 890,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 890,
											"end": 964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 890,
											"end": 964,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 890,
											"end": 964,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 890,
											"end": 964,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 890,
											"end": 964,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 890,
											"end": 964,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 890,
											"end": 964,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 890,
											"end": 964,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 890,
											"end": 964,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 890,
											"end": 964,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 716,
											"end": 794,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 716,
											"end": 794,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 716,
											"end": 794,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 716,
											"end": 794,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 716,
											"end": 794,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 716,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 716,
											"end": 794,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 716,
											"end": 794,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 716,
											"end": 794,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 716,
											"end": 794,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 716,
											"end": 794,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 716,
											"end": 794,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 716,
											"end": 794,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 716,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 716,
											"end": 794,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 716,
											"end": 794,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 716,
											"end": 794,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 716,
											"end": 794,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 716,
											"end": 794,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 716,
											"end": 794,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 716,
											"end": 794,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 716,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 716,
											"end": 794,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 716,
											"end": 794,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 716,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 716,
											"end": 794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 716,
											"end": 794,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 716,
											"end": 794,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 716,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 716,
											"end": 794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 716,
											"end": 794,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 716,
											"end": 794,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 716,
											"end": 794,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1029,
											"end": 1041,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "PUSH",
											"source": 12,
											"value": "FE4B84DF"
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1109,
											"end": 1111,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1060,
											"end": 1112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1060,
											"end": 1112,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1053,
											"end": 1112,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1053,
											"end": 1112,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1120,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 803,
											"end": 882,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 803,
											"end": 882,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 845,
											"end": 849,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 868,
											"end": 874,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 868,
											"end": 874,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 861,
											"end": 874,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 861,
											"end": 874,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 803,
											"end": 882,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 803,
											"end": 882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 890,
											"end": 964,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 890,
											"end": 964,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 922,
											"end": 926,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 955,
											"end": 956,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 945,
											"end": 951,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 945,
											"end": 951,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 945,
											"end": 956,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 945,
											"end": 956,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 945,
											"end": 956,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 945,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 945,
											"end": 956,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 945,
											"end": 956,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 945,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 945,
											"end": 956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 945,
											"end": 956,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 945,
											"end": 956,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 945,
											"end": 956,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 945,
											"end": 956,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 945,
											"end": 956,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 945,
											"end": 956,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 945,
											"end": 956,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 945,
											"end": 956,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 938,
											"end": 956,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 938,
											"end": 956,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 890,
											"end": 964,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 890,
											"end": 964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 716,
											"end": 794,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 716,
											"end": 794,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4706,
											"end": 4723,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4742,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 7,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 784,
											"end": 786,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 775,
											"end": 781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 786,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 775,
											"end": 786,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 775,
											"end": 786,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 775,
											"end": 786,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5118,
											"end": 5123,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5101,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 7,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 5142,
											"end": 5156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 716,
											"end": 794,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 716,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8795,
											"end": 8825,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 7,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8737,
											"end": 8907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1025,
											"end": 1123,
											"name": "tag",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 1025,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1076,
											"end": 1082,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1110,
											"end": 1115,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1094,
											"end": 1116,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1094,
											"end": 1116,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1025,
											"end": 1123,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1025,
											"end": 1123,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1025,
											"end": 1123,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1025,
											"end": 1123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1129,
											"end": 1297,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 1129,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1212,
											"end": 1223,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1246,
											"end": 1252,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1241,
											"end": 1244,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1234,
											"end": 1253,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1286,
											"end": 1290,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1281,
											"end": 1284,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1277,
											"end": 1291,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1262,
											"end": 1291,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1262,
											"end": 1291,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1129,
											"end": 1297,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1129,
											"end": 1297,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1129,
											"end": 1297,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1129,
											"end": 1297,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1129,
											"end": 1297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1303,
											"end": 1442,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 1303,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1392,
											"end": 1398,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1387,
											"end": 1390,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1385,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1376,
											"end": 1399,
											"name": "MCOPY",
											"source": 13
										},
										{
											"begin": 1433,
											"end": 1434,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1430,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1419,
											"end": 1422,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1415,
											"end": 1431,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1408,
											"end": 1435,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1303,
											"end": 1442,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1303,
											"end": 1442,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1303,
											"end": 1442,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1303,
											"end": 1442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1448,
											"end": 1550,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 1448,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1489,
											"end": 1495,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1542,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1536,
											"end": 1543,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1531,
											"end": 1533,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1524,
											"end": 1529,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1520,
											"end": 1534,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1516,
											"end": 1544,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1506,
											"end": 1544,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1506,
											"end": 1544,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1448,
											"end": 1550,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1448,
											"end": 1550,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1448,
											"end": 1550,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1448,
											"end": 1550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1556,
											"end": 1929,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 1556,
											"end": 1929,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1645,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 1670,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1708,
											"name": "tag",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 1670,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1724,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 1787,
											"end": 1793,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1782,
											"end": 1785,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1724,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 1724,
											"end": 1794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1724,
											"end": 1794,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 1724,
											"end": 1794,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1794,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1794,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1803,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1856,
											"end": 1859,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1853,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1842,
											"end": 1847,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1838,
											"end": 1854,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1803,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 1803,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1803,
											"end": 1868,
											"name": "tag",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 1803,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1893,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1893,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 1893,
											"end": 1922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1893,
											"end": 1922,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 1893,
											"end": 1922,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1888,
											"end": 1891,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1884,
											"end": 1923,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1877,
											"end": 1923,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1877,
											"end": 1923,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1646,
											"end": 1929,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1556,
											"end": 1929,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1556,
											"end": 1929,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1556,
											"end": 1929,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1556,
											"end": 1929,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1556,
											"end": 1929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1935,
											"end": 2244,
											"name": "tag",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 1935,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2046,
											"end": 2050,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2084,
											"end": 2086,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2073,
											"end": 2082,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2069,
											"end": 2087,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2133,
											"end": 2142,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2127,
											"end": 2131,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2123,
											"end": 2143,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2119,
											"end": 2120,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2108,
											"end": 2117,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2104,
											"end": 2121,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2097,
											"end": 2144,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2223,
											"end": 2229,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 2161,
											"end": 2237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2237,
											"name": "tag",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 2161,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2153,
											"end": 2237,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2153,
											"end": 2237,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1935,
											"end": 2244,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1935,
											"end": 2244,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1935,
											"end": 2244,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1935,
											"end": 2244,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1935,
											"end": 2244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2250,
											"end": 2368,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 2250,
											"end": 2368,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2337,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 2355,
											"end": 2360,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2337,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 2337,
											"end": 2361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2337,
											"end": 2361,
											"name": "tag",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 2337,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2332,
											"end": 2335,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2325,
											"end": 2362,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2250,
											"end": 2368,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2250,
											"end": 2368,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2250,
											"end": 2368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2374,
											"end": 2596,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2374,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2467,
											"end": 2471,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2505,
											"end": 2507,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2494,
											"end": 2503,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2490,
											"end": 2508,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2482,
											"end": 2508,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2482,
											"end": 2508,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2518,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 2586,
											"end": 2587,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2575,
											"end": 2584,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2571,
											"end": 2588,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2562,
											"end": 2568,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2518,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 2518,
											"end": 2589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2518,
											"end": 2589,
											"name": "tag",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 2518,
											"end": 2589,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2374,
											"end": 2596,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2374,
											"end": 2596,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2374,
											"end": 2596,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2374,
											"end": 2596,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2374,
											"end": 2596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2602,
											"end": 2782,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2602,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2650,
											"end": 2727,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2647,
											"end": 2648,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2640,
											"end": 2728,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2747,
											"end": 2751,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 2744,
											"end": 2745,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2737,
											"end": 2752,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2771,
											"end": 2775,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2768,
											"end": 2769,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2776,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2788,
											"end": 2979,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 2788,
											"end": 2979,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2828,
											"end": 2831,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2847,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 2865,
											"end": 2866,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2847,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 2847,
											"end": 2867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2847,
											"end": 2867,
											"name": "tag",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 2847,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2867,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2842,
											"end": 2867,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2881,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 2899,
											"end": 2900,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2881,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 2881,
											"end": 2901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2881,
											"end": 2901,
											"name": "tag",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 2881,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2876,
											"end": 2901,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2876,
											"end": 2901,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2924,
											"end": 2925,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2921,
											"end": 2922,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2917,
											"end": 2926,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2910,
											"end": 2926,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2910,
											"end": 2926,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2945,
											"end": 2948,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2942,
											"end": 2943,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2939,
											"end": 2949,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2936,
											"end": 2972,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2936,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 2936,
											"end": 2972,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2952,
											"end": 2970,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 2952,
											"end": 2970,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2952,
											"end": 2970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2952,
											"end": 2970,
											"name": "tag",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 2952,
											"end": 2970,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2936,
											"end": 2972,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 2936,
											"end": 2972,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2788,
											"end": 2979,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2788,
											"end": 2979,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2788,
											"end": 2979,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2788,
											"end": 2979,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2788,
											"end": 2979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2985,
											"end": 3070,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 2985,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3030,
											"end": 3037,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3059,
											"end": 3064,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3048,
											"end": 3064,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3048,
											"end": 3064,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2985,
											"end": 3070,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2985,
											"end": 3070,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2985,
											"end": 3070,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2985,
											"end": 3070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3076,
											"end": 3177,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 3076,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3112,
											"end": 3119,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3152,
											"end": 3170,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3145,
											"end": 3150,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3141,
											"end": 3171,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3130,
											"end": 3171,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3130,
											"end": 3171,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3076,
											"end": 3177,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3076,
											"end": 3177,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3076,
											"end": 3177,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3076,
											"end": 3177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3183,
											"end": 3243,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 3183,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3211,
											"end": 3214,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3232,
											"end": 3237,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3225,
											"end": 3237,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3225,
											"end": 3237,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3183,
											"end": 3243,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3183,
											"end": 3243,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3183,
											"end": 3243,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3183,
											"end": 3243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3249,
											"end": 3405,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 3249,
											"end": 3405,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3315,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3339,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 3356,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 3365,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 3391,
											"end": 3396,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3365,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 3365,
											"end": 3397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3365,
											"end": 3397,
											"name": "tag",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 3365,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3356,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 3356,
											"end": 3398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3356,
											"end": 3398,
											"name": "tag",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 3356,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3339,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 3339,
											"end": 3399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3339,
											"end": 3399,
											"name": "tag",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 3339,
											"end": 3399,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3326,
											"end": 3399,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3326,
											"end": 3399,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3249,
											"end": 3405,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3249,
											"end": 3405,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3249,
											"end": 3405,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3249,
											"end": 3405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3411,
											"end": 3556,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 3411,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3505,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 3543,
											"end": 3548,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3505,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 3505,
											"end": 3549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3505,
											"end": 3549,
											"name": "tag",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 3505,
											"end": 3549,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3500,
											"end": 3503,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3493,
											"end": 3550,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3411,
											"end": 3556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3411,
											"end": 3556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3411,
											"end": 3556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3562,
											"end": 3798,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 3562,
											"end": 3798,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3662,
											"end": 3666,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3700,
											"end": 3702,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3689,
											"end": 3698,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3685,
											"end": 3703,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3677,
											"end": 3703,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3677,
											"end": 3703,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3713,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 3788,
											"end": 3789,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3777,
											"end": 3786,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3773,
											"end": 3790,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3764,
											"end": 3770,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3713,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 3713,
											"end": 3791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3713,
											"end": 3791,
											"name": "tag",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 3713,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3562,
											"end": 3798,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3562,
											"end": 3798,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3562,
											"end": 3798,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3562,
											"end": 3798,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3562,
											"end": 3798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
								"@openzeppelin/contracts/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"BEACON/logicBeaconBox.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"cal()": "b7c738f4",
							"getCount()": "a87d942c",
							"getInitCalldata(uint256)": "1d54036f",
							"initialize(uint256)": "fe4b84df"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"cal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_x\",\"type\":\"uint256\"}],\"name\":\"getInitCalldata\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_x\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BEACON/logicBeaconBox.sol\":\"BeaconBoxV1\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0xb719fe6bd47177169ae56e3a6300ca21cc966c649412a1d1156f02862e81beac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5207f4c145e0504ee8c81088b0eadbf9500c31ecbf26c46443f1f5076cafbf4\",\"dweb:/ipfs/QmevxdJoPzBHtcRtEQ9wtkSqhfYvqD4S4BmfEFxDrfYk3G\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x5920bac7215d12961e23b207f6e81a1d64aa4935a4469abe95b64a96a3c3007b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34bb828c45c3a4ebf6c2c585971abf5089e61357a3818a2900c7e85b74a1299\",\"dweb:/ipfs/QmewGAzKsPXYfSjCKxuH1SekKxtdyzhdbdyxjF5gohLigt\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"BEACON/logicBeaconBox.sol\":{\"keccak256\":\"0xcd56a93e7639be009f774ee7789992ea76bd23540213f4ab715776f54ee33e49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f86a1f56e3c0a1c96627cd548e5c04d01f0868bd156fedaf6c6e69d05cc1919\",\"dweb:/ipfs/QmP39oZZi7CotQDoMEqnJZp6sdCUk2Aea19zf3Q6i9rPdk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1352,
								"contract": "BEACON/logicBeaconBox.sol:BeaconBoxV1",
								"label": "_count",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"BeaconBoxV2": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "cal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_x",
									"type": "uint256"
								}
							],
							"name": "getInitCalldata",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_x",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"BEACON/logicBeaconBox.sol\":1127:1643  contract BeaconBoxV2 is Initializable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"BEACON/logicBeaconBox.sol\":1127:1643  contract BeaconBoxV2 is Initializable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1d54036f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa87d942c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xb7c738f4\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xfe4b84df\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"BEACON/logicBeaconBox.sol\":1492:1640  function getInitCalldata(uint _x) external  pure returns(bytes memory){... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n      pop\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      tag_13\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEACON/logicBeaconBox.sol\":1323:1402  function getCount() external view returns(uint){... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEACON/logicBeaconBox.sol\":1410:1484  function cal() external returns(uint){... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEACON/logicBeaconBox.sol\":1236:1314  function initialize(uint _x) public initializer {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_27:\n      tag_28\n      jump\t// in\n    tag_26:\n      stop\n        /* \"BEACON/logicBeaconBox.sol\":1492:1640  function getInitCalldata(uint _x) external  pure returns(bytes memory){... */\n    tag_13:\n        /* \"BEACON/logicBeaconBox.sol\":1549:1561  bytes memory */\n      0x60\n        /* \"BEACON/logicBeaconBox.sol\":1603:1627  this.initialize.selector */\n      shl(0xe0, 0xfe4b84df)\n        /* \"BEACON/logicBeaconBox.sol\":1629:1631  _x */\n      dup3\n        /* \"BEACON/logicBeaconBox.sol\":1580:1632  abi.encodeWithSelector(this.initialize.selector, _x) */\n      add(0x24, mload(0x40))\n      tag_30\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"BEACON/logicBeaconBox.sol\":1573:1632  return abi.encodeWithSelector(this.initialize.selector, _x) */\n      swap1\n      pop\n        /* \"BEACON/logicBeaconBox.sol\":1492:1640  function getInitCalldata(uint _x) external  pure returns(bytes memory){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"BEACON/logicBeaconBox.sol\":1323:1402  function getCount() external view returns(uint){... */\n    tag_18:\n        /* \"BEACON/logicBeaconBox.sol\":1365:1369  uint */\n      0x00\n        /* \"BEACON/logicBeaconBox.sol\":1388:1394  _count */\n      dup1\n      sload\n        /* \"BEACON/logicBeaconBox.sol\":1381:1394  return _count */\n      swap1\n      pop\n        /* \"BEACON/logicBeaconBox.sol\":1323:1402  function getCount() external view returns(uint){... */\n      swap1\n      jump\t// out\n        /* \"BEACON/logicBeaconBox.sol\":1410:1484  function cal() external returns(uint){... */\n    tag_23:\n        /* \"BEACON/logicBeaconBox.sol\":1442:1446  uint */\n      0x00\n        /* \"BEACON/logicBeaconBox.sol\":1475:1476  2 */\n      0x02\n        /* \"BEACON/logicBeaconBox.sol\":1465:1471  _count */\n      0x00\n      dup1\n        /* \"BEACON/logicBeaconBox.sol\":1465:1476  _count *= 2 */\n      dup3\n      dup3\n      sload\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n        /* \"BEACON/logicBeaconBox.sol\":1458:1476  return _count *= 2 */\n      swap1\n      pop\n        /* \"BEACON/logicBeaconBox.sol\":1410:1484  function cal() external returns(uint){... */\n      swap1\n      jump\t// out\n        /* \"BEACON/logicBeaconBox.sol\":1236:1314  function initialize(uint _x) public initializer {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_36\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_37\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_36:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4706:4723  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4741:4742  0 */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4726:4737  initialized */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_38\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_38:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_39\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4839:4840  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_39:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_40\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_40:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_41\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4951:4952  $ */\n      dup6\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4951:4965  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4983:4997  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      iszero\n      tag_42\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5031:5035  true */\n      0x01\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5013:5014  $ */\n      dup6\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5013:5028  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_42:\n        /* \"BEACON/logicBeaconBox.sol\":1304:1306  _x */\n      dup6\n        /* \"BEACON/logicBeaconBox.sol\":1295:1301  _count */\n      0x00\n        /* \"BEACON/logicBeaconBox.sol\":1295:1306  _count = _x */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_44\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5118:5123  false */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5100:5101  $ */\n      dup6\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5100:5115  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5154:5155  1 */\n      0x01\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"BEACON/logicBeaconBox.sol\":1236:1314  function initialize(uint _x) public initializer {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_49:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_51:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_52:\n        /* \"#utility.yul\":490:514   */\n      tag_72\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_51\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_73\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_73:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_53:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_75\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_52\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_12:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_77\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_78\n      tag_49\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":766:885   */\n    tag_77:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_79\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_53\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1123   */\n    tag_54:\n        /* \"#utility.yul\":1076:1082   */\n      0x00\n        /* \"#utility.yul\":1110:1115   */\n      dup2\n        /* \"#utility.yul\":1104:1116   */\n      mload\n        /* \"#utility.yul\":1094:1116   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1123   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1129:1297   */\n    tag_55:\n        /* \"#utility.yul\":1212:1223   */\n      0x00\n        /* \"#utility.yul\":1246:1252   */\n      dup3\n        /* \"#utility.yul\":1241:1244   */\n      dup3\n        /* \"#utility.yul\":1234:1253   */\n      mstore\n        /* \"#utility.yul\":1286:1290   */\n      0x20\n        /* \"#utility.yul\":1281:1284   */\n      dup3\n        /* \"#utility.yul\":1277:1291   */\n      add\n        /* \"#utility.yul\":1262:1291   */\n      swap1\n      pop\n        /* \"#utility.yul\":1129:1297   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1303:1442   */\n    tag_56:\n        /* \"#utility.yul\":1392:1398   */\n      dup3\n        /* \"#utility.yul\":1387:1390   */\n      dup2\n        /* \"#utility.yul\":1382:1385   */\n      dup4\n        /* \"#utility.yul\":1376:1399   */\n      mcopy\n        /* \"#utility.yul\":1433:1434   */\n      0x00\n        /* \"#utility.yul\":1424:1430   */\n      dup4\n        /* \"#utility.yul\":1419:1422   */\n      dup4\n        /* \"#utility.yul\":1415:1431   */\n      add\n        /* \"#utility.yul\":1408:1435   */\n      mstore\n        /* \"#utility.yul\":1303:1442   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1448:1550   */\n    tag_57:\n        /* \"#utility.yul\":1489:1495   */\n      0x00\n        /* \"#utility.yul\":1540:1542   */\n      0x1f\n        /* \"#utility.yul\":1536:1543   */\n      not\n        /* \"#utility.yul\":1531:1533   */\n      0x1f\n        /* \"#utility.yul\":1524:1529   */\n      dup4\n        /* \"#utility.yul\":1520:1534   */\n      add\n        /* \"#utility.yul\":1516:1544   */\n      and\n        /* \"#utility.yul\":1506:1544   */\n      swap1\n      pop\n        /* \"#utility.yul\":1448:1550   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1556:1929   */\n    tag_58:\n        /* \"#utility.yul\":1642:1645   */\n      0x00\n        /* \"#utility.yul\":1670:1708   */\n      tag_85\n        /* \"#utility.yul\":1702:1707   */\n      dup3\n        /* \"#utility.yul\":1670:1708   */\n      tag_54\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":1724:1794   */\n      tag_86\n        /* \"#utility.yul\":1787:1793   */\n      dup2\n        /* \"#utility.yul\":1782:1785   */\n      dup6\n        /* \"#utility.yul\":1724:1794   */\n      tag_55\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":1717:1794   */\n      swap4\n      pop\n        /* \"#utility.yul\":1803:1868   */\n      tag_87\n        /* \"#utility.yul\":1861:1867   */\n      dup2\n        /* \"#utility.yul\":1856:1859   */\n      dup6\n        /* \"#utility.yul\":1849:1853   */\n      0x20\n        /* \"#utility.yul\":1842:1847   */\n      dup7\n        /* \"#utility.yul\":1838:1854   */\n      add\n        /* \"#utility.yul\":1803:1868   */\n      tag_56\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":1893:1922   */\n      tag_88\n        /* \"#utility.yul\":1915:1921   */\n      dup2\n        /* \"#utility.yul\":1893:1922   */\n      tag_57\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":1888:1891   */\n      dup5\n        /* \"#utility.yul\":1884:1923   */\n      add\n        /* \"#utility.yul\":1877:1923   */\n      swap2\n      pop\n        /* \"#utility.yul\":1646:1929   */\n      pop\n        /* \"#utility.yul\":1556:1929   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1935:2244   */\n    tag_15:\n        /* \"#utility.yul\":2046:2050   */\n      0x00\n        /* \"#utility.yul\":2084:2086   */\n      0x20\n        /* \"#utility.yul\":2073:2082   */\n      dup3\n        /* \"#utility.yul\":2069:2087   */\n      add\n        /* \"#utility.yul\":2061:2087   */\n      swap1\n      pop\n        /* \"#utility.yul\":2133:2142   */\n      dup2\n        /* \"#utility.yul\":2127:2131   */\n      dup2\n        /* \"#utility.yul\":2123:2143   */\n      sub\n        /* \"#utility.yul\":2119:2120   */\n      0x00\n        /* \"#utility.yul\":2108:2117   */\n      dup4\n        /* \"#utility.yul\":2104:2121   */\n      add\n        /* \"#utility.yul\":2097:2144   */\n      mstore\n        /* \"#utility.yul\":2161:2237   */\n      tag_90\n        /* \"#utility.yul\":2232:2236   */\n      dup2\n        /* \"#utility.yul\":2223:2229   */\n      dup5\n        /* \"#utility.yul\":2161:2237   */\n      tag_58\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":2153:2237   */\n      swap1\n      pop\n        /* \"#utility.yul\":1935:2244   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2250:2368   */\n    tag_59:\n        /* \"#utility.yul\":2337:2361   */\n      tag_92\n        /* \"#utility.yul\":2355:2360   */\n      dup2\n        /* \"#utility.yul\":2337:2361   */\n      tag_51\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":2332:2335   */\n      dup3\n        /* \"#utility.yul\":2325:2362   */\n      mstore\n        /* \"#utility.yul\":2250:2368   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2374:2596   */\n    tag_20:\n        /* \"#utility.yul\":2467:2471   */\n      0x00\n        /* \"#utility.yul\":2505:2507   */\n      0x20\n        /* \"#utility.yul\":2494:2503   */\n      dup3\n        /* \"#utility.yul\":2490:2508   */\n      add\n        /* \"#utility.yul\":2482:2508   */\n      swap1\n      pop\n        /* \"#utility.yul\":2518:2589   */\n      tag_94\n        /* \"#utility.yul\":2586:2587   */\n      0x00\n        /* \"#utility.yul\":2575:2584   */\n      dup4\n        /* \"#utility.yul\":2571:2588   */\n      add\n        /* \"#utility.yul\":2562:2568   */\n      dup5\n        /* \"#utility.yul\":2518:2589   */\n      tag_59\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":2374:2596   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2602:2782   */\n    tag_60:\n        /* \"#utility.yul\":2650:2727   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2647:2648   */\n      0x00\n        /* \"#utility.yul\":2640:2728   */\n      mstore\n        /* \"#utility.yul\":2747:2751   */\n      0x11\n        /* \"#utility.yul\":2744:2745   */\n      0x04\n        /* \"#utility.yul\":2737:2752   */\n      mstore\n        /* \"#utility.yul\":2771:2775   */\n      0x24\n        /* \"#utility.yul\":2768:2769   */\n      0x00\n        /* \"#utility.yul\":2761:2776   */\n      revert\n        /* \"#utility.yul\":2788:3198   */\n    tag_34:\n        /* \"#utility.yul\":2828:2835   */\n      0x00\n        /* \"#utility.yul\":2851:2871   */\n      tag_97\n        /* \"#utility.yul\":2869:2870   */\n      dup3\n        /* \"#utility.yul\":2851:2871   */\n      tag_51\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":2846:2871   */\n      swap2\n      pop\n        /* \"#utility.yul\":2885:2905   */\n      tag_98\n        /* \"#utility.yul\":2903:2904   */\n      dup4\n        /* \"#utility.yul\":2885:2905   */\n      tag_51\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":2880:2905   */\n      swap3\n      pop\n        /* \"#utility.yul\":2940:2941   */\n      dup3\n        /* \"#utility.yul\":2937:2938   */\n      dup3\n        /* \"#utility.yul\":2933:2942   */\n      mul\n        /* \"#utility.yul\":2962:2992   */\n      tag_99\n        /* \"#utility.yul\":2980:2991   */\n      dup2\n        /* \"#utility.yul\":2962:2992   */\n      tag_51\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":2951:2992   */\n      swap2\n      pop\n        /* \"#utility.yul\":3141:3142   */\n      dup3\n        /* \"#utility.yul\":3132:3139   */\n      dup3\n        /* \"#utility.yul\":3128:3143   */\n      div\n        /* \"#utility.yul\":3125:3126   */\n      dup5\n        /* \"#utility.yul\":3122:3144   */\n      eq\n        /* \"#utility.yul\":3102:3103   */\n      dup4\n        /* \"#utility.yul\":3095:3104   */\n      iszero\n        /* \"#utility.yul\":3075:3158   */\n      or\n        /* \"#utility.yul\":3052:3191   */\n      tag_100\n      jumpi\n        /* \"#utility.yul\":3171:3189   */\n      tag_101\n      tag_60\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":3052:3191   */\n    tag_100:\n        /* \"#utility.yul\":2836:3198   */\n      pop\n        /* \"#utility.yul\":2788:3198   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3204:3289   */\n    tag_61:\n        /* \"#utility.yul\":3249:3256   */\n      0x00\n        /* \"#utility.yul\":3278:3283   */\n      dup2\n        /* \"#utility.yul\":3267:3283   */\n      swap1\n      pop\n        /* \"#utility.yul\":3204:3289   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3295:3396   */\n    tag_62:\n        /* \"#utility.yul\":3331:3338   */\n      0x00\n        /* \"#utility.yul\":3371:3389   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3364:3369   */\n      dup3\n        /* \"#utility.yul\":3360:3390   */\n      and\n        /* \"#utility.yul\":3349:3390   */\n      swap1\n      pop\n        /* \"#utility.yul\":3295:3396   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3402:3462   */\n    tag_63:\n        /* \"#utility.yul\":3430:3433   */\n      0x00\n        /* \"#utility.yul\":3451:3456   */\n      dup2\n        /* \"#utility.yul\":3444:3456   */\n      swap1\n      pop\n        /* \"#utility.yul\":3402:3462   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3468:3624   */\n    tag_64:\n        /* \"#utility.yul\":3525:3534   */\n      0x00\n        /* \"#utility.yul\":3558:3618   */\n      tag_106\n        /* \"#utility.yul\":3575:3617   */\n      tag_107\n        /* \"#utility.yul\":3584:3616   */\n      tag_108\n        /* \"#utility.yul\":3610:3615   */\n      dup5\n        /* \"#utility.yul\":3584:3616   */\n      tag_61\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":3575:3617   */\n      tag_63\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":3558:3618   */\n      tag_62\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":3545:3618   */\n      swap1\n      pop\n        /* \"#utility.yul\":3468:3624   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3630:3775   */\n    tag_65:\n        /* \"#utility.yul\":3724:3768   */\n      tag_110\n        /* \"#utility.yul\":3762:3767   */\n      dup2\n        /* \"#utility.yul\":3724:3768   */\n      tag_64\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":3719:3722   */\n      dup3\n        /* \"#utility.yul\":3712:3769   */\n      mstore\n        /* \"#utility.yul\":3630:3775   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3781:4017   */\n    tag_46:\n        /* \"#utility.yul\":3881:3885   */\n      0x00\n        /* \"#utility.yul\":3919:3921   */\n      0x20\n        /* \"#utility.yul\":3908:3917   */\n      dup3\n        /* \"#utility.yul\":3904:3922   */\n      add\n        /* \"#utility.yul\":3896:3922   */\n      swap1\n      pop\n        /* \"#utility.yul\":3932:4010   */\n      tag_112\n        /* \"#utility.yul\":4007:4008   */\n      0x00\n        /* \"#utility.yul\":3996:4005   */\n      dup4\n        /* \"#utility.yul\":3992:4009   */\n      add\n        /* \"#utility.yul\":3983:3989   */\n      dup5\n        /* \"#utility.yul\":3932:4010   */\n      tag_65\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":3781:4017   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220799414681ef7539af75d8fa2fe620c1f7b8e39856007af0e6e07099cc988dede64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b5061057a8061001c5f395ff3fe608060405260043610610042575f3560e01c80631d54036f1461004d578063a87d942c14610089578063b7c738f4146100b3578063fe4b84df146100dd57610049565b3661004957005b5f80fd5b348015610058575f80fd5b50610073600480360381019061006e9190610385565b610105565b6040516100809190610420565b60405180910390f35b348015610094575f80fd5b5061009d610184565b6040516100aa919061044f565b60405180910390f35b3480156100be575f80fd5b506100c761018c565b6040516100d4919061044f565b60405180910390f35b3480156100e8575f80fd5b5061010360048036038101906100fe9190610385565b6101a9565b005b606063fe4b84df60e01b82604051602401610120919061044f565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050919050565b5f8054905090565b5f60025f8082825461019e9190610495565b925050819055905090565b5f6101b2610327565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff161480156101fa5750825b90505f60018367ffffffffffffffff1614801561022d57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b90508115801561023b575080155b15610272576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156102bf576001855f0160086101000a81548160ff0219169083151502179055505b855f81905550831561031f575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610316919061052b565b60405180910390a15b505050505050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b5f80fd5b5f819050919050565b61036481610352565b811461036e575f80fd5b50565b5f8135905061037f8161035b565b92915050565b5f6020828403121561039a5761039961034e565b5b5f6103a784828501610371565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6103f2826103b0565b6103fc81856103ba565b935061040c8185602086016103ca565b610415816103d8565b840191505092915050565b5f6020820190508181035f83015261043881846103e8565b905092915050565b61044981610352565b82525050565b5f6020820190506104625f830184610440565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61049f82610352565b91506104aa83610352565b92508282026104b881610352565b915082820484148315176104cf576104ce610468565b5b5092915050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f61051561051061050b846104d6565b6104f2565b6104df565b9050919050565b610525816104fb565b82525050565b5f60208201905061053e5f83018461051c565b9291505056fea2646970667358221220799414681ef7539af75d8fa2fe620c1f7b8e39856007af0e6e07099cc988dede64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x57A DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x42 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D54036F EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0xA87D942C EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0xB7C738F4 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0xFE4B84DF EQ PUSH2 0xDD JUMPI PUSH2 0x49 JUMP JUMPDEST CALLDATASIZE PUSH2 0x49 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x385 JUMP JUMPDEST PUSH2 0x105 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x420 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH2 0x184 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xC7 PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x103 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x385 JUMP JUMPDEST PUSH2 0x1A9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH4 0xFE4B84DF PUSH1 0xE0 SHL DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x495 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x1B2 PUSH2 0x327 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1FA JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x22D JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x23B JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x272 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x2BF JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP6 PUSH0 DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x31F JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x52B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x364 DUP2 PUSH2 0x352 JUMP JUMPDEST DUP2 EQ PUSH2 0x36E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x37F DUP2 PUSH2 0x35B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x39A JUMPI PUSH2 0x399 PUSH2 0x34E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3A7 DUP5 DUP3 DUP6 ADD PUSH2 0x371 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3F2 DUP3 PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0x3FC DUP2 DUP6 PUSH2 0x3BA JUMP JUMPDEST SWAP4 POP PUSH2 0x40C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3CA JUMP JUMPDEST PUSH2 0x415 DUP2 PUSH2 0x3D8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x438 DUP2 DUP5 PUSH2 0x3E8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x449 DUP2 PUSH2 0x352 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x462 PUSH0 DUP4 ADD DUP5 PUSH2 0x440 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x49F DUP3 PUSH2 0x352 JUMP JUMPDEST SWAP2 POP PUSH2 0x4AA DUP4 PUSH2 0x352 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x4B8 DUP2 PUSH2 0x352 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x4CF JUMPI PUSH2 0x4CE PUSH2 0x468 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x515 PUSH2 0x510 PUSH2 0x50B DUP5 PUSH2 0x4D6 JUMP JUMPDEST PUSH2 0x4F2 JUMP JUMPDEST PUSH2 0x4DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x525 DUP2 PUSH2 0x4FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x53E PUSH0 DUP4 ADD DUP5 PUSH2 0x51C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x9414681EF7539AF75D8FA2FE620C1F7B8E39856007AF0E6E0709 SWAP13 0xC9 DUP9 0xDE 0xDE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1127:516:12:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1411": {
									"entryPoint": null,
									"id": 1411,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_907": {
									"entryPoint": 807,
									"id": 907,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@cal_1441": {
									"entryPoint": 396,
									"id": 1441,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getCount_1431": {
									"entryPoint": 388,
									"id": 1431,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getInitCalldata_1457": {
									"entryPoint": 261,
									"id": 1457,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@initialize_1423": {
									"entryPoint": 425,
									"id": 1423,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 1000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 1308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 1056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 1323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 1238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 850,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 1247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 1275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 970,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1266,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1128,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 846,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_uint256": {
									"entryPoint": 859,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4020:13",
										"nodeType": "YulBlock",
										"src": "0:4020:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:32:13",
													"nodeType": "YulBlock",
													"src": "379:32:13",
													"statements": [
														{
															"nativeSrc": "389:16:13",
															"nodeType": "YulAssignment",
															"src": "389:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:13",
																"nodeType": "YulIdentifier",
																"src": "400:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:77:13"
											},
											{
												"body": {
													"nativeSrc": "460:79:13",
													"nodeType": "YulBlock",
													"src": "460:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:13",
																"nodeType": "YulBlock",
																"src": "517:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:13",
																					"nodeType": "YulLiteral",
																					"src": "526:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:13",
																					"nodeType": "YulLiteral",
																					"src": "529:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:13"
																			},
																			"nativeSrc": "519:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:13"
																		},
																		"nativeSrc": "519:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:13"
																				},
																				"nativeSrc": "490:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:13"
																		},
																		"nativeSrc": "480:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:13"
																},
																"nativeSrc": "473:43:13",
																"nodeType": "YulFunctionCall",
																"src": "473:43:13"
															},
															"nativeSrc": "470:63:13",
															"nodeType": "YulIf",
															"src": "470:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:13",
														"nodeType": "YulTypedName",
														"src": "453:5:13",
														"type": ""
													}
												],
												"src": "417:122:13"
											},
											{
												"body": {
													"nativeSrc": "597:87:13",
													"nodeType": "YulBlock",
													"src": "597:87:13",
													"statements": [
														{
															"nativeSrc": "607:29:13",
															"nodeType": "YulAssignment",
															"src": "607:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:13"
																},
																"nativeSrc": "616:20:13",
																"nodeType": "YulFunctionCall",
																"src": "616:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:13"
																},
																"nativeSrc": "645:33:13",
																"nodeType": "YulFunctionCall",
																"src": "645:33:13"
															},
															"nativeSrc": "645:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:13",
														"nodeType": "YulTypedName",
														"src": "575:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:13",
														"nodeType": "YulTypedName",
														"src": "583:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:13",
														"nodeType": "YulTypedName",
														"src": "591:5:13",
														"type": ""
													}
												],
												"src": "545:139:13"
											},
											{
												"body": {
													"nativeSrc": "756:263:13",
													"nodeType": "YulBlock",
													"src": "756:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:13",
																"nodeType": "YulBlock",
																"src": "802:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:13"
																			},
																			"nativeSrc": "804:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:13"
																		},
																		"nativeSrc": "804:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:13"
																		},
																		"nativeSrc": "773:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:13",
																		"nodeType": "YulLiteral",
																		"src": "798:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:13"
																},
																"nativeSrc": "769:32:13",
																"nodeType": "YulFunctionCall",
																"src": "769:32:13"
															},
															"nativeSrc": "766:119:13",
															"nodeType": "YulIf",
															"src": "766:119:13"
														},
														{
															"nativeSrc": "895:117:13",
															"nodeType": "YulBlock",
															"src": "895:117:13",
															"statements": [
																{
																	"nativeSrc": "910:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:13",
																		"nodeType": "YulLiteral",
																		"src": "924:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:13",
																			"nodeType": "YulTypedName",
																			"src": "914:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:13",
																	"nodeType": "YulAssignment",
																	"src": "939:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:13"
																				},
																				"nativeSrc": "970:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:13"
																		},
																		"nativeSrc": "949:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:13",
														"nodeType": "YulTypedName",
														"src": "726:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:13",
														"nodeType": "YulTypedName",
														"src": "737:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:13",
														"nodeType": "YulTypedName",
														"src": "749:6:13",
														"type": ""
													}
												],
												"src": "690:329:13"
											},
											{
												"body": {
													"nativeSrc": "1083:40:13",
													"nodeType": "YulBlock",
													"src": "1083:40:13",
													"statements": [
														{
															"nativeSrc": "1094:22:13",
															"nodeType": "YulAssignment",
															"src": "1094:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1110:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1110:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1104:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1104:5:13"
																},
																"nativeSrc": "1104:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1104:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1094:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1094:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "1025:98:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1066:5:13",
														"nodeType": "YulTypedName",
														"src": "1066:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1076:6:13",
														"nodeType": "YulTypedName",
														"src": "1076:6:13",
														"type": ""
													}
												],
												"src": "1025:98:13"
											},
											{
												"body": {
													"nativeSrc": "1224:73:13",
													"nodeType": "YulBlock",
													"src": "1224:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1241:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1241:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1246:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1246:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1234:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1234:6:13"
																},
																"nativeSrc": "1234:19:13",
																"nodeType": "YulFunctionCall",
																"src": "1234:19:13"
															},
															"nativeSrc": "1234:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "1234:19:13"
														},
														{
															"nativeSrc": "1262:29:13",
															"nodeType": "YulAssignment",
															"src": "1262:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1281:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1281:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1286:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1286:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1277:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1277:3:13"
																},
																"nativeSrc": "1277:14:13",
																"nodeType": "YulFunctionCall",
																"src": "1277:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1262:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "1262:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "1129:168:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1196:3:13",
														"nodeType": "YulTypedName",
														"src": "1196:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1201:6:13",
														"nodeType": "YulTypedName",
														"src": "1201:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1212:11:13",
														"nodeType": "YulTypedName",
														"src": "1212:11:13",
														"type": ""
													}
												],
												"src": "1129:168:13"
											},
											{
												"body": {
													"nativeSrc": "1365:77:13",
													"nodeType": "YulBlock",
													"src": "1365:77:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1382:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1382:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1387:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1387:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1392:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1392:6:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1376:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1376:5:13"
																},
																"nativeSrc": "1376:23:13",
																"nodeType": "YulFunctionCall",
																"src": "1376:23:13"
															},
															"nativeSrc": "1376:23:13",
															"nodeType": "YulExpressionStatement",
															"src": "1376:23:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1419:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1419:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1424:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1424:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1415:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1415:3:13"
																		},
																		"nativeSrc": "1415:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1415:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1433:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1433:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1408:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1408:6:13"
																},
																"nativeSrc": "1408:27:13",
																"nodeType": "YulFunctionCall",
																"src": "1408:27:13"
															},
															"nativeSrc": "1408:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "1408:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1303:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1347:3:13",
														"nodeType": "YulTypedName",
														"src": "1347:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1352:3:13",
														"nodeType": "YulTypedName",
														"src": "1352:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1357:6:13",
														"nodeType": "YulTypedName",
														"src": "1357:6:13",
														"type": ""
													}
												],
												"src": "1303:139:13"
											},
											{
												"body": {
													"nativeSrc": "1496:54:13",
													"nodeType": "YulBlock",
													"src": "1496:54:13",
													"statements": [
														{
															"nativeSrc": "1506:38:13",
															"nodeType": "YulAssignment",
															"src": "1506:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1524:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1524:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1531:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1531:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1520:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1520:3:13"
																		},
																		"nativeSrc": "1520:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1520:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1540:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1540:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1536:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:13"
																		},
																		"nativeSrc": "1536:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1516:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1516:3:13"
																},
																"nativeSrc": "1516:28:13",
																"nodeType": "YulFunctionCall",
																"src": "1516:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1506:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1506:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1448:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1479:5:13",
														"nodeType": "YulTypedName",
														"src": "1479:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1489:6:13",
														"nodeType": "YulTypedName",
														"src": "1489:6:13",
														"type": ""
													}
												],
												"src": "1448:102:13"
											},
											{
												"body": {
													"nativeSrc": "1646:283:13",
													"nodeType": "YulBlock",
													"src": "1646:283:13",
													"statements": [
														{
															"nativeSrc": "1656:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1656:52:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1702:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1702:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "1670:31:13",
																	"nodeType": "YulIdentifier",
																	"src": "1670:31:13"
																},
																"nativeSrc": "1670:38:13",
																"nodeType": "YulFunctionCall",
																"src": "1670:38:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1660:6:13",
																	"nodeType": "YulTypedName",
																	"src": "1660:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1717:77:13",
															"nodeType": "YulAssignment",
															"src": "1717:77:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1782:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1782:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1787:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1787:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "1724:57:13",
																	"nodeType": "YulIdentifier",
																	"src": "1724:57:13"
																},
																"nativeSrc": "1724:70:13",
																"nodeType": "YulFunctionCall",
																"src": "1724:70:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1717:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1717:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1842:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1842:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1849:4:13",
																				"nodeType": "YulLiteral",
																				"src": "1849:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1838:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1838:3:13"
																		},
																		"nativeSrc": "1838:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1838:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1856:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1856:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1861:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1861:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1803:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "1803:34:13"
																},
																"nativeSrc": "1803:65:13",
																"nodeType": "YulFunctionCall",
																"src": "1803:65:13"
															},
															"nativeSrc": "1803:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "1803:65:13"
														},
														{
															"nativeSrc": "1877:46:13",
															"nodeType": "YulAssignment",
															"src": "1877:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1888:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1888:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1915:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1915:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1893:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "1893:21:13"
																		},
																		"nativeSrc": "1893:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1893:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1884:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1884:3:13"
																},
																"nativeSrc": "1884:39:13",
																"nodeType": "YulFunctionCall",
																"src": "1884:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1877:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1877:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "1556:373:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1627:5:13",
														"nodeType": "YulTypedName",
														"src": "1627:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1634:3:13",
														"nodeType": "YulTypedName",
														"src": "1634:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1642:3:13",
														"nodeType": "YulTypedName",
														"src": "1642:3:13",
														"type": ""
													}
												],
												"src": "1556:373:13"
											},
											{
												"body": {
													"nativeSrc": "2051:193:13",
													"nodeType": "YulBlock",
													"src": "2051:193:13",
													"statements": [
														{
															"nativeSrc": "2061:26:13",
															"nodeType": "YulAssignment",
															"src": "2061:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2073:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2073:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2084:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2084:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2069:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2069:3:13"
																},
																"nativeSrc": "2069:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2069:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2061:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2061:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2108:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2108:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2119:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2119:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2104:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2104:3:13"
																		},
																		"nativeSrc": "2104:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2104:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2127:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2127:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2133:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2133:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2123:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:13"
																		},
																		"nativeSrc": "2123:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2123:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2097:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2097:6:13"
																},
																"nativeSrc": "2097:47:13",
																"nodeType": "YulFunctionCall",
																"src": "2097:47:13"
															},
															"nativeSrc": "2097:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "2097:47:13"
														},
														{
															"nativeSrc": "2153:84:13",
															"nodeType": "YulAssignment",
															"src": "2153:84:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2223:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2223:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2232:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2232:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "2161:61:13",
																	"nodeType": "YulIdentifier",
																	"src": "2161:61:13"
																},
																"nativeSrc": "2161:76:13",
																"nodeType": "YulFunctionCall",
																"src": "2161:76:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2153:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2153:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "1935:309:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2023:9:13",
														"nodeType": "YulTypedName",
														"src": "2023:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2035:6:13",
														"nodeType": "YulTypedName",
														"src": "2035:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2046:4:13",
														"nodeType": "YulTypedName",
														"src": "2046:4:13",
														"type": ""
													}
												],
												"src": "1935:309:13"
											},
											{
												"body": {
													"nativeSrc": "2315:53:13",
													"nodeType": "YulBlock",
													"src": "2315:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2332:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2332:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2355:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2355:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2337:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "2337:17:13"
																		},
																		"nativeSrc": "2337:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2325:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2325:6:13"
																},
																"nativeSrc": "2325:37:13",
																"nodeType": "YulFunctionCall",
																"src": "2325:37:13"
															},
															"nativeSrc": "2325:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "2325:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2250:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2303:5:13",
														"nodeType": "YulTypedName",
														"src": "2303:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2310:3:13",
														"nodeType": "YulTypedName",
														"src": "2310:3:13",
														"type": ""
													}
												],
												"src": "2250:118:13"
											},
											{
												"body": {
													"nativeSrc": "2472:124:13",
													"nodeType": "YulBlock",
													"src": "2472:124:13",
													"statements": [
														{
															"nativeSrc": "2482:26:13",
															"nodeType": "YulAssignment",
															"src": "2482:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2494:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2494:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2505:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2505:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2490:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:13"
																},
																"nativeSrc": "2490:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2490:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2482:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2482:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2562:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2562:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2575:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2575:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2586:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2586:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2571:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2571:3:13"
																		},
																		"nativeSrc": "2571:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2571:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2518:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "2518:43:13"
																},
																"nativeSrc": "2518:71:13",
																"nodeType": "YulFunctionCall",
																"src": "2518:71:13"
															},
															"nativeSrc": "2518:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "2518:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2374:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2444:9:13",
														"nodeType": "YulTypedName",
														"src": "2444:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2456:6:13",
														"nodeType": "YulTypedName",
														"src": "2456:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2467:4:13",
														"nodeType": "YulTypedName",
														"src": "2467:4:13",
														"type": ""
													}
												],
												"src": "2374:222:13"
											},
											{
												"body": {
													"nativeSrc": "2630:152:13",
													"nodeType": "YulBlock",
													"src": "2630:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2647:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2647:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2650:77:13",
																		"nodeType": "YulLiteral",
																		"src": "2650:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2640:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2640:6:13"
																},
																"nativeSrc": "2640:88:13",
																"nodeType": "YulFunctionCall",
																"src": "2640:88:13"
															},
															"nativeSrc": "2640:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "2640:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2744:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2744:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2747:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2747:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2737:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2737:6:13"
																},
																"nativeSrc": "2737:15:13",
																"nodeType": "YulFunctionCall",
																"src": "2737:15:13"
															},
															"nativeSrc": "2737:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "2737:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2768:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2768:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2771:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2771:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2761:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2761:6:13"
																},
																"nativeSrc": "2761:15:13",
																"nodeType": "YulFunctionCall",
																"src": "2761:15:13"
															},
															"nativeSrc": "2761:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "2761:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2602:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "2602:180:13"
											},
											{
												"body": {
													"nativeSrc": "2836:362:13",
													"nodeType": "YulBlock",
													"src": "2836:362:13",
													"statements": [
														{
															"nativeSrc": "2846:25:13",
															"nodeType": "YulAssignment",
															"src": "2846:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2869:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "2869:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2851:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "2851:17:13"
																},
																"nativeSrc": "2851:20:13",
																"nodeType": "YulFunctionCall",
																"src": "2851:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2846:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "2846:1:13"
																}
															]
														},
														{
															"nativeSrc": "2880:25:13",
															"nodeType": "YulAssignment",
															"src": "2880:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2903:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "2903:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2885:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "2885:17:13"
																},
																"nativeSrc": "2885:20:13",
																"nodeType": "YulFunctionCall",
																"src": "2885:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2880:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "2880:1:13"
																}
															]
														},
														{
															"nativeSrc": "2914:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2914:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2937:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "2937:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2940:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "2940:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2933:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2933:3:13"
																},
																"nativeSrc": "2933:9:13",
																"nodeType": "YulFunctionCall",
																"src": "2933:9:13"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "2918:11:13",
																	"nodeType": "YulTypedName",
																	"src": "2918:11:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2951:41:13",
															"nodeType": "YulAssignment",
															"src": "2951:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "2980:11:13",
																		"nodeType": "YulIdentifier",
																		"src": "2980:11:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2962:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "2962:17:13"
																},
																"nativeSrc": "2962:30:13",
																"nodeType": "YulFunctionCall",
																"src": "2962:30:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "2951:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2951:7:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3169:22:13",
																"nodeType": "YulBlock",
																"src": "3169:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3171:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "3171:16:13"
																			},
																			"nativeSrc": "3171:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3171:18:13"
																		},
																		"nativeSrc": "3171:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3171:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "3102:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "3102:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3095:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "3095:6:13"
																				},
																				"nativeSrc": "3095:9:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3095:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "3125:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "3125:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "3132:7:13",
																								"nodeType": "YulIdentifier",
																								"src": "3132:7:13"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "3141:1:13",
																								"nodeType": "YulIdentifier",
																								"src": "3141:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "3128:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "3128:3:13"
																						},
																						"nativeSrc": "3128:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "3128:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "3122:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "3122:2:13"
																				},
																				"nativeSrc": "3122:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3122:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "3075:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3075:2:13"
																		},
																		"nativeSrc": "3075:83:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3075:83:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3055:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3055:6:13"
																},
																"nativeSrc": "3055:113:13",
																"nodeType": "YulFunctionCall",
																"src": "3055:113:13"
															},
															"nativeSrc": "3052:139:13",
															"nodeType": "YulIf",
															"src": "3052:139:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "2788:410:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2819:1:13",
														"nodeType": "YulTypedName",
														"src": "2819:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2822:1:13",
														"nodeType": "YulTypedName",
														"src": "2822:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "2828:7:13",
														"nodeType": "YulTypedName",
														"src": "2828:7:13",
														"type": ""
													}
												],
												"src": "2788:410:13"
											},
											{
												"body": {
													"nativeSrc": "3257:32:13",
													"nodeType": "YulBlock",
													"src": "3257:32:13",
													"statements": [
														{
															"nativeSrc": "3267:16:13",
															"nodeType": "YulAssignment",
															"src": "3267:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "3278:5:13",
																"nodeType": "YulIdentifier",
																"src": "3278:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3267:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "3267:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "3204:85:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3239:5:13",
														"nodeType": "YulTypedName",
														"src": "3239:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3249:7:13",
														"nodeType": "YulTypedName",
														"src": "3249:7:13",
														"type": ""
													}
												],
												"src": "3204:85:13"
											},
											{
												"body": {
													"nativeSrc": "3339:57:13",
													"nodeType": "YulBlock",
													"src": "3339:57:13",
													"statements": [
														{
															"nativeSrc": "3349:41:13",
															"nodeType": "YulAssignment",
															"src": "3349:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3364:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3364:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3371:18:13",
																		"nodeType": "YulLiteral",
																		"src": "3371:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3360:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3360:3:13"
																},
																"nativeSrc": "3360:30:13",
																"nodeType": "YulFunctionCall",
																"src": "3360:30:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3349:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "3349:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "3295:101:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3321:5:13",
														"nodeType": "YulTypedName",
														"src": "3321:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3331:7:13",
														"nodeType": "YulTypedName",
														"src": "3331:7:13",
														"type": ""
													}
												],
												"src": "3295:101:13"
											},
											{
												"body": {
													"nativeSrc": "3434:28:13",
													"nodeType": "YulBlock",
													"src": "3434:28:13",
													"statements": [
														{
															"nativeSrc": "3444:12:13",
															"nodeType": "YulAssignment",
															"src": "3444:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "3451:5:13",
																"nodeType": "YulIdentifier",
																"src": "3451:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3444:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3444:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3402:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3420:5:13",
														"nodeType": "YulTypedName",
														"src": "3420:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3430:3:13",
														"nodeType": "YulTypedName",
														"src": "3430:3:13",
														"type": ""
													}
												],
												"src": "3402:60:13"
											},
											{
												"body": {
													"nativeSrc": "3535:89:13",
													"nodeType": "YulBlock",
													"src": "3535:89:13",
													"statements": [
														{
															"nativeSrc": "3545:73:13",
															"nodeType": "YulAssignment",
															"src": "3545:73:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3610:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3610:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "3584:25:13",
																					"nodeType": "YulIdentifier",
																					"src": "3584:25:13"
																				},
																				"nativeSrc": "3584:32:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3584:32:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3575:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "3575:8:13"
																		},
																		"nativeSrc": "3575:42:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3575:42:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "3558:16:13",
																	"nodeType": "YulIdentifier",
																	"src": "3558:16:13"
																},
																"nativeSrc": "3558:60:13",
																"nodeType": "YulFunctionCall",
																"src": "3558:60:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3545:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "3545:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "3468:156:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3515:5:13",
														"nodeType": "YulTypedName",
														"src": "3515:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3525:9:13",
														"nodeType": "YulTypedName",
														"src": "3525:9:13",
														"type": ""
													}
												],
												"src": "3468:156:13"
											},
											{
												"body": {
													"nativeSrc": "3702:73:13",
													"nodeType": "YulBlock",
													"src": "3702:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3719:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3719:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3762:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3762:5:13"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "3724:37:13",
																			"nodeType": "YulIdentifier",
																			"src": "3724:37:13"
																		},
																		"nativeSrc": "3724:44:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3724:44:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3712:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3712:6:13"
																},
																"nativeSrc": "3712:57:13",
																"nodeType": "YulFunctionCall",
																"src": "3712:57:13"
															},
															"nativeSrc": "3712:57:13",
															"nodeType": "YulExpressionStatement",
															"src": "3712:57:13"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "3630:145:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3690:5:13",
														"nodeType": "YulTypedName",
														"src": "3690:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3697:3:13",
														"nodeType": "YulTypedName",
														"src": "3697:3:13",
														"type": ""
													}
												],
												"src": "3630:145:13"
											},
											{
												"body": {
													"nativeSrc": "3886:131:13",
													"nodeType": "YulBlock",
													"src": "3886:131:13",
													"statements": [
														{
															"nativeSrc": "3896:26:13",
															"nodeType": "YulAssignment",
															"src": "3896:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3908:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3908:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3919:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3919:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3904:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3904:3:13"
																},
																"nativeSrc": "3904:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3904:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3896:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3896:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3983:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3983:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3996:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3996:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4007:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4007:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3992:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3992:3:13"
																		},
																		"nativeSrc": "3992:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3992:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "3932:50:13",
																	"nodeType": "YulIdentifier",
																	"src": "3932:50:13"
																},
																"nativeSrc": "3932:78:13",
																"nodeType": "YulFunctionCall",
																"src": "3932:78:13"
															},
															"nativeSrc": "3932:78:13",
															"nodeType": "YulExpressionStatement",
															"src": "3932:78:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "3781:236:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3858:9:13",
														"nodeType": "YulTypedName",
														"src": "3858:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3870:6:13",
														"nodeType": "YulTypedName",
														"src": "3870:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3881:4:13",
														"nodeType": "YulTypedName",
														"src": "3881:4:13",
														"type": ""
													}
												],
												"src": "3781:236:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610042575f3560e01c80631d54036f1461004d578063a87d942c14610089578063b7c738f4146100b3578063fe4b84df146100dd57610049565b3661004957005b5f80fd5b348015610058575f80fd5b50610073600480360381019061006e9190610385565b610105565b6040516100809190610420565b60405180910390f35b348015610094575f80fd5b5061009d610184565b6040516100aa919061044f565b60405180910390f35b3480156100be575f80fd5b506100c761018c565b6040516100d4919061044f565b60405180910390f35b3480156100e8575f80fd5b5061010360048036038101906100fe9190610385565b6101a9565b005b606063fe4b84df60e01b82604051602401610120919061044f565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050919050565b5f8054905090565b5f60025f8082825461019e9190610495565b925050819055905090565b5f6101b2610327565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff161480156101fa5750825b90505f60018367ffffffffffffffff1614801561022d57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b90508115801561023b575080155b15610272576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156102bf576001855f0160086101000a81548160ff0219169083151502179055505b855f81905550831561031f575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610316919061052b565b60405180910390a15b505050505050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b5f80fd5b5f819050919050565b61036481610352565b811461036e575f80fd5b50565b5f8135905061037f8161035b565b92915050565b5f6020828403121561039a5761039961034e565b5b5f6103a784828501610371565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6103f2826103b0565b6103fc81856103ba565b935061040c8185602086016103ca565b610415816103d8565b840191505092915050565b5f6020820190508181035f83015261043881846103e8565b905092915050565b61044981610352565b82525050565b5f6020820190506104625f830184610440565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61049f82610352565b91506104aa83610352565b92508282026104b881610352565b915082820484148315176104cf576104ce610468565b5b5092915050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f61051561051061050b846104d6565b6104f2565b6104df565b9050919050565b610525816104fb565b82525050565b5f60208201905061053e5f83018461051c565b9291505056fea2646970667358221220799414681ef7539af75d8fa2fe620c1f7b8e39856007af0e6e07099cc988dede64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x42 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D54036F EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0xA87D942C EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0xB7C738F4 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0xFE4B84DF EQ PUSH2 0xDD JUMPI PUSH2 0x49 JUMP JUMPDEST CALLDATASIZE PUSH2 0x49 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x385 JUMP JUMPDEST PUSH2 0x105 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x420 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH2 0x184 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xC7 PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x103 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x385 JUMP JUMPDEST PUSH2 0x1A9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH4 0xFE4B84DF PUSH1 0xE0 SHL DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x495 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x1B2 PUSH2 0x327 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1FA JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x22D JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x23B JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x272 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x2BF JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP6 PUSH0 DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x31F JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x52B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x364 DUP2 PUSH2 0x352 JUMP JUMPDEST DUP2 EQ PUSH2 0x36E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x37F DUP2 PUSH2 0x35B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x39A JUMPI PUSH2 0x399 PUSH2 0x34E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3A7 DUP5 DUP3 DUP6 ADD PUSH2 0x371 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3F2 DUP3 PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0x3FC DUP2 DUP6 PUSH2 0x3BA JUMP JUMPDEST SWAP4 POP PUSH2 0x40C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3CA JUMP JUMPDEST PUSH2 0x415 DUP2 PUSH2 0x3D8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x438 DUP2 DUP5 PUSH2 0x3E8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x449 DUP2 PUSH2 0x352 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x462 PUSH0 DUP4 ADD DUP5 PUSH2 0x440 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x49F DUP3 PUSH2 0x352 JUMP JUMPDEST SWAP2 POP PUSH2 0x4AA DUP4 PUSH2 0x352 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x4B8 DUP2 PUSH2 0x352 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x4CF JUMPI PUSH2 0x4CE PUSH2 0x468 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x515 PUSH2 0x510 PUSH2 0x50B DUP5 PUSH2 0x4D6 JUMP JUMPDEST PUSH2 0x4F2 JUMP JUMPDEST PUSH2 0x4DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x525 DUP2 PUSH2 0x4FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x53E PUSH0 DUP4 ADD DUP5 PUSH2 0x51C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x9414681EF7539AF75D8FA2FE620C1F7B8E39856007AF0E6E0709 SWAP13 0xC9 DUP9 0xDE 0xDE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1127:516:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1492:148;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1323:79;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1410:74;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1236:78;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1492:148;1549:12;1603:24;;;1629:2;1580:52;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1573:59;;1492:148;;;:::o;1323:79::-;1365:4;1388:6;;1381:13;;1323:79;:::o;1410:74::-;1442:4;1475:1;1465:6;;:11;;;;;;;:::i;:::-;;;;;;;1458:18;;1410:74;:::o;1236:78::-;4158:30:7;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;1304:2:12::1;1295:6;:11;;;;5070:14:7::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;1236:78:12;:::o;8737:170:7:-;8795:30;8870:21;8860:31;;8737:170;:::o;88:117:13:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:98::-;1076:6;1110:5;1104:12;1094:22;;1025:98;;;:::o;1129:168::-;1212:11;1246:6;1241:3;1234:19;1286:4;1281:3;1277:14;1262:29;;1129:168;;;;:::o;1303:139::-;1392:6;1387:3;1382;1376:23;1433:1;1424:6;1419:3;1415:16;1408:27;1303:139;;;:::o;1448:102::-;1489:6;1540:2;1536:7;1531:2;1524:5;1520:14;1516:28;1506:38;;1448:102;;;:::o;1556:373::-;1642:3;1670:38;1702:5;1670:38;:::i;:::-;1724:70;1787:6;1782:3;1724:70;:::i;:::-;1717:77;;1803:65;1861:6;1856:3;1849:4;1842:5;1838:16;1803:65;:::i;:::-;1893:29;1915:6;1893:29;:::i;:::-;1888:3;1884:39;1877:46;;1646:283;1556:373;;;;:::o;1935:309::-;2046:4;2084:2;2073:9;2069:18;2061:26;;2133:9;2127:4;2123:20;2119:1;2108:9;2104:17;2097:47;2161:76;2232:4;2223:6;2161:76;:::i;:::-;2153:84;;1935:309;;;;:::o;2250:118::-;2337:24;2355:5;2337:24;:::i;:::-;2332:3;2325:37;2250:118;;:::o;2374:222::-;2467:4;2505:2;2494:9;2490:18;2482:26;;2518:71;2586:1;2575:9;2571:17;2562:6;2518:71;:::i;:::-;2374:222;;;;:::o;2602:180::-;2650:77;2647:1;2640:88;2747:4;2744:1;2737:15;2771:4;2768:1;2761:15;2788:410;2828:7;2851:20;2869:1;2851:20;:::i;:::-;2846:25;;2885:20;2903:1;2885:20;:::i;:::-;2880:25;;2940:1;2937;2933:9;2962:30;2980:11;2962:30;:::i;:::-;2951:41;;3141:1;3132:7;3128:15;3125:1;3122:22;3102:1;3095:9;3075:83;3052:139;;3171:18;;:::i;:::-;3052:139;2836:362;2788:410;;;;:::o;3204:85::-;3249:7;3278:5;3267:16;;3204:85;;;:::o;3295:101::-;3331:7;3371:18;3364:5;3360:30;3349:41;;3295:101;;;:::o;3402:60::-;3430:3;3451:5;3444:12;;3402:60;;;:::o;3468:156::-;3525:9;3558:60;3575:42;3584:32;3610:5;3584:32;:::i;:::-;3575:42;:::i;:::-;3558:60;:::i;:::-;3545:73;;3468:156;;;:::o;3630:145::-;3724:44;3762:5;3724:44;:::i;:::-;3719:3;3712:57;3630:145;;:::o;3781:236::-;3881:4;3919:2;3908:9;3904:18;3896:26;;3932:78;4007:1;3996:9;3992:17;3983:6;3932:78;:::i;:::-;3781:236;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "280400",
								"executionCost": "316",
								"totalCost": "280716"
							},
							"external": {
								"cal()": "infinite",
								"getCount()": "2432",
								"getInitCalldata(uint256)": "infinite",
								"initialize(uint256)": "103995"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1127,
									"end": 1643,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 1127,
									"end": 1643,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1643,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1127,
									"end": 1643,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 1127,
									"end": 1643,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1127,
									"end": 1643,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1127,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1127,
									"end": 1643,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1127,
									"end": 1643,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1127,
									"end": 1643,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1127,
									"end": 1643,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1127,
									"end": 1643,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1127,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1127,
									"end": 1643,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1127,
									"end": 1643,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1127,
									"end": 1643,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1127,
									"end": 1643,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1127,
									"end": 1643,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1127,
									"end": 1643,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 1127,
									"end": 1643,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1127,
									"end": 1643,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220799414681ef7539af75d8fa2fe620c1f7b8e39856007af0e6e07099cc988dede64736f6c634300081a0033",
									".code": [
										{
											"begin": 1127,
											"end": 1643,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "PUSH",
											"source": 12,
											"value": "1D54036F"
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "PUSH",
											"source": 12,
											"value": "A87D942C"
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "PUSH",
											"source": 12,
											"value": "B7C738F4"
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "PUSH",
											"source": 12,
											"value": "FE4B84DF"
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1127,
											"end": 1643,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "tag",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "tag",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 1492,
											"end": 1640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 1492,
											"end": 1640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "tag",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 1492,
											"end": 1640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1402,
											"name": "tag",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1323,
											"end": 1402,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1402,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1402,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1402,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 1323,
											"end": 1402,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1402,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1402,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1402,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1402,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 1323,
											"end": 1402,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1402,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 1323,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 1323,
											"end": 1402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1402,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 1323,
											"end": 1402,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1402,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1323,
											"end": 1402,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 1323,
											"end": 1402,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1402,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1323,
											"end": 1402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1402,
											"name": "tag",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 1323,
											"end": 1402,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1402,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1323,
											"end": 1402,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1402,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1402,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1402,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1402,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1402,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1410,
											"end": 1484,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1410,
											"end": 1484,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1410,
											"end": 1484,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1410,
											"end": 1484,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1410,
											"end": 1484,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1410,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 1410,
											"end": 1484,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1410,
											"end": 1484,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1410,
											"end": 1484,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1410,
											"end": 1484,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1410,
											"end": 1484,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 1410,
											"end": 1484,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1410,
											"end": 1484,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1410,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 1410,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 1410,
											"end": 1484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1410,
											"end": 1484,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 1410,
											"end": 1484,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1410,
											"end": 1484,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1410,
											"end": 1484,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1410,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1410,
											"end": 1484,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1410,
											"end": 1484,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1410,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1410,
											"end": 1484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1410,
											"end": 1484,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1410,
											"end": 1484,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1410,
											"end": 1484,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1410,
											"end": 1484,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1410,
											"end": 1484,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1410,
											"end": 1484,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1410,
											"end": 1484,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1410,
											"end": 1484,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1410,
											"end": 1484,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1236,
											"end": 1314,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1236,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1236,
											"end": 1314,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1236,
											"end": 1314,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1236,
											"end": 1314,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1236,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 1236,
											"end": 1314,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1236,
											"end": 1314,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1236,
											"end": 1314,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1236,
											"end": 1314,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1236,
											"end": 1314,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 1236,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1236,
											"end": 1314,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1236,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 1236,
											"end": 1314,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1314,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1236,
											"end": 1314,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1236,
											"end": 1314,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1236,
											"end": 1314,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1236,
											"end": 1314,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1236,
											"end": 1314,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1236,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 1236,
											"end": 1314,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1236,
											"end": 1314,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1236,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 1236,
											"end": 1314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1236,
											"end": 1314,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 1236,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1236,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 1236,
											"end": 1314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1236,
											"end": 1314,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 1236,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1236,
											"end": 1314,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1549,
											"end": 1561,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1603,
											"end": 1627,
											"name": "PUSH",
											"source": 12,
											"value": "FE4B84DF"
										},
										{
											"begin": 1603,
											"end": 1627,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1603,
											"end": 1627,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1580,
											"end": 1632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1580,
											"end": 1632,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1632,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1632,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1640,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1402,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 1323,
											"end": 1402,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1365,
											"end": 1369,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1394,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1388,
											"end": 1394,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1402,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1410,
											"end": 1484,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 1410,
											"end": 1484,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1442,
											"end": 1446,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1475,
											"end": 1476,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1465,
											"end": 1471,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1465,
											"end": 1471,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1465,
											"end": 1476,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1465,
											"end": 1476,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1465,
											"end": 1476,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1465,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 1465,
											"end": 1476,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1465,
											"end": 1476,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1465,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 1465,
											"end": 1476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1465,
											"end": 1476,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 1465,
											"end": 1476,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1465,
											"end": 1476,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1465,
											"end": 1476,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1465,
											"end": 1476,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1465,
											"end": 1476,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1465,
											"end": 1476,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1465,
											"end": 1476,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1458,
											"end": 1476,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1458,
											"end": 1476,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1410,
											"end": 1484,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1410,
											"end": 1484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1236,
											"end": 1314,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 1236,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4706,
											"end": 4723,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4742,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 7,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1304,
											"end": 1306,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1295,
											"end": 1301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1295,
											"end": 1306,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1295,
											"end": 1306,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1295,
											"end": 1306,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1295,
											"end": 1306,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5118,
											"end": 5123,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5101,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 7,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 5142,
											"end": 5156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1314,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1236,
											"end": 1314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8795,
											"end": 8825,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 7,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8737,
											"end": 8907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1025,
											"end": 1123,
											"name": "tag",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 1025,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1076,
											"end": 1082,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1110,
											"end": 1115,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1094,
											"end": 1116,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1094,
											"end": 1116,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1025,
											"end": 1123,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1025,
											"end": 1123,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1025,
											"end": 1123,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1025,
											"end": 1123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1129,
											"end": 1297,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 1129,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1212,
											"end": 1223,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1246,
											"end": 1252,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1241,
											"end": 1244,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1234,
											"end": 1253,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1286,
											"end": 1290,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1281,
											"end": 1284,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1277,
											"end": 1291,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1262,
											"end": 1291,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1262,
											"end": 1291,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1129,
											"end": 1297,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1129,
											"end": 1297,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1129,
											"end": 1297,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1129,
											"end": 1297,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1129,
											"end": 1297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1303,
											"end": 1442,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 1303,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1392,
											"end": 1398,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1387,
											"end": 1390,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1382,
											"end": 1385,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1376,
											"end": 1399,
											"name": "MCOPY",
											"source": 13
										},
										{
											"begin": 1433,
											"end": 1434,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1430,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1419,
											"end": 1422,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1415,
											"end": 1431,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1408,
											"end": 1435,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1303,
											"end": 1442,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1303,
											"end": 1442,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1303,
											"end": 1442,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1303,
											"end": 1442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1448,
											"end": 1550,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 1448,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1489,
											"end": 1495,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1542,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1536,
											"end": 1543,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1531,
											"end": 1533,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1524,
											"end": 1529,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1520,
											"end": 1534,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1516,
											"end": 1544,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1506,
											"end": 1544,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1506,
											"end": 1544,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1448,
											"end": 1550,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1448,
											"end": 1550,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1448,
											"end": 1550,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1448,
											"end": 1550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1556,
											"end": 1929,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 1556,
											"end": 1929,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1645,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 1670,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1708,
											"name": "tag",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 1670,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1724,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 1787,
											"end": 1793,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1782,
											"end": 1785,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1724,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 1724,
											"end": 1794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1724,
											"end": 1794,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 1724,
											"end": 1794,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1794,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1794,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1803,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1856,
											"end": 1859,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1853,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1842,
											"end": 1847,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1838,
											"end": 1854,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1803,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 1803,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1803,
											"end": 1868,
											"name": "tag",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 1803,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1893,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1893,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 1893,
											"end": 1922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1893,
											"end": 1922,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 1893,
											"end": 1922,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1888,
											"end": 1891,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1884,
											"end": 1923,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1877,
											"end": 1923,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1877,
											"end": 1923,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1646,
											"end": 1929,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1556,
											"end": 1929,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1556,
											"end": 1929,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1556,
											"end": 1929,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1556,
											"end": 1929,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1556,
											"end": 1929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1935,
											"end": 2244,
											"name": "tag",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 1935,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2046,
											"end": 2050,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2084,
											"end": 2086,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2073,
											"end": 2082,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2069,
											"end": 2087,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2133,
											"end": 2142,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2127,
											"end": 2131,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2123,
											"end": 2143,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2119,
											"end": 2120,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2108,
											"end": 2117,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2104,
											"end": 2121,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2097,
											"end": 2144,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2223,
											"end": 2229,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 2161,
											"end": 2237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2237,
											"name": "tag",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 2161,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2153,
											"end": 2237,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2153,
											"end": 2237,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1935,
											"end": 2244,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1935,
											"end": 2244,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1935,
											"end": 2244,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1935,
											"end": 2244,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1935,
											"end": 2244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2250,
											"end": 2368,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 2250,
											"end": 2368,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2337,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 2355,
											"end": 2360,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2337,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 2337,
											"end": 2361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2337,
											"end": 2361,
											"name": "tag",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 2337,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2332,
											"end": 2335,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2325,
											"end": 2362,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2250,
											"end": 2368,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2250,
											"end": 2368,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2250,
											"end": 2368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2374,
											"end": 2596,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2374,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2467,
											"end": 2471,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2505,
											"end": 2507,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2494,
											"end": 2503,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2490,
											"end": 2508,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2482,
											"end": 2508,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2482,
											"end": 2508,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2518,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 2586,
											"end": 2587,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2575,
											"end": 2584,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2571,
											"end": 2588,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2562,
											"end": 2568,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2518,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 2518,
											"end": 2589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2518,
											"end": 2589,
											"name": "tag",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 2518,
											"end": 2589,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2374,
											"end": 2596,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2374,
											"end": 2596,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2374,
											"end": 2596,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2374,
											"end": 2596,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2374,
											"end": 2596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2602,
											"end": 2782,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2602,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2650,
											"end": 2727,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2647,
											"end": 2648,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2640,
											"end": 2728,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2747,
											"end": 2751,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 2744,
											"end": 2745,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2737,
											"end": 2752,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2771,
											"end": 2775,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2768,
											"end": 2769,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2776,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2788,
											"end": 3198,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 2788,
											"end": 3198,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2828,
											"end": 2835,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2851,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 2869,
											"end": 2870,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2851,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 2851,
											"end": 2871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2851,
											"end": 2871,
											"name": "tag",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 2851,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2846,
											"end": 2871,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2846,
											"end": 2871,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 2903,
											"end": 2904,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 2885,
											"end": 2905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2905,
											"name": "tag",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 2885,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2880,
											"end": 2905,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2880,
											"end": 2905,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2940,
											"end": 2941,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2937,
											"end": 2938,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2933,
											"end": 2942,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2962,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 2980,
											"end": 2991,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2962,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 2962,
											"end": 2992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2962,
											"end": 2992,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 2962,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2951,
											"end": 2992,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2951,
											"end": 2992,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3141,
											"end": 3142,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3132,
											"end": 3139,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3128,
											"end": 3143,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3125,
											"end": 3126,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3122,
											"end": 3144,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3102,
											"end": 3103,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3075,
											"end": 3158,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 3052,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3052,
											"end": 3191,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3171,
											"end": 3189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "tag",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3052,
											"end": 3191,
											"name": "tag",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3052,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2836,
											"end": 3198,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2788,
											"end": 3198,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2788,
											"end": 3198,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2788,
											"end": 3198,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2788,
											"end": 3198,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2788,
											"end": 3198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3204,
											"end": 3289,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 3204,
											"end": 3289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3249,
											"end": 3256,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3283,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3283,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3283,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3204,
											"end": 3289,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3204,
											"end": 3289,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3204,
											"end": 3289,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3204,
											"end": 3289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3295,
											"end": 3396,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 3295,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3331,
											"end": 3338,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3371,
											"end": 3389,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3364,
											"end": 3369,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3360,
											"end": 3390,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3349,
											"end": 3390,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3349,
											"end": 3390,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3295,
											"end": 3396,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3295,
											"end": 3396,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3295,
											"end": 3396,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3295,
											"end": 3396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3402,
											"end": 3462,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 3402,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3430,
											"end": 3433,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3451,
											"end": 3456,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3444,
											"end": 3456,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3444,
											"end": 3456,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3402,
											"end": 3462,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3402,
											"end": 3462,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3402,
											"end": 3462,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3402,
											"end": 3462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3468,
											"end": 3624,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 3468,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3525,
											"end": 3534,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3558,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 3575,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 3584,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 3610,
											"end": 3615,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3584,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 3584,
											"end": 3616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3584,
											"end": 3616,
											"name": "tag",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 3584,
											"end": 3616,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3575,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 3575,
											"end": 3617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3575,
											"end": 3617,
											"name": "tag",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 3575,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3558,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 3558,
											"end": 3618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3558,
											"end": 3618,
											"name": "tag",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 3558,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3545,
											"end": 3618,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3545,
											"end": 3618,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3468,
											"end": 3624,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3468,
											"end": 3624,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3468,
											"end": 3624,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3468,
											"end": 3624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3775,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 3630,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3724,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 3762,
											"end": 3767,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3724,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 3724,
											"end": 3768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3724,
											"end": 3768,
											"name": "tag",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 3724,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3719,
											"end": 3722,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3769,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3775,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3775,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3781,
											"end": 4017,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 3781,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3881,
											"end": 3885,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3919,
											"end": 3921,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3908,
											"end": 3917,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3904,
											"end": 3922,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3896,
											"end": 3922,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3896,
											"end": 3922,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3932,
											"end": 4010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 4007,
											"end": 4008,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3996,
											"end": 4005,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3992,
											"end": 4009,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3983,
											"end": 3989,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3932,
											"end": 4010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 3932,
											"end": 4010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3932,
											"end": 4010,
											"name": "tag",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 3932,
											"end": 4010,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3781,
											"end": 4017,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3781,
											"end": 4017,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3781,
											"end": 4017,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3781,
											"end": 4017,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3781,
											"end": 4017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
								"@openzeppelin/contracts/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"BEACON/logicBeaconBox.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"cal()": "b7c738f4",
							"getCount()": "a87d942c",
							"getInitCalldata(uint256)": "1d54036f",
							"initialize(uint256)": "fe4b84df"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"cal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_x\",\"type\":\"uint256\"}],\"name\":\"getInitCalldata\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_x\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BEACON/logicBeaconBox.sol\":\"BeaconBoxV2\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0xb719fe6bd47177169ae56e3a6300ca21cc966c649412a1d1156f02862e81beac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5207f4c145e0504ee8c81088b0eadbf9500c31ecbf26c46443f1f5076cafbf4\",\"dweb:/ipfs/QmevxdJoPzBHtcRtEQ9wtkSqhfYvqD4S4BmfEFxDrfYk3G\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x5920bac7215d12961e23b207f6e81a1d64aa4935a4469abe95b64a96a3c3007b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34bb828c45c3a4ebf6c2c585971abf5089e61357a3818a2900c7e85b74a1299\",\"dweb:/ipfs/QmewGAzKsPXYfSjCKxuH1SekKxtdyzhdbdyxjF5gohLigt\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"BEACON/logicBeaconBox.sol\":{\"keccak256\":\"0xcd56a93e7639be009f774ee7789992ea76bd23540213f4ab715776f54ee33e49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f86a1f56e3c0a1c96627cd548e5c04d01f0868bd156fedaf6c6e69d05cc1919\",\"dweb:/ipfs/QmP39oZZi7CotQDoMEqnJZp6sdCUk2Aea19zf3Q6i9rPdk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1407,
								"contract": "BEACON/logicBeaconBox.sol:BeaconBoxV2",
								"label": "_count",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1197
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1198,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1197,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1197,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1197
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1179,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
					"exportedSymbols": {
						"IERC1967": [
							168
						]
					},
					"id": 169,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "133:101:1",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."
							},
							"fullyImplemented": true,
							"id": 168,
							"linearizedBaseContracts": [
								168
							],
							"name": "IERC1967",
							"nameLocation": "245:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "260:68:1",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 155,
									"name": "Upgraded",
									"nameLocation": "339:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "364:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "348:30:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:32:1"
									},
									"src": "333:47:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "386:67:1",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 162,
									"name": "AdminChanged",
									"nameLocation": "464:12:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "485:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "477:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "508:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "500:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:41:1"
									},
									"src": "458:60:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "524:59:1",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 167,
									"name": "BeaconUpgraded",
									"nameLocation": "594:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "625:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "609:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "608:24:1"
									},
									"src": "588:45:1"
								}
							],
							"scope": 169,
							"src": "235:400:1",
							"usedErrors": [],
							"usedEvents": [
								155,
								162,
								167
							]
						}
					],
					"src": "107:529:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							1167
						],
						"ERC1967Utils": [
							462
						],
						"IBeacon": [
							566
						],
						"IERC1967": [
							168
						],
						"StorageSlot": [
							1343
						]
					},
					"id": 463,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 170,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 172,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 463,
							"sourceUnit": 567,
							"src": "140:46:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 171,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 566,
										"src": "148:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
							"file": "../../interfaces/IERC1967.sol",
							"id": 174,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 463,
							"sourceUnit": 169,
							"src": "187:55:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 173,
										"name": "IERC1967",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 168,
										"src": "195:8:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 176,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 463,
							"sourceUnit": 1168,
							"src": "243:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 175,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1167,
										"src": "251:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 178,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 463,
							"sourceUnit": 1344,
							"src": "292:56:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 177,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1343,
										"src": "300:11:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 179,
								"nodeType": "StructuredDocumentation",
								"src": "350:145:2",
								"text": " @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."
							},
							"fullyImplemented": true,
							"id": 462,
							"linearizedBaseContracts": [
								462
							],
							"name": "ERC1967Utils",
							"nameLocation": "504:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "523:170:2",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 183,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "789:19:2",
									"nodeType": "VariableDeclaration",
									"scope": 462,
									"src": "763:114:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 181,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "763:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 182,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "811:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "884:69:2",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 188,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "964:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1001:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "993:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:24:2"
									},
									"src": "958:59:2"
								},
								{
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1023:60:2",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 193,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1094:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1122:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "1114:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:15:2"
									},
									"src": "1088:41:2"
								},
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "1135:61:2",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 198,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1207:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1236:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "1228:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:16:2"
									},
									"src": "1201:43:2"
								},
								{
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "1250:82:2",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 201,
									"name": "ERC1967NonPayable",
									"nameLocation": "1343:17:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1360:2:2"
									},
									"src": "1337:26:2"
								},
								{
									"body": {
										"id": 213,
										"nodeType": "Block",
										"src": "1502:77:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 209,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "1546:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 207,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1343,
																"src": "1519:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1343_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1531:14:2",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1254,
															"src": "1519:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1225_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1519:47:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1225_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 211,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1567:5:2",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1224,
													"src": "1519:53:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 206,
												"id": 212,
												"nodeType": "Return",
												"src": "1512:60:2"
											}
										]
									},
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "1369:67:2",
										"text": " @dev Returns the current implementation address."
									},
									"id": 214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1450:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1467:2:2"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1493:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:9:2"
									},
									"scope": 462,
									"src": "1441:138:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "1734:218:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 220,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "1748:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1766:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1748:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1771:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1748:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 223,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1781:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1748:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 230,
												"nodeType": "IfStatement",
												"src": "1744:119:2",
												"trueBody": {
													"id": 229,
													"nodeType": "Block",
													"src": "1784:79:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 226,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 217,
																		"src": "1834:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 225,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "1805:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1805:47:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 228,
															"nodeType": "RevertStatement",
															"src": "1798:54:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 234,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "1899:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 231,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1343,
																	"src": "1872:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1343_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1884:14:2",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1254,
																"src": "1872:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1225_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1872:47:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1225_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 236,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1920:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1224,
														"src": "1872:53:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 237,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "1928:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1872:73:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 239,
												"nodeType": "ExpressionStatement",
												"src": "1872:73:2"
											}
										]
									},
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "1585:81:2",
										"text": " @dev Stores a new address in the ERC-1967 implementation slot."
									},
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1680:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1707:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1699:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:27:2"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1734:0:2"
									},
									"scope": 462,
									"src": "1671:281:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "2345:263:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 250,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "2374:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 249,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "2355:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2355:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 252,
												"nodeType": "ExpressionStatement",
												"src": "2355:37:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 256,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "2425:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 253,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "2407:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$168_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 255,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2416:8:2",
														"memberName": "Upgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 155,
														"src": "2407:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2407:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 258,
												"nodeType": "EmitStatement",
												"src": "2402:41:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 259,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "2458:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2463:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2458:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 261,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2472:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2458:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 274,
													"nodeType": "Block",
													"src": "2559:43:2",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 271,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 461,
																	"src": "2573:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2573:18:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 273,
															"nodeType": "ExpressionStatement",
															"src": "2573:18:2"
														}
													]
												},
												"id": 275,
												"nodeType": "IfStatement",
												"src": "2454:148:2",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "2475:78:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 266,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "2518:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 267,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 246,
																		"src": "2537:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 263,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1167,
																		"src": "2489:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1167_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2497:20:2",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1084,
																	"src": "2489:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2489:53:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 269,
															"nodeType": "ExpressionStatement",
															"src": "2489:53:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "1958:301:2",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2273:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2298:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2290:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2330:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2317:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 245,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2317:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2289:46:2"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2345:0:2"
									},
									"scope": 462,
									"src": "2264:344:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "2614:145:2",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 281,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "2855:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 462,
									"src": "2829:105:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 279,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2829:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 280,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2868:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "3339:68:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 289,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 281,
																"src": "3383:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 287,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1343,
																"src": "3356:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1343_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3368:14:2",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1254,
															"src": "3356:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1225_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3356:38:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1225_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3395:5:2",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1224,
													"src": "3356:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 286,
												"id": 292,
												"nodeType": "Return",
												"src": "3349:51:2"
											}
										]
									},
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "2941:341:2",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3296:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3304:2:2"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "3330:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3330:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3329:9:2"
									},
									"scope": 462,
									"src": "3287:120:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "3535:172:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 300,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "3549:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3569:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3561:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 301,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3561:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3561:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3549:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 314,
												"nodeType": "IfStatement",
												"src": "3545:91:2",
												"trueBody": {
													"id": 313,
													"nodeType": "Block",
													"src": "3573:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 309,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3622:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3614:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 307,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3614:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3614:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 306,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 193,
																	"src": "3594:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3594:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 312,
															"nodeType": "RevertStatement",
															"src": "3587:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 318,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 281,
																	"src": "3672:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 315,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1343,
																	"src": "3645:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1343_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3657:14:2",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1254,
																"src": "3645:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1225_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3645:38:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1225_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 320,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3684:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1224,
														"src": "3645:44:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 321,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "3692:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3645:55:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "3645:55:2"
											}
										]
									},
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "3413:72:2",
										"text": " @dev Stores a new address in the ERC-1967 admin slot."
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "3499:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3517:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3509:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:18:2"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3535:0:2"
									},
									"scope": 462,
									"src": "3490:217:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "3875:94:2",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 334,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "3912:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3912:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 336,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "3924:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 331,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "3890:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$168_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3899:12:2",
														"memberName": "AdminChanged",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 162,
														"src": "3890:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3890:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "EmitStatement",
												"src": "3885:48:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 340,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "3953:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 339,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 325,
														"src": "3943:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3943:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 342,
												"nodeType": "ExpressionStatement",
												"src": "3943:19:2"
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "3713:109:2",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "3836:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3856:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "3848:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:18:2"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3875:0:2"
									},
									"scope": 462,
									"src": "3827:142:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "3975:201:2",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 348,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4272:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 462,
									"src": "4246:106:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 346,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4246:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 347,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4286:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "4468:69:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 356,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "4512:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 354,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1343,
																"src": "4485:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1343_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4497:14:2",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1254,
															"src": "4485:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1225_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 357,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4485:39:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1225_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4525:5:2",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1224,
													"src": "4485:45:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 353,
												"id": 359,
												"nodeType": "Return",
												"src": "4478:52:2"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "4359:51:2",
										"text": " @dev Returns the current beacon."
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4424:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4433:2:2"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "4459:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4459:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4458:9:2"
									},
									"scope": 462,
									"src": "4415:122:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "4667:390:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 367,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 364,
																"src": "4681:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4691:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4681:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4696:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4681:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 370,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4706:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4681:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 377,
												"nodeType": "IfStatement",
												"src": "4677:95:2",
												"trueBody": {
													"id": 376,
													"nodeType": "Block",
													"src": "4709:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 373,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 364,
																		"src": "4751:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 372,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "4730:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4730:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 375,
															"nodeType": "RevertStatement",
															"src": "4723:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 381,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 348,
																	"src": "4809:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 378,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1343,
																	"src": "4782:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1343_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4794:14:2",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1254,
																"src": "4782:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1225_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4782:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1225_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 383,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4822:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1224,
														"src": "4782:45:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 384,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "4830:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4782:57:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 386,
												"nodeType": "ExpressionStatement",
												"src": "4782:57:2"
											},
											{
												"assignments": [
													388
												],
												"declarations": [
													{
														"constant": false,
														"id": 388,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "4858:20:2",
														"nodeType": "VariableDeclaration",
														"scope": 406,
														"src": "4850:28:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 387,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4850:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 394,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 390,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 364,
																	"src": "4889:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 389,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "4881:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$566_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4881:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$566",
																"typeString": "contract IBeacon"
															}
														},
														"id": 392,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4900:14:2",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 565,
														"src": "4881:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:66:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 395,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 388,
																"src": "4930:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4951:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4930:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4956:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4930:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4930:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 405,
												"nodeType": "IfStatement",
												"src": "4926:125:2",
												"trueBody": {
													"id": 404,
													"nodeType": "Block",
													"src": "4969:82:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 401,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 388,
																		"src": "5019:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 400,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "4990:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4990:50:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 403,
															"nodeType": "RevertStatement",
															"src": "4983:57:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "4543:72:2",
										"text": " @dev Stores a new beacon in the ERC-1967 beacon slot."
									},
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "4629:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "4648:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "4640:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4640:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4639:19:2"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4667:0:2"
									},
									"scope": 462,
									"src": "4620:437:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "5661:263:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 416,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "5682:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 415,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "5671:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5671:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "5671:21:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 422,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "5731:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 419,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "5707:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$168_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5716:14:2",
														"memberName": "BeaconUpgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 167,
														"src": "5707:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5707:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 424,
												"nodeType": "EmitStatement",
												"src": "5702:39:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 425,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "5756:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5761:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5756:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5770:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5756:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 444,
													"nodeType": "Block",
													"src": "5875:43:2",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 441,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 461,
																	"src": "5889:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5889:18:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 443,
															"nodeType": "ExpressionStatement",
															"src": "5889:18:2"
														}
													]
												},
												"id": 445,
												"nodeType": "IfStatement",
												"src": "5752:166:2",
												"trueBody": {
													"id": 440,
													"nodeType": "Block",
													"src": "5773:96:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 433,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 410,
																						"src": "5824:9:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 432,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 566,
																					"src": "5816:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$566_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 434,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5816:18:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$566",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 435,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5835:14:2",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 565,
																			"src": "5816:33:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5816:35:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 437,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 412,
																		"src": "5853:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 429,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1167,
																		"src": "5787:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1167_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5795:20:2",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1084,
																	"src": "5787:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5787:71:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 439,
															"nodeType": "ExpressionStatement",
															"src": "5787:71:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "5063:514:2",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "5591:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5622:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "5614:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5614:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5646:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "5633:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 411,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5633:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5613:38:2"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5661:0:2"
									},
									"scope": 462,
									"src": "5582:342:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "6149:86:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 451,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6163:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6167:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6163:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6175:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6163:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 459,
												"nodeType": "IfStatement",
												"src": "6159:70:2",
												"trueBody": {
													"id": 458,
													"nodeType": "Block",
													"src": "6178:51:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 455,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "6199:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6199:19:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 457,
															"nodeType": "RevertStatement",
															"src": "6192:26:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "5930:178:2",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6122:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6138:2:2"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6149:0:2"
									},
									"scope": 462,
									"src": "6113:122:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 463,
							"src": "496:5741:2",
							"usedErrors": [
								188,
								193,
								198,
								201
							],
							"usedEvents": []
						}
					],
					"src": "114:6124:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/proxy/Proxy.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/Proxy.sol",
					"exportedSymbols": {
						"Proxy": [
							498
						]
					},
					"id": 499,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 464,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "99:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Proxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 465,
								"nodeType": "StructuredDocumentation",
								"src": "125:598:3",
								"text": " @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."
							},
							"fullyImplemented": false,
							"id": 498,
							"linearizedBaseContracts": [
								498
							],
							"name": "Proxy",
							"nameLocation": "742:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "1009:835:3",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1028:810:3",
													"nodeType": "YulBlock",
													"src": "1028:810:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1281:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1281:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1284:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1284:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nativeSrc": "1287:12:3",
																			"nodeType": "YulIdentifier",
																			"src": "1287:12:3"
																		},
																		"nativeSrc": "1287:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1287:14:3"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "1268:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1268:12:3"
																},
																"nativeSrc": "1268:34:3",
																"nodeType": "YulFunctionCall",
																"src": "1268:34:3"
															},
															"nativeSrc": "1268:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "1268:34:3"
														},
														{
															"nativeSrc": "1429:74:3",
															"nodeType": "YulVariableDeclaration",
															"src": "1429:74:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "1456:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1456:3:3"
																		},
																		"nativeSrc": "1456:5:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1456:5:3"
																	},
																	{
																		"name": "implementation",
																		"nativeSrc": "1463:14:3",
																		"nodeType": "YulIdentifier",
																		"src": "1463:14:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1479:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1479:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nativeSrc": "1482:12:3",
																			"nodeType": "YulIdentifier",
																			"src": "1482:12:3"
																		},
																		"nativeSrc": "1482:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1482:14:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1498:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1498:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1501:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1501:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nativeSrc": "1443:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1443:12:3"
																},
																"nativeSrc": "1443:60:3",
																"nodeType": "YulFunctionCall",
																"src": "1443:60:3"
															},
															"variables": [
																{
																	"name": "result",
																	"nativeSrc": "1433:6:3",
																	"nodeType": "YulTypedName",
																	"src": "1433:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1571:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1571:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1574:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1574:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nativeSrc": "1577:14:3",
																			"nodeType": "YulIdentifier",
																			"src": "1577:14:3"
																		},
																		"nativeSrc": "1577:16:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1577:16:3"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nativeSrc": "1556:14:3",
																	"nodeType": "YulIdentifier",
																	"src": "1556:14:3"
																},
																"nativeSrc": "1556:38:3",
																"nodeType": "YulFunctionCall",
																"src": "1556:38:3"
															},
															"nativeSrc": "1556:38:3",
															"nodeType": "YulExpressionStatement",
															"src": "1556:38:3"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1689:59:3",
																		"nodeType": "YulBlock",
																		"src": "1689:59:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1714:1:3",
																							"nodeType": "YulLiteral",
																							"src": "1714:1:3",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nativeSrc": "1717:14:3",
																								"nodeType": "YulIdentifier",
																								"src": "1717:14:3"
																							},
																							"nativeSrc": "1717:16:3",
																							"nodeType": "YulFunctionCall",
																							"src": "1717:16:3"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nativeSrc": "1707:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1707:6:3"
																					},
																					"nativeSrc": "1707:27:3",
																					"nodeType": "YulFunctionCall",
																					"src": "1707:27:3"
																				},
																				"nativeSrc": "1707:27:3",
																				"nodeType": "YulExpressionStatement",
																				"src": "1707:27:3"
																			}
																		]
																	},
																	"nativeSrc": "1682:66:3",
																	"nodeType": "YulCase",
																	"src": "1682:66:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1687:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1687:1:3",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "1769:59:3",
																		"nodeType": "YulBlock",
																		"src": "1769:59:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1794:1:3",
																							"nodeType": "YulLiteral",
																							"src": "1794:1:3",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nativeSrc": "1797:14:3",
																								"nodeType": "YulIdentifier",
																								"src": "1797:14:3"
																							},
																							"nativeSrc": "1797:16:3",
																							"nodeType": "YulFunctionCall",
																							"src": "1797:16:3"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nativeSrc": "1787:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1787:6:3"
																					},
																					"nativeSrc": "1787:27:3",
																					"nodeType": "YulFunctionCall",
																					"src": "1787:27:3"
																				},
																				"nativeSrc": "1787:27:3",
																				"nodeType": "YulExpressionStatement",
																				"src": "1787:27:3"
																			}
																		]
																	},
																	"nativeSrc": "1761:67:3",
																	"nodeType": "YulCase",
																	"src": "1761:67:3",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nativeSrc": "1615:6:3",
																"nodeType": "YulIdentifier",
																"src": "1615:6:3"
															},
															"nativeSrc": "1608:220:3",
															"nodeType": "YulSwitch",
															"src": "1608:220:3"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 468,
														"isOffset": false,
														"isSlot": false,
														"src": "1463:14:3",
														"valueSize": 1
													}
												],
												"id": 471,
												"nodeType": "InlineAssembly",
												"src": "1019:819:3"
											}
										]
									},
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "754:190:3",
										"text": " @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."
									},
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nameLocation": "958:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "976:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "968:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "968:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "967:24:3"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1009:0:3"
									},
									"scope": 498,
									"src": "949:895:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "1850:173:3",
										"text": " @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n function and {_fallback} should delegate."
									},
									"id": 479,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "2037:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2052:2:3"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "2086:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2086:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2085:9:3"
									},
									"scope": 498,
									"src": "2028:67:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "2361:45:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 484,
																"name": "_implementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "2381:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2381:17:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 483,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "2371:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2371:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "2371:28:3"
											}
										]
									},
									"documentation": {
										"id": 480,
										"nodeType": "StructuredDocumentation",
										"src": "2101:217:3",
										"text": " @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."
									},
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_fallback",
									"nameLocation": "2332:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2341:2:3"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2361:0:3"
									},
									"scope": 498,
									"src": "2323:83:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "2639:28:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 493,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "2649:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2649:11:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "2649:11:3"
											}
										]
									},
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "2412:186:3",
										"text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."
									},
									"id": 497,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2611:2:3"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2639:0:3"
									},
									"scope": 498,
									"src": "2603:64:3",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 499,
							"src": "724:1945:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:2571:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
					"exportedSymbols": {
						"BeaconProxy": [
							556
						],
						"ERC1967Utils": [
							462
						],
						"IBeacon": [
							566
						],
						"Proxy": [
							498
						]
					},
					"id": 557,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 500,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "./IBeacon.sol",
							"id": 502,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 557,
							"sourceUnit": 567,
							"src": "138:38:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 501,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 566,
										"src": "146:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/Proxy.sol",
							"file": "../Proxy.sol",
							"id": 504,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 557,
							"sourceUnit": 499,
							"src": "177:35:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 503,
										"name": "Proxy",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 498,
										"src": "185:5:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "../ERC1967/ERC1967Utils.sol",
							"id": 506,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 557,
							"sourceUnit": 463,
							"src": "213:57:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 505,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 462,
										"src": "221:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 508,
										"name": "Proxy",
										"nameLocations": [
											"1140:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 498,
										"src": "1140:5:4"
									},
									"id": 509,
									"nodeType": "InheritanceSpecifier",
									"src": "1140:5:4"
								}
							],
							"canonicalName": "BeaconProxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 507,
								"nodeType": "StructuredDocumentation",
								"src": "272:843:4",
								"text": " @dev This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}.\n The beacon address can only be set once during construction, and cannot be changed afterwards. It is stored in an\n immutable variable to avoid unnecessary storage reads, and also in the beacon storage slot specified by\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] so that it can be accessed externally.\n CAUTION: Since the beacon address can never be changed, you must ensure that you either control the beacon, or trust\n the beacon to not upgrade the implementation maliciously.\n IMPORTANT: Do not use the implementation logic to modify the beacon storage slot. Doing so would leave the proxy in\n an inconsistent state where the beacon storage slot does not match the beacon address."
							},
							"fullyImplemented": true,
							"id": 556,
							"linearizedBaseContracts": [
								556,
								498
							],
							"name": "BeaconProxy",
							"nameLocation": "1125:11:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 511,
									"mutability": "immutable",
									"name": "_beacon",
									"nameLocation": "1276:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 556,
									"src": "1250:33:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 510,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1250:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 530,
										"nodeType": "Block",
										"src": "1828:92:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 522,
															"name": "beacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "1874:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 523,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "1882:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 519,
															"name": "ERC1967Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "1838:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$462_$",
																"typeString": "type(library ERC1967Utils)"
															}
														},
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1851:22:4",
														"memberName": "upgradeBeaconToAndCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 447,
														"src": "1838:35:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1838:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 525,
												"nodeType": "ExpressionStatement",
												"src": "1838:49:4"
											},
											{
												"expression": {
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 526,
														"name": "_beacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 511,
														"src": "1897:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 527,
														"name": "beacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "1907:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1897:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 529,
												"nodeType": "ExpressionStatement",
												"src": "1897:16:4"
											}
										]
									},
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "1290:478:4",
										"text": " @dev Initializes the proxy with `beacon`.\n If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\n will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity\n constructor.\n Requirements:\n - `beacon` must be a contract with the interface {IBeacon}.\n - If `data` is empty, `msg.value` must be zero."
									},
									"id": 531,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1793:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "1785:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1785:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1814:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "1801:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 515,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1801:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1784:35:4"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1828:0:4"
									},
									"scope": 556,
									"src": "1773:147:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										479
									],
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "2099:62:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 539,
																		"name": "_getBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 555,
																		"src": "2124:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2124:12:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 538,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "2116:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$566_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2116:21:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$566",
																"typeString": "contract IBeacon"
															}
														},
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2138:14:4",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 565,
														"src": "2116:36:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2116:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 537,
												"id": 544,
												"nodeType": "Return",
												"src": "2109:45:4"
											}
										]
									},
									"documentation": {
										"id": 532,
										"nodeType": "StructuredDocumentation",
										"src": "1926:92:4",
										"text": " @dev Returns the current implementation address of the associated beacon."
									},
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "2032:15:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 534,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2072:8:4"
									},
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2047:2:4"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "2090:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2090:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2089:9:4"
									},
									"scope": 556,
									"src": "2023:138:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "2277:31:4",
										"statements": [
											{
												"expression": {
													"id": 552,
													"name": "_beacon",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 511,
													"src": "2294:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 551,
												"id": 553,
												"nodeType": "Return",
												"src": "2287:14:4"
											}
										]
									},
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "2167:43:4",
										"text": " @dev Returns the beacon."
									},
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getBeacon",
									"nameLocation": "2224:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2234:2:4"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "2268:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2268:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2267:9:4"
									},
									"scope": 556,
									"src": "2215:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 557,
							"src": "1116:1194:4",
							"usedErrors": [
								188,
								198,
								201,
								918,
								1210
							],
							"usedEvents": [
								167
							]
						}
					],
					"src": "112:2199:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							566
						]
					},
					"id": 567,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 558,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 559,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:5",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 566,
							"linearizedBaseContracts": [
								566
							],
							"name": "IBeacon",
							"nameLocation": "224:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:5",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 565,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:5"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "460:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:5"
									},
									"scope": 566,
									"src": "411:58:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 567,
							"src": "214:257:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							566
						],
						"Ownable": [
							147
						],
						"UpgradeableBeacon": [
							654
						]
					},
					"id": 655,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 568,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "./IBeacon.sol",
							"id": 570,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 655,
							"sourceUnit": 567,
							"src": "144:38:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 569,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 566,
										"src": "152:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "../../access/Ownable.sol",
							"id": 572,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 655,
							"sourceUnit": 148,
							"src": "183:49:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 571,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "191:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 574,
										"name": "IBeacon",
										"nameLocations": [
											"585:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 566,
										"src": "585:7:6"
									},
									"id": 575,
									"nodeType": "InheritanceSpecifier",
									"src": "585:7:6"
								},
								{
									"baseName": {
										"id": 576,
										"name": "Ownable",
										"nameLocations": [
											"594:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "594:7:6"
									},
									"id": 577,
									"nodeType": "InheritanceSpecifier",
									"src": "594:7:6"
								}
							],
							"canonicalName": "UpgradeableBeacon",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 573,
								"nodeType": "StructuredDocumentation",
								"src": "234:320:6",
								"text": " @dev This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their\n implementation contract, which is where they will delegate all function calls.\n An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon."
							},
							"fullyImplemented": true,
							"id": 654,
							"linearizedBaseContracts": [
								654,
								147,
								1197,
								566
							],
							"name": "UpgradeableBeacon",
							"nameLocation": "564:17:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 579,
									"mutability": "mutable",
									"name": "_implementation",
									"nameLocation": "624:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 654,
									"src": "608:31:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 578,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "608:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "646:70:6",
										"text": " @dev The `implementation` of the beacon is invalid."
									},
									"errorSelector": "847ac564",
									"id": 584,
									"name": "BeaconInvalidImplementation",
									"nameLocation": "727:27:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "763:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "755:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "755:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "754:24:6"
									},
									"src": "721:58:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "785:90:6",
										"text": " @dev Emitted when the implementation returned by the beacon is changed."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 589,
									"name": "Upgraded",
									"nameLocation": "886:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "911:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "895:30:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "895:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "894:32:6"
									},
									"src": "880:47:6"
								},
								{
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "1140:52:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 601,
															"name": "implementation_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "1169:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 600,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "1150:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1150:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 603,
												"nodeType": "ExpressionStatement",
												"src": "1150:35:6"
											}
										]
									},
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "933:121:6",
										"text": " @dev Sets the address of the initial implementation, and the initial owner who can upgrade the beacon."
									},
									"id": 605,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 597,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 594,
													"src": "1126:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 598,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 596,
												"name": "Ownable",
												"nameLocations": [
													"1118:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1118:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1118:21:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "implementation_",
												"nameLocation": "1079:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "1071:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1071:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1104:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "1096:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1096:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1070:47:6"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1140:0:6"
									},
									"scope": 654,
									"src": "1059:133:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										565
									],
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "1334:39:6",
										"statements": [
											{
												"expression": {
													"id": 611,
													"name": "_implementation",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 579,
													"src": "1351:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 610,
												"id": 612,
												"nodeType": "Return",
												"src": "1344:22:6"
											}
										]
									},
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "1198:67:6",
										"text": " @dev Returns the current implementation address."
									},
									"functionSelector": "5c60da1b",
									"id": 614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "1279:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1293:2:6"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "1325:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1325:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:9:6"
									},
									"scope": 654,
									"src": "1270:103:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "1703:54:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 623,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "1732:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 622,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "1713:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1713:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 625,
												"nodeType": "ExpressionStatement",
												"src": "1713:37:6"
											}
										]
									},
									"documentation": {
										"id": 615,
										"nodeType": "StructuredDocumentation",
										"src": "1379:248:6",
										"text": " @dev Upgrades the beacon to a new implementation.\n Emits an {Upgraded} event.\n Requirements:\n - msg.sender must be the owner of the contract.\n - `newImplementation` must be a contract."
									},
									"functionSelector": "3659cfe6",
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 620,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 619,
												"name": "onlyOwner",
												"nameLocations": [
													"1693:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1693:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1693:9:6"
										}
									],
									"name": "upgradeTo",
									"nameLocation": "1641:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1659:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "1651:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1651:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1650:27:6"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1703:0:6"
									},
									"scope": 654,
									"src": "1632:125:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "1995:221:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 633,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "2009:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2027:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "2009:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2032:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2009:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 636,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2042:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2009:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 643,
												"nodeType": "IfStatement",
												"src": "2005:118:6",
												"trueBody": {
													"id": 642,
													"nodeType": "Block",
													"src": "2045:78:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 639,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 630,
																		"src": "2094:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 638,
																	"name": "BeaconInvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "2066:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2066:46:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 641,
															"nodeType": "RevertStatement",
															"src": "2059:53:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 644,
														"name": "_implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 579,
														"src": "2132:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 645,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "2150:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2132:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "2132:35:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 649,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "2191:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 648,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "2182:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2182:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 651,
												"nodeType": "EmitStatement",
												"src": "2177:32:6"
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "1763:164:6",
										"text": " @dev Sets the implementation contract address for this beacon\n Requirements:\n - `newImplementation` must be a contract."
									},
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1941:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1968:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "1960:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1960:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:27:6"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1995:0:6"
									},
									"scope": 654,
									"src": "1932:284:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 655,
							"src": "555:1663:6",
							"usedErrors": [
								13,
								18,
								584
							],
							"usedEvents": [
								24,
								589
							]
						}
					],
					"src": "118:2101:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							908
						]
					},
					"id": 909,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 656,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 657,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:7",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 908,
							"linearizedBaseContracts": [
								908
							],
							"name": "Initializable",
							"nameLocation": "2367:13:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:7",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 665,
									"members": [
										{
											"constant": false,
											"id": 661,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:7",
											"nodeType": "VariableDeclaration",
											"scope": 665,
											"src": "2813:19:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 660,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 664,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:7",
											"nodeType": "VariableDeclaration",
											"scope": 665,
											"src": "2950:18:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 663,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:7",
									"nodeType": "StructDefinition",
									"scope": 908,
									"src": "2685:290:7",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 668,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:7",
									"nodeType": "VariableDeclaration",
									"scope": 908,
									"src": "3098:115:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 666,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 667,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 669,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:7",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 671,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:7"
									},
									"src": "3285:30:7"
								},
								{
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:7",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 674,
									"name": "NotInitializing",
									"nameLocation": "3389:15:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:7"
									},
									"src": "3383:24:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:7",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 679,
									"name": "Initialized",
									"nameLocation": "3514:11:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "3526:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 676,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:7"
									},
									"src": "3508:34:7"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "4092:1081:7",
										"statements": [
											{
												"assignments": [
													684
												],
												"declarations": [
													{
														"constant": false,
														"id": 684,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:7",
														"nodeType": "VariableDeclaration",
														"scope": 761,
														"src": "4158:30:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$665_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 683,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 682,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 665,
																"src": "4158:20:7"
															},
															"referencedDeclaration": 665,
															"src": "4158:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$665_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 687,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 685,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "4191:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$665_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$665_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:7"
											},
											{
												"assignments": [
													689
												],
												"declarations": [
													{
														"constant": false,
														"id": 689,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:7",
														"nodeType": "VariableDeclaration",
														"scope": 761,
														"src": "4279:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 688,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 693,
												"initialValue": {
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:7",
													"subExpression": {
														"expression": {
															"id": 690,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "4302:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$665_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 691,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:7",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 664,
														"src": "4302:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:7"
											},
											{
												"assignments": [
													695
												],
												"declarations": [
													{
														"constant": false,
														"id": 695,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 761,
														"src": "4327:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 694,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 698,
												"initialValue": {
													"expression": {
														"id": 696,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 684,
														"src": "4348:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$665_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:7",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 661,
													"src": "4348:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:7"
											},
											{
												"assignments": [
													700
												],
												"declarations": [
													{
														"constant": false,
														"id": 700,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 761,
														"src": "4706:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 699,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 706,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 703,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 701,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "4726:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 704,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "4746:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:7"
											},
											{
												"assignments": [
													708
												],
												"declarations": [
													{
														"constant": false,
														"id": 708,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 761,
														"src": "4770:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 707,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 721,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 709,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "4790:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 719,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 714,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$908",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$908",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 713,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 712,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:7",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:7",
														"subExpression": {
															"id": 722,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "4856:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:7",
														"subExpression": {
															"id": 724,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "4873:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "4851:91:7",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "4887:55:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 727,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "4908:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "4901:30:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 732,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "4951:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$665_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 734,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:7",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 661,
														"src": "4951:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 735,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:7"
											},
											{
												"condition": {
													"id": 738,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 689,
													"src": "4983:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 746,
												"nodeType": "IfStatement",
												"src": "4979:67:7",
												"trueBody": {
													"id": 745,
													"nodeType": "Block",
													"src": "4999:47:7",
													"statements": [
														{
															"expression": {
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 739,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 684,
																		"src": "5013:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$665_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 741,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:7",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 664,
																	"src": "5013:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 744,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:7"
														}
													]
												}
											},
											{
												"id": 747,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:7"
											},
											{
												"condition": {
													"id": 748,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 689,
													"src": "5070:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 760,
												"nodeType": "IfStatement",
												"src": "5066:101:7",
												"trueBody": {
													"id": 759,
													"nodeType": "Block",
													"src": "5086:81:7",
													"statements": [
														{
															"expression": {
																"id": 753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 749,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 684,
																		"src": "5100:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$665_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 751,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:7",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 664,
																	"src": "5100:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 754,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:7"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 755,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "5142:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 758,
															"nodeType": "EmitStatement",
															"src": "5137:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:7",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 762,
									"name": "initializer",
									"nameLocation": "4078:11:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:7"
									},
									"src": "4069:1104:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 808,
										"nodeType": "Block",
										"src": "6291:392:7",
										"statements": [
											{
												"assignments": [
													769
												],
												"declarations": [
													{
														"constant": false,
														"id": 769,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:7",
														"nodeType": "VariableDeclaration",
														"scope": 808,
														"src": "6357:30:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$665_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 768,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 767,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 665,
																"src": "6357:20:7"
															},
															"referencedDeclaration": 665,
															"src": "6357:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$665_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 772,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 770,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "6390:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$665_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$665_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 773,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "6431:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$665_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 774,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:7",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 664,
														"src": "6431:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 778,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 775,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "6450:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$665_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 776,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:7",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 661,
															"src": "6450:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 777,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "6468:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 784,
												"nodeType": "IfStatement",
												"src": "6427:105:7",
												"trueBody": {
													"id": 783,
													"nodeType": "Block",
													"src": "6477:55:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 780,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "6498:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 782,
															"nodeType": "RevertStatement",
															"src": "6491:30:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 785,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "6541:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$665_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 787,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:7",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 661,
														"src": "6541:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 788,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "6558:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:7"
											},
											{
												"expression": {
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 791,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "6575:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$665_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 793,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:7",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 664,
														"src": "6575:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 794,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:7"
											},
											{
												"id": 797,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:7"
											},
											{
												"expression": {
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 798,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "6618:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$665_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 800,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:7",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 664,
														"src": "6618:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 801,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 803,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 805,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "6668:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 804,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "6656:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 807,
												"nodeType": "EmitStatement",
												"src": "6651:25:7"
											}
										]
									},
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:7",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 809,
									"name": "reinitializer",
									"nameLocation": "6261:13:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "6275:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 764,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:7"
									},
									"src": "6252:431:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 816,
										"nodeType": "Block",
										"src": "6921:48:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 812,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "6931:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 814,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:7"
											},
											{
												"id": 815,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:7"
											}
										]
									},
									"documentation": {
										"id": 810,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:7",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 817,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:7"
									},
									"src": "6893:76:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 829,
										"nodeType": "Block",
										"src": "7136:89:7",
										"statements": [
											{
												"condition": {
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:7",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 821,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "7151:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 828,
												"nodeType": "IfStatement",
												"src": "7146:73:7",
												"trueBody": {
													"id": 827,
													"nodeType": "Block",
													"src": "7170:49:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 824,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 674,
																	"src": "7191:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 826,
															"nodeType": "RevertStatement",
															"src": "7184:24:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 818,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:7",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:7"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:7"
									},
									"scope": 908,
									"src": "7084:141:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 875,
										"nodeType": "Block",
										"src": "7760:373:7",
										"statements": [
											{
												"assignments": [
													836
												],
												"declarations": [
													{
														"constant": false,
														"id": 836,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:7",
														"nodeType": "VariableDeclaration",
														"scope": 875,
														"src": "7826:30:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$665_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 835,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 834,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 665,
																"src": "7826:20:7"
															},
															"referencedDeclaration": 665,
															"src": "7826:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$665_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 839,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 837,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "7859:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$665_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$665_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:7"
											},
											{
												"condition": {
													"expression": {
														"id": 840,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "7900:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$665_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:7",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 664,
													"src": "7900:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 846,
												"nodeType": "IfStatement",
												"src": "7896:76:7",
												"trueBody": {
													"id": 845,
													"nodeType": "Block",
													"src": "7917:55:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 842,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "7938:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 844,
															"nodeType": "RevertStatement",
															"src": "7931:30:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 847,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "7985:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$665_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 848,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:7",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 661,
														"src": "7985:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 850,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 849,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 853,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 874,
												"nodeType": "IfStatement",
												"src": "7981:146:7",
												"trueBody": {
													"id": 873,
													"nodeType": "Block",
													"src": "8021:106:7",
													"statements": [
														{
															"expression": {
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 855,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 836,
																		"src": "8035:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$665_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 857,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:7",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 661,
																	"src": "8035:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 860,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 859,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:7",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 858,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 861,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:7",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 864,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:7"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 868,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 867,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:7",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 866,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 869,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:7",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 865,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "8087:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 872,
															"nodeType": "EmitStatement",
															"src": "8082:34:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 831,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:7",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:7"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:7"
									},
									"scope": 908,
									"src": "7711:422:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 886,
										"nodeType": "Block",
										"src": "8308:63:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 882,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "8325:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$665_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 883,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$665_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 884,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:7",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 661,
													"src": "8325:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 881,
												"id": 885,
												"nodeType": "Return",
												"src": "8318:46:7"
											}
										]
									},
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:7",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:7"
									},
									"returnParameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "8300:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 879,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:7"
									},
									"scope": 908,
									"src": "8243:128:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "8543:64:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 893,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "8560:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$665_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$665_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 895,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:7",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 664,
													"src": "8560:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 892,
												"id": 896,
												"nodeType": "Return",
												"src": "8553:47:7"
											}
										]
									},
									"documentation": {
										"id": 888,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:7",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:7"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "8537:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 890,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:7"
									},
									"scope": 908,
									"src": "8487:120:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "8827:80:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:7",
													"nodeType": "YulBlock",
													"src": "8846:55:7",
													"statements": [
														{
															"nativeSrc": "8860:31:7",
															"nodeType": "YulAssignment",
															"src": "8860:31:7",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:7",
																"nodeType": "YulIdentifier",
																"src": "8870:21:7"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:7"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 903,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 668,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:7",
														"valueSize": 1
													}
												],
												"id": 905,
												"nodeType": "InlineAssembly",
												"src": "8837:64:7"
											}
										]
									},
									"documentation": {
										"id": 899,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:7",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:7"
									},
									"returnParameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "8795:30:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$665_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 902,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 901,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 665,
														"src": "8795:20:7"
													},
													"referencedDeclaration": 665,
													"src": "8795:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$665_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:7"
									},
									"scope": 908,
									"src": "8737:170:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 909,
							"src": "2349:6560:7",
							"usedErrors": [
								671,
								674
							],
							"usedEvents": [
								679
							]
						}
					],
					"src": "113:8797:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1167
						],
						"Errors": [
							1219
						]
					},
					"id": 1168,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 910,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 912,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1168,
							"sourceUnit": 1220,
							"src": "127:36:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 911,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1219,
										"src": "135:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 913,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:8",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1167,
							"linearizedBaseContracts": [
								1167
							],
							"name": "Address",
							"nameLocation": "241:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 914,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:8",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 918,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "358:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 915,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:8"
									},
									"src": "335:39:8"
								},
								{
									"body": {
										"id": 964,
										"nodeType": "Block",
										"src": "1361:278:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 928,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1167",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1167",
																		"typeString": "library Address"
																	}
																],
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 926,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 931,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 923,
														"src": "1399:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 945,
												"nodeType": "IfStatement",
												"src": "1371:125:8",
												"trueBody": {
													"id": 944,
													"nodeType": "Block",
													"src": "1407:89:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 938,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1167",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1167",
																						"typeString": "library Address"
																					}
																				],
																				"id": 937,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 936,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 939,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 940,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:8",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 941,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 923,
																		"src": "1478:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 933,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1219,
																		"src": "1428:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1219_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:8",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1207,
																	"src": "1428:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 943,
															"nodeType": "RevertStatement",
															"src": "1421:64:8"
														}
													]
												}
											},
											{
												"assignments": [
													947,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 947,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 964,
														"src": "1507:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 946,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 954,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 948,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "1525:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1525:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 951,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 950,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 923,
																"src": "1547:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1525:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:52:8"
											},
											{
												"condition": {
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1572:8:8",
													"subExpression": {
														"id": 955,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "1573:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 963,
												"nodeType": "IfStatement",
												"src": "1568:65:8",
												"trueBody": {
													"id": 962,
													"nodeType": "Block",
													"src": "1582:51:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 957,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1219,
																		"src": "1603:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1219_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1610:10:8",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1210,
																	"src": "1603:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1603:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 961,
															"nodeType": "RevertStatement",
															"src": "1596:26:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:8",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "1309:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "1336:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:8"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:8"
									},
									"scope": 1167,
									"src": "1290:349:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "2573:62:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 976,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "2612:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 977,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "2620:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 975,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "2590:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 974,
												"id": 980,
												"nodeType": "Return",
												"src": "2583:45:8"
											}
										]
									},
									"documentation": {
										"id": 966,
										"nodeType": "StructuredDocumentation",
										"src": "1645:834:8",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2493:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2514:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "2506:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2535:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "2522:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 969,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2522:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:35:8"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "2559:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 972,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2559:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:14:8"
									},
									"scope": 1167,
									"src": "2484:151:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "3072:294:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 996,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3094:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1167",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1167",
																		"typeString": "library Address"
																	}
																],
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3086:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 994,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3086:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 998,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3100:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3086:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 999,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "3110:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1013,
												"nodeType": "IfStatement",
												"src": "3082:123:8",
												"trueBody": {
													"id": 1012,
													"nodeType": "Block",
													"src": "3117:88:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1006,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3173:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1167",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1167",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1005,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3165:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1004,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3165:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1007,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3165:13:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3179:7:8",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3165:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1009,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 989,
																		"src": "3188:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1001,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1219,
																		"src": "3138:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1219_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:19:8",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1207,
																	"src": "3138:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:56:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1011,
															"nodeType": "RevertStatement",
															"src": "3131:63:8"
														}
													]
												}
											},
											{
												"assignments": [
													1015,
													1017
												],
												"declarations": [
													{
														"constant": false,
														"id": 1015,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1031,
														"src": "3215:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1014,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1017,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3242:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1031,
														"src": "3229:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1016,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3229:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1024,
												"initialValue": {
													"arguments": [
														{
															"id": 1022,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "3282:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1018,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 985,
																"src": "3256:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3263:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3256:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1021,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1020,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 989,
																"src": "3275:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3256:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3214:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1026,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "3331:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1027,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "3339:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1028,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1017,
															"src": "3348:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1025,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1124,
														"src": "3304:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 993,
												"id": 1030,
												"nodeType": "Return",
												"src": "3297:62:8"
											}
										]
									},
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "2641:313:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2968:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2998:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "2990:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3019:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "3006:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 986,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3006:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3033:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "3025:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:50:8"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "3058:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 991,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3058:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:14:8"
									},
									"scope": 1167,
									"src": "2959:407:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1057,
										"nodeType": "Block",
										"src": "3605:154:8",
										"statements": [
											{
												"assignments": [
													1043,
													1045
												],
												"declarations": [
													{
														"constant": false,
														"id": 1043,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3621:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1057,
														"src": "3616:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1042,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1045,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3643:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1057,
														"src": "3630:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1044,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3630:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1050,
												"initialValue": {
													"arguments": [
														{
															"id": 1048,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "3675:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1046,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "3657:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1047,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:8",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3657:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1052,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "3724:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1053,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "3732:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1054,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "3741:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1051,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1124,
														"src": "3697:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1041,
												"id": 1056,
												"nodeType": "Return",
												"src": "3690:62:8"
											}
										]
									},
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "3372:128:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1058,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3514:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3541:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "3533:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3562:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "3549:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1036,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3549:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:35:8"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "3591:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1039,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:14:8"
									},
									"scope": 1167,
									"src": "3505:254:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "3997:156:8",
										"statements": [
											{
												"assignments": [
													1069,
													1071
												],
												"declarations": [
													{
														"constant": false,
														"id": 1069,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4013:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1083,
														"src": "4008:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1068,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4008:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1071,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4035:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1083,
														"src": "4022:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1070,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4022:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1076,
												"initialValue": {
													"arguments": [
														{
															"id": 1074,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1063,
															"src": "4069:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1072,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "4049:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1073,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4056:12:8",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4049:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1078,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "4118:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1079,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "4126:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1080,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "4135:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1077,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1124,
														"src": "4091:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1067,
												"id": 1082,
												"nodeType": "Return",
												"src": "4084:62:8"
											}
										]
									},
									"documentation": {
										"id": 1059,
										"nodeType": "StructuredDocumentation",
										"src": "3765:130:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3909:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3938:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "3930:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1060,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3959:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "3946:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1062,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:35:8"
									},
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "3983:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1065,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3983:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:14:8"
									},
									"scope": 1167,
									"src": "3900:253:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1123,
										"nodeType": "Block",
										"src": "4579:424:8",
										"statements": [
											{
												"condition": {
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4593:8:8",
													"subExpression": {
														"id": 1096,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1089,
														"src": "4594:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1121,
													"nodeType": "Block",
													"src": "4653:344:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1103,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1091,
																			"src": "4841:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4852:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4841:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4841:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1107,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1087,
																				"src": "4867:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4874:4:8",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4867:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4879:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4867:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4889:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4867:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4841:49:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1118,
															"nodeType": "IfStatement",
															"src": "4837:119:8",
															"trueBody": {
																"id": 1117,
																"nodeType": "Block",
																"src": "4892:64:8",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1114,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1087,
																					"src": "4934:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1113,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 918,
																				"src": "4917:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4917:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1116,
																		"nodeType": "RevertStatement",
																		"src": "4910:31:8"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1119,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1091,
																"src": "4976:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1095,
															"id": 1120,
															"nodeType": "Return",
															"src": "4969:17:8"
														}
													]
												},
												"id": 1122,
												"nodeType": "IfStatement",
												"src": "4589:408:8",
												"trueBody": {
													"id": 1102,
													"nodeType": "Block",
													"src": "4603:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1099,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1091,
																		"src": "4625:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1098,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "4617:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4617:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1101,
															"nodeType": "ExpressionStatement",
															"src": "4617:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "4159:257:8",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 1124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4430:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4474:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "4466:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4495:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "4490:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1088,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4490:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4525:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "4512:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1090,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:85:8"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "4565:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1093,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4565:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:14:8"
									},
									"scope": 1167,
									"src": "4421:582:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1145,
										"nodeType": "Block",
										"src": "5307:122:8",
										"statements": [
											{
												"condition": {
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5321:8:8",
													"subExpression": {
														"id": 1134,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "5322:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1143,
													"nodeType": "Block",
													"src": "5381:42:8",
													"statements": [
														{
															"expression": {
																"id": 1141,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1129,
																"src": "5402:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1133,
															"id": 1142,
															"nodeType": "Return",
															"src": "5395:17:8"
														}
													]
												},
												"id": 1144,
												"nodeType": "IfStatement",
												"src": "5317:106:8",
												"trueBody": {
													"id": 1140,
													"nodeType": "Block",
													"src": "5331:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1137,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1129,
																		"src": "5353:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1136,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "5345:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5345:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1139,
															"nodeType": "ExpressionStatement",
															"src": "5345:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1125,
										"nodeType": "StructuredDocumentation",
										"src": "5009:191:8",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 1146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5214:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5236:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "5231:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1126,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5258:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "5245:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1128,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:39:8"
									},
									"returnParameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "5293:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1131,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5293:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:14:8"
									},
									"scope": 1167,
									"src": "5205:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1165,
										"nodeType": "Block",
										"src": "5598:432:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1152,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "5674:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1154,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5694:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5674:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1163,
													"nodeType": "Block",
													"src": "5973:51:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1158,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1219,
																		"src": "5994:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1219_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6001:10:8",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1210,
																	"src": "5994:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5994:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1162,
															"nodeType": "RevertStatement",
															"src": "5987:26:8"
														}
													]
												},
												"id": 1164,
												"nodeType": "IfStatement",
												"src": "5670:354:8",
												"trueBody": {
													"id": 1157,
													"nodeType": "Block",
													"src": "5697:270:8",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5824:133:8",
																"nodeType": "YulBlock",
																"src": "5824:133:8",
																"statements": [
																	{
																		"nativeSrc": "5842:40:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5842:40:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5871:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "5871:10:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5865:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5865:5:8"
																			},
																			"nativeSrc": "5865:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5865:17:8"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5846:15:8",
																				"nodeType": "YulTypedName",
																				"src": "5846:15:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5910:2:8",
																							"nodeType": "YulLiteral",
																							"src": "5910:2:8",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5914:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "5914:10:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5906:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "5906:3:8"
																					},
																					"nativeSrc": "5906:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5906:19:8"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5927:15:8",
																					"nodeType": "YulIdentifier",
																					"src": "5927:15:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5899:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5899:6:8"
																			},
																			"nativeSrc": "5899:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:44:8"
																		},
																		"nativeSrc": "5899:44:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:44:8"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1149,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5871:10:8",
																	"valueSize": 1
																},
																{
																	"declaration": 1149,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5914:10:8",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 1156,
															"nodeType": "InlineAssembly",
															"src": "5799:158:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1147,
										"nodeType": "StructuredDocumentation",
										"src": "5435:103:8",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 1166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5552:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5573:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "5560:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1148,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5560:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:25:8"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5598:0:8"
									},
									"scope": 1167,
									"src": "5543:487:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1168,
							"src": "233:5799:8",
							"usedErrors": [
								918
							],
							"usedEvents": []
						}
					],
					"src": "101:5932:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1197
						]
					},
					"id": 1198,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1169,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1170,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1197,
							"linearizedBaseContracts": [
								1197
							],
							"name": "Context",
							"nameLocation": "642:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1178,
										"nodeType": "Block",
										"src": "718:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1175,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1174,
												"id": 1177,
												"nodeType": "Return",
												"src": "728:17:9"
											}
										]
									},
									"id": 1179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:9"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "709:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:9"
									},
									"scope": 1197,
									"src": "656:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1187,
										"nodeType": "Block",
										"src": "825:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1184,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1183,
												"id": 1186,
												"nodeType": "Return",
												"src": "835:15:9"
											}
										]
									},
									"id": 1188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:9"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "809:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1181,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:9"
									},
									"scope": 1197,
									"src": "758:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1195,
										"nodeType": "Block",
										"src": "935:25:9",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1192,
												"id": 1194,
												"nodeType": "Return",
												"src": "945:8:9"
											}
										]
									},
									"id": 1196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:9"
									},
									"returnParameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "926:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:9"
									},
									"scope": 1197,
									"src": "863:97:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1198,
							"src": "624:338:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1219
						]
					},
					"id": 1220,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1199,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1200,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:10",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1219,
							"linearizedBaseContracts": [
								1219
							],
							"name": "Errors",
							"nameLocation": "419:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1201,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:10",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1207,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "557:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "574:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:10"
									},
									"src": "531:59:10"
								},
								{
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:10",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1210,
									"name": "FailedCall",
									"nameLocation": "696:10:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:10"
									},
									"src": "690:19:10"
								},
								{
									"documentation": {
										"id": 1211,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:10",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1213,
									"name": "FailedDeployment",
									"nameLocation": "772:16:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:10"
									},
									"src": "766:25:10"
								},
								{
									"documentation": {
										"id": 1214,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:10",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 1218,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "884:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:10"
									},
									"src": "860:33:10"
								}
							],
							"scope": 1220,
							"src": "411:484:10",
							"usedErrors": [
								1207,
								1210,
								1213,
								1218
							],
							"usedEvents": []
						}
					],
					"src": "100:796:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1343
						]
					},
					"id": 1344,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1221,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1222,
								"nodeType": "StructuredDocumentation",
								"src": "219:1187:11",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."
							},
							"fullyImplemented": true,
							"id": 1343,
							"linearizedBaseContracts": [
								1343
							],
							"name": "StorageSlot",
							"nameLocation": "1415:11:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1225,
									"members": [
										{
											"constant": false,
											"id": 1224,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1225,
											"src": "1462:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1223,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1440:11:11",
									"nodeType": "StructDefinition",
									"scope": 1343,
									"src": "1433:49:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1228,
									"members": [
										{
											"constant": false,
											"id": 1227,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1522:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1228,
											"src": "1517:10:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1226,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1517:4:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1495:11:11",
									"nodeType": "StructDefinition",
									"scope": 1343,
									"src": "1488:46:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1231,
									"members": [
										{
											"constant": false,
											"id": 1230,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1577:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1231,
											"src": "1569:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1229,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1569:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1547:11:11",
									"nodeType": "StructDefinition",
									"scope": 1343,
									"src": "1540:49:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1234,
									"members": [
										{
											"constant": false,
											"id": 1233,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1632:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1234,
											"src": "1624:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1232,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1624:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1602:11:11",
									"nodeType": "StructDefinition",
									"scope": 1343,
									"src": "1595:49:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Int256Slot",
									"id": 1237,
									"members": [
										{
											"constant": false,
											"id": 1236,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1685:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1237,
											"src": "1678:12:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 1235,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Int256Slot",
									"nameLocation": "1657:10:11",
									"nodeType": "StructDefinition",
									"scope": 1343,
									"src": "1650:47:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1240,
									"members": [
										{
											"constant": false,
											"id": 1239,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1738:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1240,
											"src": "1731:12:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1238,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1731:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1710:10:11",
									"nodeType": "StructDefinition",
									"scope": 1343,
									"src": "1703:47:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1243,
									"members": [
										{
											"constant": false,
											"id": 1242,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1789:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1243,
											"src": "1783:11:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1241,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1783:5:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1763:9:11",
									"nodeType": "StructDefinition",
									"scope": 1343,
									"src": "1756:45:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1253,
										"nodeType": "Block",
										"src": "1983:79:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2018:38:11",
													"nodeType": "YulBlock",
													"src": "2018:38:11",
													"statements": [
														{
															"nativeSrc": "2032:14:11",
															"nodeType": "YulAssignment",
															"src": "2032:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "2042:4:11",
																"nodeType": "YulIdentifier",
																"src": "2042:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2032:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1250,
														"isOffset": false,
														"isSlot": true,
														"src": "2032:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1246,
														"isOffset": false,
														"isSlot": false,
														"src": "2042:4:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1252,
												"nodeType": "InlineAssembly",
												"src": "1993:63:11"
											}
										]
									},
									"documentation": {
										"id": 1244,
										"nodeType": "StructuredDocumentation",
										"src": "1807:87:11",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1908:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1931:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "1923:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1245,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:14:11"
									},
									"returnParameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1980:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "1960:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1225_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1249,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1248,
														"name": "AddressSlot",
														"nameLocations": [
															"1960:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1225,
														"src": "1960:11:11"
													},
													"referencedDeclaration": 1225,
													"src": "1960:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1225_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:23:11"
									},
									"scope": 1343,
									"src": "1899:163:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1264,
										"nodeType": "Block",
										"src": "2243:79:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2278:38:11",
													"nodeType": "YulBlock",
													"src": "2278:38:11",
													"statements": [
														{
															"nativeSrc": "2292:14:11",
															"nodeType": "YulAssignment",
															"src": "2292:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "2302:4:11",
																"nodeType": "YulIdentifier",
																"src": "2302:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2292:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2292:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1261,
														"isOffset": false,
														"isSlot": true,
														"src": "2292:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1257,
														"isOffset": false,
														"isSlot": false,
														"src": "2302:4:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1263,
												"nodeType": "InlineAssembly",
												"src": "2253:63:11"
											}
										]
									},
									"documentation": {
										"id": 1255,
										"nodeType": "StructuredDocumentation",
										"src": "2068:86:11",
										"text": " @dev Returns a `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2168:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2191:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "2183:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1256,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:14:11"
									},
									"returnParameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2240:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "2220:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1228_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1260,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1259,
														"name": "BooleanSlot",
														"nameLocations": [
															"2220:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1228,
														"src": "2220:11:11"
													},
													"referencedDeclaration": 1228,
													"src": "2220:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1228_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:23:11"
									},
									"scope": 1343,
									"src": "2159:163:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1275,
										"nodeType": "Block",
										"src": "2503:79:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2538:38:11",
													"nodeType": "YulBlock",
													"src": "2538:38:11",
													"statements": [
														{
															"nativeSrc": "2552:14:11",
															"nodeType": "YulAssignment",
															"src": "2552:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "2562:4:11",
																"nodeType": "YulIdentifier",
																"src": "2562:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2552:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2552:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1272,
														"isOffset": false,
														"isSlot": true,
														"src": "2552:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1268,
														"isOffset": false,
														"isSlot": false,
														"src": "2562:4:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1274,
												"nodeType": "InlineAssembly",
												"src": "2513:63:11"
											}
										]
									},
									"documentation": {
										"id": 1266,
										"nodeType": "StructuredDocumentation",
										"src": "2328:86:11",
										"text": " @dev Returns a `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2428:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2451:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "2443:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1267,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2442:14:11"
									},
									"returnParameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2500:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "2480:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1231_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1271,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1270,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2480:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1231,
														"src": "2480:11:11"
													},
													"referencedDeclaration": 1231,
													"src": "2480:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1231_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:23:11"
									},
									"scope": 1343,
									"src": "2419:163:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1286,
										"nodeType": "Block",
										"src": "2763:79:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2798:38:11",
													"nodeType": "YulBlock",
													"src": "2798:38:11",
													"statements": [
														{
															"nativeSrc": "2812:14:11",
															"nodeType": "YulAssignment",
															"src": "2812:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "2822:4:11",
																"nodeType": "YulIdentifier",
																"src": "2822:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2812:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1283,
														"isOffset": false,
														"isSlot": true,
														"src": "2812:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1279,
														"isOffset": false,
														"isSlot": false,
														"src": "2822:4:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1285,
												"nodeType": "InlineAssembly",
												"src": "2773:63:11"
											}
										]
									},
									"documentation": {
										"id": 1277,
										"nodeType": "StructuredDocumentation",
										"src": "2588:86:11",
										"text": " @dev Returns a `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2688:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2711:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "2703:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1278,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:14:11"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2760:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "2740:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1234_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1282,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1281,
														"name": "Uint256Slot",
														"nameLocations": [
															"2740:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1234,
														"src": "2740:11:11"
													},
													"referencedDeclaration": 1234,
													"src": "2740:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1234_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:23:11"
									},
									"scope": 1343,
									"src": "2679:163:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1297,
										"nodeType": "Block",
										"src": "3020:79:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3055:38:11",
													"nodeType": "YulBlock",
													"src": "3055:38:11",
													"statements": [
														{
															"nativeSrc": "3069:14:11",
															"nodeType": "YulAssignment",
															"src": "3069:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "3079:4:11",
																"nodeType": "YulIdentifier",
																"src": "3079:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3069:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3069:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1294,
														"isOffset": false,
														"isSlot": true,
														"src": "3069:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1290,
														"isOffset": false,
														"isSlot": false,
														"src": "3079:4:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1296,
												"nodeType": "InlineAssembly",
												"src": "3030:63:11"
											}
										]
									},
									"documentation": {
										"id": 1288,
										"nodeType": "StructuredDocumentation",
										"src": "2848:85:11",
										"text": " @dev Returns a `Int256Slot` with member `value` located at `slot`."
									},
									"id": 1298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInt256Slot",
									"nameLocation": "2947:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2969:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "2961:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1289,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2960:14:11"
									},
									"returnParameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3017:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "2998:20:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Int256Slot_$1237_storage_ptr",
													"typeString": "struct StorageSlot.Int256Slot"
												},
												"typeName": {
													"id": 1293,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1292,
														"name": "Int256Slot",
														"nameLocations": [
															"2998:10:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1237,
														"src": "2998:10:11"
													},
													"referencedDeclaration": 1237,
													"src": "2998:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Int256Slot_$1237_storage_ptr",
														"typeString": "struct StorageSlot.Int256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:22:11"
									},
									"scope": 1343,
									"src": "2938:161:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1308,
										"nodeType": "Block",
										"src": "3277:79:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3312:38:11",
													"nodeType": "YulBlock",
													"src": "3312:38:11",
													"statements": [
														{
															"nativeSrc": "3326:14:11",
															"nodeType": "YulAssignment",
															"src": "3326:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "3336:4:11",
																"nodeType": "YulIdentifier",
																"src": "3336:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3326:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1305,
														"isOffset": false,
														"isSlot": true,
														"src": "3326:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1301,
														"isOffset": false,
														"isSlot": false,
														"src": "3336:4:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1307,
												"nodeType": "InlineAssembly",
												"src": "3287:63:11"
											}
										]
									},
									"documentation": {
										"id": 1299,
										"nodeType": "StructuredDocumentation",
										"src": "3105:85:11",
										"text": " @dev Returns a `StringSlot` with member `value` located at `slot`."
									},
									"id": 1309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3204:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3226:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "3218:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1300,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3217:14:11"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3274:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "3255:20:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1240_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1304,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1303,
														"name": "StringSlot",
														"nameLocations": [
															"3255:10:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1240,
														"src": "3255:10:11"
													},
													"referencedDeclaration": 1240,
													"src": "3255:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1240_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:22:11"
									},
									"scope": 1343,
									"src": "3195:161:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1319,
										"nodeType": "Block",
										"src": "3558:85:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3593:44:11",
													"nodeType": "YulBlock",
													"src": "3593:44:11",
													"statements": [
														{
															"nativeSrc": "3607:20:11",
															"nodeType": "YulAssignment",
															"src": "3607:20:11",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3617:10:11",
																"nodeType": "YulIdentifier",
																"src": "3617:10:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3607:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3607:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1316,
														"isOffset": false,
														"isSlot": true,
														"src": "3607:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1312,
														"isOffset": false,
														"isSlot": true,
														"src": "3617:10:11",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1318,
												"nodeType": "InlineAssembly",
												"src": "3568:69:11"
											}
										]
									},
									"documentation": {
										"id": 1310,
										"nodeType": "StructuredDocumentation",
										"src": "3362:101:11",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3477:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3506:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "3491:20:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3491:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:22:11"
									},
									"returnParameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3555:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "3536:20:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1240_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1315,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1314,
														"name": "StringSlot",
														"nameLocations": [
															"3536:10:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1240,
														"src": "3536:10:11"
													},
													"referencedDeclaration": 1240,
													"src": "3536:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1240_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:22:11"
									},
									"scope": 1343,
									"src": "3468:175:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1330,
										"nodeType": "Block",
										"src": "3818:79:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3853:38:11",
													"nodeType": "YulBlock",
													"src": "3853:38:11",
													"statements": [
														{
															"nativeSrc": "3867:14:11",
															"nodeType": "YulAssignment",
															"src": "3867:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "3877:4:11",
																"nodeType": "YulIdentifier",
																"src": "3877:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3867:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3867:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": true,
														"src": "3867:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1323,
														"isOffset": false,
														"isSlot": false,
														"src": "3877:4:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1329,
												"nodeType": "InlineAssembly",
												"src": "3828:63:11"
											}
										]
									},
									"documentation": {
										"id": 1321,
										"nodeType": "StructuredDocumentation",
										"src": "3649:84:11",
										"text": " @dev Returns a `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3747:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3768:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "3760:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1322,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:14:11"
									},
									"returnParameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3815:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "3797:19:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1243_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1326,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1325,
														"name": "BytesSlot",
														"nameLocations": [
															"3797:9:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1243,
														"src": "3797:9:11"
													},
													"referencedDeclaration": 1243,
													"src": "3797:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1243_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:21:11"
									},
									"scope": 1343,
									"src": "3738:159:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1341,
										"nodeType": "Block",
										"src": "4094:85:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4129:44:11",
													"nodeType": "YulBlock",
													"src": "4129:44:11",
													"statements": [
														{
															"nativeSrc": "4143:20:11",
															"nodeType": "YulAssignment",
															"src": "4143:20:11",
															"value": {
																"name": "store.slot",
																"nativeSrc": "4153:10:11",
																"nodeType": "YulIdentifier",
																"src": "4153:10:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4143:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4143:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1338,
														"isOffset": false,
														"isSlot": true,
														"src": "4143:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1334,
														"isOffset": false,
														"isSlot": true,
														"src": "4153:10:11",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1340,
												"nodeType": "InlineAssembly",
												"src": "4104:69:11"
											}
										]
									},
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "3903:99:11",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "4016:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4043:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "4029:19:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1333,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4029:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4028:21:11"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4091:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "4073:19:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1243_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1337,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1336,
														"name": "BytesSlot",
														"nameLocations": [
															"4073:9:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1243,
														"src": "4073:9:11"
													},
													"referencedDeclaration": 1243,
													"src": "4073:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1243_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4072:21:11"
									},
									"scope": 1343,
									"src": "4007:172:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1344,
							"src": "1407:2774:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3989:11"
				},
				"id": 11
			},
			"BEACON/logicBeaconBox.sol": {
				"ast": {
					"absolutePath": "BEACON/logicBeaconBox.sol",
					"exportedSymbols": {
						"BeaconBoxV1": [
							1403
						],
						"BeaconBoxV2": [
							1458
						],
						"BeaconProxy": [
							556
						],
						"ERC1967Utils": [
							462
						],
						"IBeacon": [
							566
						],
						"Initializable": [
							908
						],
						"Ownable": [
							147
						],
						"Proxy": [
							498
						],
						"UpgradeableBeacon": [
							654
						]
					},
					"id": 1459,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1345,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
							"id": 1346,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1459,
							"sourceUnit": 909,
							"src": "146:63:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
							"file": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
							"id": 1347,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1459,
							"sourceUnit": 557,
							"src": "332:62:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
							"file": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
							"id": 1348,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1459,
							"sourceUnit": 655,
							"src": "466:68:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1349,
										"name": "Initializable",
										"nameLocations": [
											"631:13:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 908,
										"src": "631:13:12"
									},
									"id": 1350,
									"nodeType": "InheritanceSpecifier",
									"src": "631:13:12"
								}
							],
							"canonicalName": "BeaconBoxV1",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1403,
							"linearizedBaseContracts": [
								1403,
								908
							],
							"name": "BeaconBoxV1",
							"nameLocation": "616:11:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1352,
									"mutability": "mutable",
									"name": "_count",
									"nameLocation": "665:6:12",
									"nodeType": "VariableDeclaration",
									"scope": 1403,
									"src": "652:19:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1351,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "652:4:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1355,
										"nodeType": "Block",
										"src": "707:3:12",
										"statements": []
									},
									"id": 1356,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "687:2:12"
									},
									"returnParameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "707:0:12"
									},
									"scope": 1403,
									"src": "680:30:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1367,
										"nodeType": "Block",
										"src": "764:30:12",
										"statements": [
											{
												"expression": {
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1363,
														"name": "_count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1352,
														"src": "775:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1364,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1358,
														"src": "784:2:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "775:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1366,
												"nodeType": "ExpressionStatement",
												"src": "775:11:12"
											}
										]
									},
									"functionSelector": "fe4b84df",
									"id": 1368,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1361,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1360,
												"name": "initializer",
												"nameLocations": [
													"752:11:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 762,
												"src": "752:11:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "752:11:12"
										}
									],
									"name": "initialize",
									"nameLocation": "725:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "_x",
												"nameLocation": "741:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "736:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1357,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "736:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "735:9:12"
									},
									"returnParameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "764:0:12"
									},
									"scope": 1403,
									"src": "716:78:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1375,
										"nodeType": "Block",
										"src": "850:32:12",
										"statements": [
											{
												"expression": {
													"id": 1373,
													"name": "_count",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1352,
													"src": "868:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1372,
												"id": 1374,
												"nodeType": "Return",
												"src": "861:13:12"
											}
										]
									},
									"functionSelector": "a87d942c",
									"id": 1376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCount",
									"nameLocation": "812:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:2:12"
									},
									"returnParameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "845:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1370,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "845:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "844:6:12"
									},
									"scope": 1403,
									"src": "803:79:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1385,
										"nodeType": "Block",
										"src": "927:37:12",
										"statements": [
											{
												"expression": {
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1381,
														"name": "_count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1352,
														"src": "945:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "955:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "945:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1380,
												"id": 1384,
												"nodeType": "Return",
												"src": "938:18:12"
											}
										]
									},
									"functionSelector": "b7c738f4",
									"id": 1386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cal",
									"nameLocation": "899:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "902:2:12"
									},
									"returnParameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "922:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1378,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "922:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "921:6:12"
									},
									"scope": 1403,
									"src": "890:74:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1401,
										"nodeType": "Block",
										"src": "1042:78:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 1395,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1083:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BeaconBoxV1_$1403",
																		"typeString": "contract BeaconBoxV1"
																	}
																},
																"id": 1396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1088:10:12",
																"memberName": "initialize",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1368,
																"src": "1083:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
																	"typeString": "function (uint256) external"
																}
															},
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1099:8:12",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "1083:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"id": 1398,
															"name": "_x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "1109:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1393,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "1060:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1394,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1064:18:12",
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "1060:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1060:52:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1392,
												"id": 1400,
												"nodeType": "Return",
												"src": "1053:59:12"
											}
										]
									},
									"functionSelector": "1d54036f",
									"id": 1402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInitCalldata",
									"nameLocation": "981:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "_x",
												"nameLocation": "1002:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "997:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1387,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "997:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "996:9:12"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "1029:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1390,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1029:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1028:14:12"
									},
									"scope": 1403,
									"src": "972:148:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1459,
							"src": "607:516:12",
							"usedErrors": [
								671,
								674
							],
							"usedEvents": [
								679
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1404,
										"name": "Initializable",
										"nameLocations": [
											"1151:13:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 908,
										"src": "1151:13:12"
									},
									"id": 1405,
									"nodeType": "InheritanceSpecifier",
									"src": "1151:13:12"
								}
							],
							"canonicalName": "BeaconBoxV2",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1458,
							"linearizedBaseContracts": [
								1458,
								908
							],
							"name": "BeaconBoxV2",
							"nameLocation": "1136:11:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1407,
									"mutability": "mutable",
									"name": "_count",
									"nameLocation": "1185:6:12",
									"nodeType": "VariableDeclaration",
									"scope": 1458,
									"src": "1172:19:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1406,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1172:4:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1410,
										"nodeType": "Block",
										"src": "1227:3:12",
										"statements": []
									},
									"id": 1411,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1207:2:12"
									},
									"returnParameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:0:12"
									},
									"scope": 1458,
									"src": "1200:30:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1422,
										"nodeType": "Block",
										"src": "1284:30:12",
										"statements": [
											{
												"expression": {
													"id": 1420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1418,
														"name": "_count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "1295:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1419,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1413,
														"src": "1304:2:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1295:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1421,
												"nodeType": "ExpressionStatement",
												"src": "1295:11:12"
											}
										]
									},
									"functionSelector": "fe4b84df",
									"id": 1423,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1416,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1415,
												"name": "initializer",
												"nameLocations": [
													"1272:11:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 762,
												"src": "1272:11:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1272:11:12"
										}
									],
									"name": "initialize",
									"nameLocation": "1245:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "_x",
												"nameLocation": "1261:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "1256:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1412,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1256:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1255:9:12"
									},
									"returnParameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1284:0:12"
									},
									"scope": 1458,
									"src": "1236:78:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1430,
										"nodeType": "Block",
										"src": "1370:32:12",
										"statements": [
											{
												"expression": {
													"id": 1428,
													"name": "_count",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1407,
													"src": "1388:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1427,
												"id": 1429,
												"nodeType": "Return",
												"src": "1381:13:12"
											}
										]
									},
									"functionSelector": "a87d942c",
									"id": 1431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCount",
									"nameLocation": "1332:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1340:2:12"
									},
									"returnParameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "1365:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1365:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1364:6:12"
									},
									"scope": 1458,
									"src": "1323:79:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1440,
										"nodeType": "Block",
										"src": "1447:37:12",
										"statements": [
											{
												"expression": {
													"id": 1438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1436,
														"name": "_count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "1465:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"hexValue": "32",
														"id": 1437,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1475:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "1465:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1435,
												"id": 1439,
												"nodeType": "Return",
												"src": "1458:18:12"
											}
										]
									},
									"functionSelector": "b7c738f4",
									"id": 1441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cal",
									"nameLocation": "1419:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1422:2:12"
									},
									"returnParameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "1442:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1433,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1442:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1441:6:12"
									},
									"scope": 1458,
									"src": "1410:74:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1456,
										"nodeType": "Block",
										"src": "1562:78:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 1450,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1603:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BeaconBoxV2_$1458",
																		"typeString": "contract BeaconBoxV2"
																	}
																},
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1608:10:12",
																"memberName": "initialize",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1423,
																"src": "1603:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
																	"typeString": "function (uint256) external"
																}
															},
															"id": 1452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1619:8:12",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "1603:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"id": 1453,
															"name": "_x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1443,
															"src": "1629:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1448,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "1580:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1449,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1584:18:12",
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "1580:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1580:52:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1447,
												"id": 1455,
												"nodeType": "Return",
												"src": "1573:59:12"
											}
										]
									},
									"functionSelector": "1d54036f",
									"id": 1457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInitCalldata",
									"nameLocation": "1501:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "_x",
												"nameLocation": "1522:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "1517:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1517:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1516:9:12"
									},
									"returnParameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "1549:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1445,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1549:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1548:14:12"
									},
									"scope": 1458,
									"src": "1492:148:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1459,
							"src": "1127:516:12",
							"usedErrors": [
								671,
								674
							],
							"usedEvents": [
								679
							]
						}
					],
					"src": "33:1612:12"
				},
				"id": 12
			}
		}
	}
}